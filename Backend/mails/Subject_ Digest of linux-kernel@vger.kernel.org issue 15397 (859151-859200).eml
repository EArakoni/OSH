Delivered-To: karalar.alpefe@gmail.com
Received: by 2002:aa6:c04f:0:20b0:31f:9dc7:c8fb with SMTP id 15-n2csp236477lky;
        Sat, 18 Oct 2025 06:15:17 -0700 (PDT)
X-Google-Smtp-Source: AGHT+IGhlaHxB5BwTpeu2y/kxUzg4Cny8ctS/QOaEZpNL2VXhTfJFBK3JWGJWeH87tWXctY0UJbh
X-Received: by 2002:a17:90a:ec8b:b0:32e:9a24:2df9 with SMTP id 98e67ed59e1d1-33bcf86c09emr8396625a91.14.1760793317031;
        Sat, 18 Oct 2025 06:15:17 -0700 (PDT)
ARC-Seal: i=1; a=rsa-sha256; t=1760793316; cv=none;
        d=google.com; s=arc-20240605;
        b=XTkcW+VVZ8zl2ggzaV1/U9kI1cwhpqpqXPsj8JxNFqsCrwDe14ac5Q7lie1njcz+tj
         VycoqpGwYJpkT3ADXBSDt3+UcO8gwfOW91DC0fRPSeVx8pdurohITwVXoh4pp/iH/01P
         bVTr1/pVOK8hPQ36CT0wA9/GEmhBA4fnzGZRN2nmquQiel9S7iIaIWAWRX4OyQGbz9y8
         2oBDwyHdU3zrmobQe+DqzgmiRFmpSkeJCK5wX32ETgeC17U+ihcW1Xq2lenRVQi+StlR
         IUqt1ch1ytQ/DXIfuNOjmCN3SUU8YaewyTL3FwPFAEBT4L1MAC7h12/B/Iqa5LnGjzir
         lU2Q==
ARC-Message-Signature: i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20240605;
        h=date:message-id:to:list-unsubscribe:list-subscribe:list-id
         :precedence:subject:mime-version:from:dkim-signature;
        bh=NlRbXVJVBWg9tsqK0BNClvwiJDZMt75WZtWknrVWdEc=;
        fh=+IXsdQJATytoyoV3mDfyvfDDJB1FMQ8penv+EM54pAU=;
        b=WdIfozjGb2Ar7Ry/WVuqczHPd4WZLNKJDN/Mds6g5tKMXk0nUaCjj7xIJmTl/pjtoV
         Ifnr/mkJ7UyoysZthvTrYOSO4czGyXsbb0rJfUJ+1W04bVEZrco7crkCQFpWx/kXT+hH
         7l7ozfXc2fTCKOqqhnwrsZ/YjKzOBKehAob7r5QvtJxG6c9V55f9L7PtzBRU0rNWdRRj
         52zajK0Y2mF1MuCgpRTOB1sN6dWnZ5RrwOF1/uWe+3iVeT2xN/p0ftxVKsd3ZeDdz9zh
         5d8M2NyjfPqFnddIhonVazac8TTcfCADqZs/V6G92maLYTv/xKbJzXmHmVm/asaye8ir
         MeGg==;
        dara=google.com
ARC-Authentication-Results: i=1; mx.google.com;
       dkim=pass header.i=@vger.kernel.org header.s=subspace header.b=ayNe9lAI;
       spf=pass (google.com: domain of linux-kernel+bounces-digest-karalar.alpefe=gmail.com@vger.kernel.org designates 2604:1380:45e3:2400::1 as permitted sender) smtp.mailfrom="linux-kernel+bounces-digest-karalar.alpefe=gmail.com@vger.kernel.org";
       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=vger.kernel.org
Return-Path: <linux-kernel+bounces-digest-karalar.alpefe=gmail.com@vger.kernel.org>
Received: from sv.mirrors.kernel.org (sv.mirrors.kernel.org. [2604:1380:45e3:2400::1])
        by mx.google.com with ESMTPS id 41be03b00d2f7-b6a76b3a64bsi1273399a12.711.2025.10.18.06.15.16
        for <karalar.alpefe@gmail.com>
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 06:15:16 -0700 (PDT)
Received-SPF: pass (google.com: domain of linux-kernel+bounces-digest-karalar.alpefe=gmail.com@vger.kernel.org designates 2604:1380:45e3:2400::1 as permitted sender) client-ip=2604:1380:45e3:2400::1;
Authentication-Results: mx.google.com;
       dkim=pass header.i=@vger.kernel.org header.s=subspace header.b=ayNe9lAI;
       spf=pass (google.com: domain of linux-kernel+bounces-digest-karalar.alpefe=gmail.com@vger.kernel.org designates 2604:1380:45e3:2400::1 as permitted sender) smtp.mailfrom="linux-kernel+bounces-digest-karalar.alpefe=gmail.com@vger.kernel.org";
       dmarc=pass (p=QUARANTINE sp=QUARANTINE dis=NONE) header.from=vger.kernel.org
Received: from smtp.subspace.kernel.org (relay.kernel.org [52.25.139.140])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by sv.mirrors.kernel.org (Postfix) with ESMTPS id 49CFF3B6B24
	for <karalar.alpefe@gmail.com>; Sat, 18 Oct 2025 13:15:16 +0000 (UTC)
Received: from localhost.localdomain (localhost.localdomain [127.0.0.1])
	by smtp.subspace.kernel.org (Postfix) with ESMTP id 05BC91C3BFC
	for <karalar.alpefe@gmail.com>; Sat, 18 Oct 2025 13:15:16 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=vger.kernel.org;
	s=subspace; t=1760793316;
	bh=difq9rz/5SQKvX+8Bn6Pppv9ED4tB7prZP93/2YP0hA=;
	h=From:Subject:List-Id:List-Subscribe:List-Unsubscribe:To:Date:
	 From;
	b=ayNe9lAIE2XckQwz8qVldmf2oKnc/3NnjOTmRML+NseUTV/8i5AaBKH0oWG3HFcbE
	 xRbXK+5t+/7JRcPUy4oiBk3lefVHJ5fehxdUMh67qMy9cjAPJlTC4vz0F/a+R1Ze6x
	 JEDIpR4jUWbYsWI8ff1WyX0RN+gAHBSpjBm2Tkg0=
From: linux-kernel+help@vger.kernel.org
MIME-Version: 1.0
Content-Type: multipart/digest; boundary=63a6ecb663c1d205
Subject: Subject: =?utf-8?q?Digest_of_linux-kernel=40vger.kernel.org_issue_15397_=28859151-859200=29?=
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
To: karalar.alpefe@gmail.com
Message-Id: <20251018131516.05BC91C3BFC@smtp.subspace.kernel.org>
Date: Sat, 18 Oct 2025 13:15:16 +0000 (UTC)


--63a6ecb663c1d205
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Topics (messages 859151 through 859200):
- [PATCH v6 05/10] tpm2-sessions: Remove 'attributes' from tpm_buf_append_auth
-       859151 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v6 06/10] tpm2-sessions: Unmask tpm_buf_append_hmac_session()
-       859152 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v6 07/10] KEYS: trusted: Open code tpm2_buf_append()
-       859153 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v6 08/10] tpm-buf: unify TPM_BUF_BOUNDARY_ERROR and TPM_BUF_OVERFLOW
-       859154 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v6 09/10] tpm-buf: Remove chip parameter from tpm_buf_append_handle
-       859155 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v6 10/10] tpm-buf: Enable managed and stack allocations.
-       859156 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH] docs: trusted-encrypted: fix htmldocs build error
-       859157 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v2] PCI/PM: Prevent runtime suspend before devices are fully initialized
-       859158 - "Rafael J. Wysocki" <rafael@kernel.org>
- 
- [PATCH] crypto: hisilicon/qm - restore original qos values
-       859159 - Chenghai Huang <huangchenghai2@huawei.com>
- 
- [PATCH] tpm_crb: Add idle support for the Arm FF-A start method
-       859160 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v2 3/8] clk: imx: add driver for imx8ulp's sim lpav
-       859161 - kernel test robot <lkp@intel.com>
- 
- sched: update_entity_lag does not handle corner case with task in PI chain
-       859162 - "Luis Claudio R. Goncalves" <lgoncalv@redhat.com>
- 
- [1/3] PCI: j721e: Propagate dev_err_probe return value
-       859163 - Markus Elfring <Markus.Elfring@web.de>
- 
- [PATCH v1] cpuidle: governors: menu: Predict longer idle time when in doubt
-       859164 - "Rafael J. Wysocki" <rafael@kernel.org>
- 
- [GIT PULL] TPM DEVICE DRIVER: tpmdd-next-v6.18-rc2
-       859165 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [GIT PULL] TPM DEVICE DRIVER: tpmdd-next-v6.18-rc2
-       859166 - Jarkko Sakkinen <jarkko@kernel.org>
- 
- [PATCH v4 2/3] pinctrl: cix: Add pin-controller support for sky1
-       859167 - kernel test robot <lkp@intel.com>
- 
- [PATCH v7 00/11] Add Enclustra Arria10 and Cyclone5 SoMs
-       859168 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 01/11] ARM: dts: socfpga: add Enclustra boot-mode dtsi
-       859169 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 02/11] ARM: dts: socfpga: add Enclustra base-board dtsi
-       859170 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 03/11] ARM: dts: socfpga: add Enclustra Mercury SA1
-       859171 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 04/11] dt-bindings: altera: add Enclustra Mercury SA1
-       859172 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 05/11] ARM: dts: socfpga: add Enclustra Mercury+ SA2
-       859173 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 06/11] dt-bindings: altera: add binding for Mercury+ SA2
-       859174 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 07/11] ARM: dts: socfpga: add Mercury AA1 variants
-       859175 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 08/11] dt-bindings: altera: add Mercury AA1 variants
-       859176 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 09/11] ARM: dts: socfpga: removal of generic PE1 dts
-       859177 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 10/11] dt-bindings: altera: removal of generic PE1 dts
-       859178 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH v7 11/11] ARM: dts: socfpga: add Enclustra SoM dts files
-       859179 - Lothar Rubusch <l.rubusch@gmail.com>
- 
- [PATCH] arm64: dts: rockchip: fix eMMC corruption on NanoPC-T6 with A3A444 chips
-       859180 - Hugh Cole-Baker <sigmaris@gmail.com>
- 
- [PATCH v4 2/2] tracing: Add an option to show symbols in _text+offset for function profiler
-       859181 - kernel test robot <lkp@intel.com>
- 
- [PATCH v6 01/17] s390/sha3: Rename conflicting functions
-       859182 - David Howells <dhowells@redhat.com>
- 
- [PATCH RESEND v3] ARM: multi_v7_defconfig add /proc/config.gz
-       859183 - David Heidelberg via B4 Relay <devnull+david.ixit.cz@kernel.org>
- 
- [PATCH v2 2/2] ACPI: TAD: Improve runtime PM using guard macros
-       859184 - "Rafael J. Wysocki" <rafael@kernel.org>
- 
- [PATCH v2 1/2] ACPI: TAD: Rearrange runtime PM operations in acpi_tad_remove()
-       859185 - "Rafael J. Wysocki" <rafael@kernel.org>
- 
- [PATCH v2 0/2] ACPI: TAD: Use auto-cleanup macros for runtime PM
-       859186 - "Rafael J. Wysocki" <rafael@kernel.org>
- 
- [PATCH 1/1] drm/sti: call drm_edid_connector_update when edit is NULL
-       859187 - RaphaÃ«l Gallais-Pou <rgallaispou@gmail.com>
- 
- [PATCH v1] Revert "cpuidle: menu: Avoid discarding useful information"
-       859188 - "Rafael J. Wysocki" <rafael@kernel.org>
- 
- [PATCH v2 1/1] MIPS: Malta: Use pcibios_align_resource() to block io range
-       859189 - Guenter Roeck <linux@roeck-us.net>
- 
- [PATCH] PM: console: Fix memory allocation error handling in pm_vt_switch_required()
-       859190 - "Rafael J. Wysocki" <rafael@kernel.org>
- 
- [PATCH 1/4] drm/sti: hda: add bridge before attaching
-       859191 - RaphaÃ«l Gallais-Pou <rgallaispou@gmail.com>
- 
- [PATCH 2/4] drm/sti: hdmi: add bridge before attaching
-       859192 - RaphaÃ«l Gallais-Pou <rgallaispou@gmail.com>
- 
- [PATCH 3/4] drm/bridge: document that adding a bridge is mandatory before attach
-       859193 - RaphaÃ«l Gallais-Pou <rgallaispou@gmail.com>
- 
- [PATCH 4/4] drm/bridge: add warning for bridges attached without being added
-       859194 - RaphaÃ«l Gallais-Pou <rgallaispou@gmail.com>
- 
- [PATCH v2 1/3] Fix broken maxim-ic.com links to analog.com
-       859195 - Guenter Roeck <linux@roeck-us.net>
- 
- [PATCH 0/4] drm/bridge: enforce drm_bridge_add() before drm_bridge_attach()
-       859196 - RaphaÃ«l Gallais-Pou <rgallaispou@gmail.com>
- 
- [PATCH v2 2/3] Add missing datasheet links for Maxim chips
-       859197 - Guenter Roeck <linux@roeck-us.net>
- 
- [PATCH v2 3/3] Update maxim-ic.com links to analog.com
-       859198 - Guenter Roeck <linux@roeck-us.net>
- 
- [PATCH v4 2/2] iio: adc: Add the NXP SAR ADC support for the s32g2/3 platforms
-       859199 - Jonathan Cameron <jic23@kernel.org>
- 
- [PATCH v4 2/2] iio: adc: Add the NXP SAR ADC support for the s32g2/3 platforms
-       859200 - Jonathan Cameron <jic23@kernel.org>
- 


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859151.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id EF3D3285C98;
	Sat, 18 Oct 2025 11:17:56 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786277; cv=none; b=XMHHseBLfaactKDX58LGvGYqMXKbck2jO1pnyQpsx4b6R3Vx/Wvs0Np6oHoj5WQHgSNKVM8+zezY0iyMAEIUn5tdY9pA3nCRbw6UWVcVM+g0xcOJvLYpha5tvdrpwOwwKXoCuCmUxhbB11Q3N6KR5XbJun1VkrT5qM85jjApwBE=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786277; c=relaxed/simple;
	bh=VpTSKCPhZQKNnV3xX+WsM9i8yXowWhs5/dg4hC9MI8U=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=L3wW9s5RE0y+JUBo9VKPtEZpAjUM+Xx3L3R2Hj0vxwz2pbqnxpyd9C23qd17VHfFJNz8xvs+0HCZGWaLWpi9/ELVlIgStxvJDO/2U/v52aJzTaVD53H1QLvgbwhY7ndIJ3Ual2SdQFuoMx2YIkE1GeY8D3HetZSxazurLK7FxWw=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=ansG3y5U; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="ansG3y5U"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 3A945C4CEF8;
	Sat, 18 Oct 2025 11:17:56 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786276;
	bh=VpTSKCPhZQKNnV3xX+WsM9i8yXowWhs5/dg4hC9MI8U=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=ansG3y5UjdZ5ApL498EGUQPDbo0jBVs1i2h75HCMPIlXghw+rUSYWzvo6fWzTnLED
	 HJDCHohqfU3aPc/fQj8BDRyU3V7ytAdddr12WFlv2xJLgylnLbFBVKcut2uz685ps+
	 0eMPeTwwnD3z65WUI268WTelzpXwWDvf6veaW1EKuQC34XglBxTofQNWUi6VsIzok3
	 mD1gA6007yTtwL1oi16R0E3FVBF57BIl9Ycp0tLsuO96vfYXk6ILdk4rnPmT+j1Spf
	 PLtGoeLUMJ3eb7gNrKQjZ6gAyhuFpfumN23ryOyuksPSc9A/JbLbqXF/NwsKIWa5HJ
	 DNXvoDLBkeatw==
From: Jarkko Sakkinen <jarkko@kernel.org>
To: linux-integrity@vger.kernel.org
Cc: keyring@vger.kernel.org,
	dpsmith@apertussolutions.com,
	ross.philipson@oracle.com,
	Jonathan McDowell <noodles@earth.li>,
	Roberto Sassu <roberto.sassu@huawei.com>,
	Stefano Garzarella <sgarzare@redhat.com>,
	Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>,
	Jonathan McDowell <noodles@meta.com>,
	Peter Huewe <peterhuewe@gmx.de>,
	Jarkko Sakkinen <jarkko@kernel.org>,
	Jason Gunthorpe <jgg@ziepe.ca>,
	Mimi Zohar <zohar@linux.ibm.com>,
	linux-kernel@vger.kernel.org
Subject: [PATCH v6 05/10] tpm2-sessions: Remove 'attributes' from tpm_buf_append_auth
Date: Sat, 18 Oct 2025 14:17:20 +0300
Message-Id: <20251018111725.3116386-6-jarkko@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018111725.3116386-1-jarkko@kernel.org>
References: <20251018111725.3116386-1-jarkko@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>

In a previous bug fix, 'attributes' was added by mistake to
tpm_buf_append_auth(). Remove the parameter.

Fixes: 27184f8905ba ("tpm: Opt-in in disable PCR integrity protection")
Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>
Reviewed-by: Jonathan McDowell <noodles@meta.com>
---
v6:
- No changes.
v5:
- No changes.
v4:
- No changes.
v3:
- No changes
v2:
- Uncorrupt the patch.
---
 drivers/char/tpm/tpm2-cmd.c      | 2 +-
 drivers/char/tpm/tpm2-sessions.c | 5 ++---
 include/linux/tpm.h              | 2 +-
 3 files changed, 4 insertions(+), 5 deletions(-)

diff --git a/drivers/char/tpm/tpm2-cmd.c b/drivers/char/tpm/tpm2-cmd.c
index 97501c567c34..bf8294e3d8f2 100644
--- a/drivers/char/tpm/tpm2-cmd.c
+++ b/drivers/char/tpm/tpm2-cmd.c
@@ -191,7 +191,7 @@ int tpm2_pcr_extend(struct tpm_chip *chip, u32 pcr_idx,
 		tpm_buf_append_hmac_session(chip, &buf, 0, NULL, 0);
 	} else {
 		tpm_buf_append_handle(chip, &buf, pcr_idx);
-		tpm_buf_append_auth(chip, &buf, 0, NULL, 0);
+		tpm_buf_append_auth(chip, &buf, NULL, 0);
 	}
 
 	tpm_buf_append_u32(&buf, chip->nr_allocated_banks);
diff --git a/drivers/char/tpm/tpm2-sessions.c b/drivers/char/tpm/tpm2-sessions.c
index 6d03c224e6b2..13f019d1312a 100644
--- a/drivers/char/tpm/tpm2-sessions.c
+++ b/drivers/char/tpm/tpm2-sessions.c
@@ -266,7 +266,7 @@ void tpm_buf_append_name(struct tpm_chip *chip, struct tpm_buf *buf,
 EXPORT_SYMBOL_GPL(tpm_buf_append_name);
 
 void tpm_buf_append_auth(struct tpm_chip *chip, struct tpm_buf *buf,
-			 u8 attributes, u8 *passphrase, int passphrase_len)
+			 u8 *passphrase, int passphrase_len)
 {
 	/* offset tells us where the sessions area begins */
 	int offset = buf->handles * 4 + TPM_HEADER_SIZE;
@@ -327,8 +327,7 @@ void tpm_buf_append_hmac_session(struct tpm_chip *chip, struct tpm_buf *buf,
 #endif
 
 	if (!tpm2_chip_auth(chip)) {
-		tpm_buf_append_auth(chip, buf, attributes, passphrase,
-				    passphrase_len);
+		tpm_buf_append_auth(chip, buf, passphrase, passphrase_len);
 		return;
 	}
 
diff --git a/include/linux/tpm.h b/include/linux/tpm.h
index 0e9e043f728c..004680757923 100644
--- a/include/linux/tpm.h
+++ b/include/linux/tpm.h
@@ -534,7 +534,7 @@ void tpm_buf_append_hmac_session(struct tpm_chip *chip, struct tpm_buf *buf,
 				 u8 attributes, u8 *passphrase,
 				 int passphraselen);
 void tpm_buf_append_auth(struct tpm_chip *chip, struct tpm_buf *buf,
-			 u8 attributes, u8 *passphrase, int passphraselen);
+			 u8 *passphrase, int passphraselen);
 static inline void tpm_buf_append_hmac_session_opt(struct tpm_chip *chip,
 						   struct tpm_buf *buf,
 						   u8 attributes,
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859152.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 917382DF6F8;
	Sat, 18 Oct 2025 11:18:01 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786281; cv=none; b=VvVPnOt8eEi2kmUkjUSykwk4B6AAJZEhwuiWOmLr22MRj/P3V7LcugT5uKYA6nCLdv75s+9DsFIFTj9v4qbJGplBXI5zfC8YWVi32flfB+k+pbJChWNIYdKqksX7nzh7twOUYcMmxuoy8k4y1jLD/GuiRLCZbITAt/Pv43tUaLk=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786281; c=relaxed/simple;
	bh=JvR6WwCRiFJoxPQpA9VtseDrvkuHtvTHBHKtiwkz8kU=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=B4akjcLHT3P4SHMfnAbQRzCNKR3lkxFTQuLIl6MKMaZ5XOMrXpJ0k8iC0KEQxds9ff9h+h9orZHiczXJg6NzPBcJlcQGTVlbtnd+HrCOgMQwq/6UwfTPsKvqsrs4sage0SivLV6UdyxiM5WXuRw5pnthtkBXjPdj3u4S0lfISoU=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=NRPWxs9f; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="NRPWxs9f"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id AFFADC4CEFE;
	Sat, 18 Oct 2025 11:18:00 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786281;
	bh=JvR6WwCRiFJoxPQpA9VtseDrvkuHtvTHBHKtiwkz8kU=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=NRPWxs9fqFz72IcR2HXUPphidjf09PQLK6dnRRTIQ9c2RsVa+LCA0/VwcW8wZIX9z
	 Lc0P9IDX97jY3rq2B0/gtjC8bkAf+2EPbbiJ0x6xORpsZMvgqHtSlbxIEE0k9C+1Lb
	 m0p+8o2e9rMbksDQ1pYAp0DSkUtcPxQTN3PhQri6Ilk+0rnF2BPUfIWZqMJRnfBG0y
	 zkE/6Vdx4kwKSCx5vgzbiuW/65Vy5YrZtLIkHLlnYyai/bU6boX5uxFNxG2fP+lrFz
	 dvUo8T68rPb3BGeKICXkSoEuRY+6o2N/o87f11ZBTbQg3qioEBU98sBxLCKCk9oZv3
	 3x6I4OuuUEZkA==
From: Jarkko Sakkinen <jarkko@kernel.org>
To: linux-integrity@vger.kernel.org
Cc: keyring@vger.kernel.org,
	dpsmith@apertussolutions.com,
	ross.philipson@oracle.com,
	Jonathan McDowell <noodles@earth.li>,
	Roberto Sassu <roberto.sassu@huawei.com>,
	Stefano Garzarella <sgarzare@redhat.com>,
	Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>,
	Jonathan McDowell <noodles@meta.com>,
	Peter Huewe <peterhuewe@gmx.de>,
	Jarkko Sakkinen <jarkko@kernel.org>,
	Jason Gunthorpe <jgg@ziepe.ca>,
	James Bottomley <James.Bottomley@HansenPartnership.com>,
	Mimi Zohar <zohar@linux.ibm.com>,
	David Howells <dhowells@redhat.com>,
	Paul Moore <paul@paul-moore.com>,
	James Morris <jmorris@namei.org>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	linux-kernel@vger.kernel.org,
	keyrings@vger.kernel.org,
	linux-security-module@vger.kernel.org
Subject: [PATCH v6 06/10] tpm2-sessions: Unmask tpm_buf_append_hmac_session()
Date: Sat, 18 Oct 2025 14:17:21 +0300
Message-Id: <20251018111725.3116386-7-jarkko@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018111725.3116386-1-jarkko@kernel.org>
References: <20251018111725.3116386-1-jarkko@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>

Open code tpm_buf_append_hmac_session_opt() in order to unmask the code
paths in the call sites of tpm_buf_append_hmac_session().

Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>
Reviewed-by: Jonathan McDowell <noodles@meta.com>
---
v6:
- No changes.
v5:
- No changes.
v4:
- Fixed typo in short summary.
v3:
- No changes.
v2:
- Uncorrupt the patch.
---
 drivers/char/tpm/tpm2-cmd.c               | 14 +++++++++++---
 include/linux/tpm.h                       | 23 -----------------------
 security/keys/trusted-keys/trusted_tpm2.c | 12 ++++++++++--
 3 files changed, 21 insertions(+), 28 deletions(-)

diff --git a/drivers/char/tpm/tpm2-cmd.c b/drivers/char/tpm/tpm2-cmd.c
index bf8294e3d8f2..254003e5dd8b 100644
--- a/drivers/char/tpm/tpm2-cmd.c
+++ b/drivers/char/tpm/tpm2-cmd.c
@@ -257,9 +257,17 @@ int tpm2_get_random(struct tpm_chip *chip, u8 *dest, size_t max)
 
 	do {
 		tpm_buf_reset(&buf, TPM2_ST_SESSIONS, TPM2_CC_GET_RANDOM);
-		tpm_buf_append_hmac_session_opt(chip, &buf, TPM2_SA_ENCRYPT
-						| TPM2_SA_CONTINUE_SESSION,
-						NULL, 0);
+		if (tpm2_chip_auth(chip)) {
+			tpm_buf_append_hmac_session(chip, &buf,
+						    TPM2_SA_ENCRYPT |
+						    TPM2_SA_CONTINUE_SESSION,
+						    NULL, 0);
+		} else  {
+			offset = buf.handles * 4 + TPM_HEADER_SIZE;
+			head = (struct tpm_header *)buf.data;
+			if (tpm_buf_length(&buf) == offset)
+				head->tag = cpu_to_be16(TPM2_ST_NO_SESSIONS);
+		}
 		tpm_buf_append_u16(&buf, num_bytes);
 		tpm_buf_fill_hmac_session(chip, &buf);
 		err = tpm_transmit_cmd(chip, &buf,
diff --git a/include/linux/tpm.h b/include/linux/tpm.h
index 004680757923..973458a38250 100644
--- a/include/linux/tpm.h
+++ b/include/linux/tpm.h
@@ -535,29 +535,6 @@ void tpm_buf_append_hmac_session(struct tpm_chip *chip, struct tpm_buf *buf,
 				 int passphraselen);
 void tpm_buf_append_auth(struct tpm_chip *chip, struct tpm_buf *buf,
 			 u8 *passphrase, int passphraselen);
-static inline void tpm_buf_append_hmac_session_opt(struct tpm_chip *chip,
-						   struct tpm_buf *buf,
-						   u8 attributes,
-						   u8 *passphrase,
-						   int passphraselen)
-{
-	struct tpm_header *head;
-	int offset;
-
-	if (tpm2_chip_auth(chip)) {
-		tpm_buf_append_hmac_session(chip, buf, attributes, passphrase, passphraselen);
-	} else  {
-		offset = buf->handles * 4 + TPM_HEADER_SIZE;
-		head = (struct tpm_header *)buf->data;
-
-		/*
-		 * If the only sessions are optional, the command tag must change to
-		 * TPM2_ST_NO_SESSIONS.
-		 */
-		if (tpm_buf_length(buf) == offset)
-			head->tag = cpu_to_be16(TPM2_ST_NO_SESSIONS);
-	}
-}
 
 #ifdef CONFIG_TCG_TPM2_HMAC
 
diff --git a/security/keys/trusted-keys/trusted_tpm2.c b/security/keys/trusted-keys/trusted_tpm2.c
index 1cd00aad033a..a8cc18d6e9f0 100644
--- a/security/keys/trusted-keys/trusted_tpm2.c
+++ b/security/keys/trusted-keys/trusted_tpm2.c
@@ -479,8 +479,10 @@ static int tpm2_unseal_cmd(struct tpm_chip *chip,
 			   struct trusted_key_options *options,
 			   u32 blob_handle)
 {
+	struct tpm_header *head;
 	struct tpm_buf buf;
 	u16 data_len;
+	int offset;
 	u8 *data;
 	int rc;
 
@@ -515,8 +517,14 @@ static int tpm2_unseal_cmd(struct tpm_chip *chip,
 		tpm2_buf_append_auth(&buf, options->policyhandle,
 				     NULL /* nonce */, 0, 0,
 				     options->blobauth, options->blobauth_len);
-		tpm_buf_append_hmac_session_opt(chip, &buf, TPM2_SA_ENCRYPT,
-						NULL, 0);
+		if (tpm2_chip_auth(chip)) {
+			tpm_buf_append_hmac_session(chip, &buf, TPM2_SA_ENCRYPT, NULL, 0);
+		} else  {
+			offset = buf.handles * 4 + TPM_HEADER_SIZE;
+			head = (struct tpm_header *)buf.data;
+			if (tpm_buf_length(&buf) == offset)
+				head->tag = cpu_to_be16(TPM2_ST_NO_SESSIONS);
+		}
 	}
 
 	tpm_buf_fill_hmac_session(chip, &buf);
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859153.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 5BEF61643B;
	Sat, 18 Oct 2025 11:18:05 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786285; cv=none; b=CyI72voroLUQeTjWPaxnCLf3n6og2gGW1X6d/yVGMNVM5uj5ikg1wh+YcUbYworD5H/fUuNYK+flbOxXsE/WGSLtRZfvnHtH+2+4YqIDvq79vsPCMhlrDfH1wzwomr5nfOmfWk+gqIrB/wQ7fzTwA1mMapeAqcfXME7RBWI5Ouo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786285; c=relaxed/simple;
	bh=Y0yT3oDOlbSx1R5vllC/tLvssZVGTC6dWl1l0ni0xAg=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=r0q3T0er/1F8fJ7cXQzD85kbLCDjUscQUmNy5a2Fh30PJaZDOhZlDUmrIj8AYESfbocy7VULjmQYmLQB9RkfGVSEO6UIl0L6iMSrsYqQQclxJTYgnt4RVTXJraKFwRAtn7yAlQojc5F3ffQMG2jJY6Dlp17iInsGRrgzMg+mfPQ=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=Q2aHD+Ed; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="Q2aHD+Ed"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id C8263C4CEF8;
	Sat, 18 Oct 2025 11:18:04 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786285;
	bh=Y0yT3oDOlbSx1R5vllC/tLvssZVGTC6dWl1l0ni0xAg=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=Q2aHD+EdpiCvgbGzaD5KxchFIWzfwd51tw44CKljhfGZvfmt3X59T4uz9OyblktI7
	 GnmCTgPLeedROZ7iBjUEbuLplXQto8bLJczaapjsIRkAdACZ9Ku6fRQbwmJfN8/rh2
	 G+aH74PWHYHnr/zysdgJCxlIG9BqK+dDIqNiTmkVBPFYMPnJE0QuU8XG/8dLAKYFfa
	 atbudeZdDOqwH2WhxtDZqMh6WbWqlLuMoPn3OHLgIxgB0+m6axmPbQSCPrEuWmYxXz
	 ULTn2jv9P+AnWyLCmlRgqi9m/B+2V5sLaryhi4C54F2JHsEbUcIFJxbf//KyiqQH70
	 oNK7/3zEgiZug==
From: Jarkko Sakkinen <jarkko@kernel.org>
To: linux-integrity@vger.kernel.org
Cc: keyring@vger.kernel.org,
	dpsmith@apertussolutions.com,
	ross.philipson@oracle.com,
	Jonathan McDowell <noodles@earth.li>,
	Roberto Sassu <roberto.sassu@huawei.com>,
	Stefano Garzarella <sgarzare@redhat.com>,
	Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>,
	James Bottomley <James.Bottomley@HansenPartnership.com>,
	Jarkko Sakkinen <jarkko@kernel.org>,
	Mimi Zohar <zohar@linux.ibm.com>,
	David Howells <dhowells@redhat.com>,
	Paul Moore <paul@paul-moore.com>,
	James Morris <jmorris@namei.org>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	keyrings@vger.kernel.org,
	linux-security-module@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v6 07/10] KEYS: trusted: Open code tpm2_buf_append()
Date: Sat, 18 Oct 2025 14:17:22 +0300
Message-Id: <20251018111725.3116386-8-jarkko@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018111725.3116386-1-jarkko@kernel.org>
References: <20251018111725.3116386-1-jarkko@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>

tpm2_buf_append_auth() has only single call site and most of its parameters
are redundant. Open code it to the call site. Remove illegit FIXME comment
as there is no categorized bug and replace it with more sane comment about
implementation (i.e. "non-opionated inline comment").

Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>
Reviewed-by: Jonathan McDowell <noodles@earth.li>
---
v6:
- No changes.
v5:
- No changes.
v4:
- No changes.
v3:
- No changes.
v2:
- No changes.
---
 security/keys/trusted-keys/trusted_tpm2.c | 51 ++++-------------------
 1 file changed, 9 insertions(+), 42 deletions(-)

diff --git a/security/keys/trusted-keys/trusted_tpm2.c b/security/keys/trusted-keys/trusted_tpm2.c
index a8cc18d6e9f0..74eb1223c3da 100644
--- a/security/keys/trusted-keys/trusted_tpm2.c
+++ b/security/keys/trusted-keys/trusted_tpm2.c
@@ -196,36 +196,6 @@ int tpm2_key_priv(void *context, size_t hdrlen,
 	return 0;
 }
 
-/**
- * tpm2_buf_append_auth() - append TPMS_AUTH_COMMAND to the buffer.
- *
- * @buf: an allocated tpm_buf instance
- * @session_handle: session handle
- * @nonce: the session nonce, may be NULL if not used
- * @nonce_len: the session nonce length, may be 0 if not used
- * @attributes: the session attributes
- * @hmac: the session HMAC or password, may be NULL if not used
- * @hmac_len: the session HMAC or password length, maybe 0 if not used
- */
-static void tpm2_buf_append_auth(struct tpm_buf *buf, u32 session_handle,
-				 const u8 *nonce, u16 nonce_len,
-				 u8 attributes,
-				 const u8 *hmac, u16 hmac_len)
-{
-	tpm_buf_append_u32(buf, 9 + nonce_len + hmac_len);
-	tpm_buf_append_u32(buf, session_handle);
-	tpm_buf_append_u16(buf, nonce_len);
-
-	if (nonce && nonce_len)
-		tpm_buf_append(buf, nonce, nonce_len);
-
-	tpm_buf_append_u8(buf, attributes);
-	tpm_buf_append_u16(buf, hmac_len);
-
-	if (hmac && hmac_len)
-		tpm_buf_append(buf, hmac, hmac_len);
-}
-
 /**
  * tpm2_seal_trusted() - seal the payload of a trusted key
  *
@@ -504,19 +474,16 @@ static int tpm2_unseal_cmd(struct tpm_chip *chip,
 					    options->blobauth_len);
 	} else {
 		/*
-		 * FIXME: The policy session was generated outside the
-		 * kernel so we don't known the nonce and thus can't
-		 * calculate a HMAC on it.  Therefore, the user can
-		 * only really use TPM2_PolicyPassword and we must
-		 * send down the plain text password, which could be
-		 * intercepted.  We can still encrypt the returned
-		 * key, but that's small comfort since the interposer
-		 * could repeat our actions with the exfiltrated
-		 * password.
+		 * The policy session is generated outside the kernel, and thus
+		 * the password will end up being unencrypted on the bus, as
+		 * HMAC nonce cannot be calculated for it.
 		 */
-		tpm2_buf_append_auth(&buf, options->policyhandle,
-				     NULL /* nonce */, 0, 0,
-				     options->blobauth, options->blobauth_len);
+		tpm_buf_append_u32(&buf, 9 + options->blobauth_len);
+		tpm_buf_append_u32(&buf, options->policyhandle);
+		tpm_buf_append_u16(&buf, 0);
+		tpm_buf_append_u8(&buf, 0);
+		tpm_buf_append_u16(&buf, options->blobauth_len);
+		tpm_buf_append(&buf, options->blobauth, options->blobauth_len);
 		if (tpm2_chip_auth(chip)) {
 			tpm_buf_append_hmac_session(chip, &buf, TPM2_SA_ENCRYPT, NULL, 0);
 		} else  {
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859154.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8792E2EC554;
	Sat, 18 Oct 2025 11:18:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786290; cv=none; b=HVxjEZjxVdSsz56wUhu4l0OPyr/WKz59McDPNbqkdCKEYsPpliIpWUfEpPPgvdAvJxYveW/BDnQOuBpRW1/9Ubnam7xghL/nStENCAnsg2z7wVT4FLAN9LAp9WyB4XBlezJ1t+GYf/C+jt4A94MYNfbFBRqKpOE3w1ZiGloodTo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786290; c=relaxed/simple;
	bh=rYD+3EtekAuzaTyNHotcuDeeA5eiWTQXM5VcqjbLk9c=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=YZjf8h3PF9fKtF2LnF2UBmGIffr3sI4C0VfXVn8yIQ3dE14xZ/88BkHg01rR7i32cq31QfXfex9sOJy79qEIJPT7IjydFQhEdZ6yWTG/YutgUdsb/xmwLxqY/2x2Ex+DeXCghdMvZwClIn2+A2IqNZkx0AVH4/OrB0hp0KJgb74=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=OjUSUq9D; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="OjUSUq9D"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 31D3EC4CEF8;
	Sat, 18 Oct 2025 11:18:09 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786289;
	bh=rYD+3EtekAuzaTyNHotcuDeeA5eiWTQXM5VcqjbLk9c=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=OjUSUq9DhaomjzzaO1cvhXaU5ayXsgSmXaOHv1MM+xfjRf1ssXa5wM6yakvAI4ewL
	 k64+zkKgfeJO7ie5kKr/2CeT1fBQ8fxqQM+FjFxkMcLWcsMIb2WDLH0qJQKblXm7FO
	 GUg27sXyJSHR+xICcFtmltul5SsTdEjn5PFu0N/wRSFBoP1PKauanOoI9529KafLA/
	 f3kUAjdnPa++JnwFjAT5YyxSyoH+y+Hf0j5ViM7rxKVpByPQPDB0xc/Vwc62S9KKhX
	 utsYyxvO+VgJlrEAl6p9R6Mcw77LkVuSf0WKl78qkAnKXLe5cQDu+OO4dCP2wqFt6W
	 hbtG46xH5tD9A==
From: Jarkko Sakkinen <jarkko@kernel.org>
To: linux-integrity@vger.kernel.org
Cc: keyring@vger.kernel.org,
	dpsmith@apertussolutions.com,
	ross.philipson@oracle.com,
	Jonathan McDowell <noodles@earth.li>,
	Roberto Sassu <roberto.sassu@huawei.com>,
	Stefano Garzarella <sgarzare@redhat.com>,
	Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>,
	Jonathan McDowell <noodles@meta.com>,
	Peter Huewe <peterhuewe@gmx.de>,
	Jarkko Sakkinen <jarkko@kernel.org>,
	Jason Gunthorpe <jgg@ziepe.ca>,
	James Bottomley <James.Bottomley@HansenPartnership.com>,
	Mimi Zohar <zohar@linux.ibm.com>,
	David Howells <dhowells@redhat.com>,
	Paul Moore <paul@paul-moore.com>,
	James Morris <jmorris@namei.org>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	linux-kernel@vger.kernel.org,
	keyrings@vger.kernel.org,
	linux-security-module@vger.kernel.org
Subject: [PATCH v6 08/10] tpm-buf: unify TPM_BUF_BOUNDARY_ERROR and TPM_BUF_OVERFLOW
Date: Sat, 18 Oct 2025 14:17:23 +0300
Message-Id: <20251018111725.3116386-9-jarkko@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018111725.3116386-1-jarkko@kernel.org>
References: <20251018111725.3116386-1-jarkko@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>

Unify TPM_BUF_BOUNDARY_ERROR and TPM_BUF_OVERFLOW into TPM_BUF_INVALID,
given that they are identical. The only difference are the log messages.

In addition, add a missing TPM_BUF_INVALID check to tpm_buf_append_handle()
following the pattern from other functions in tpm-buf.c.

Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>
Reviewed-by: Jonathan McDowell <noodles@meta.com>
---
v6:
- Change short summary to something more descriptive.
v5:
- No changes.
v4:
- No changes.
v3:
- No changes.
v2:
- A new patch.
---
 drivers/char/tpm/tpm-buf.c                | 14 ++++++++------
 include/linux/tpm.h                       |  8 +++-----
 security/keys/trusted-keys/trusted_tpm2.c |  6 +++---
 3 files changed, 14 insertions(+), 14 deletions(-)

diff --git a/drivers/char/tpm/tpm-buf.c b/drivers/char/tpm/tpm-buf.c
index dc882fc9fa9e..69ee77400539 100644
--- a/drivers/char/tpm/tpm-buf.c
+++ b/drivers/char/tpm/tpm-buf.c
@@ -104,13 +104,12 @@ EXPORT_SYMBOL_GPL(tpm_buf_length);
  */
 void tpm_buf_append(struct tpm_buf *buf, const u8 *new_data, u16 new_length)
 {
-	/* Return silently if overflow has already happened. */
-	if (buf->flags & TPM_BUF_OVERFLOW)
+	if (buf->flags & TPM_BUF_INVALID)
 		return;
 
 	if ((buf->length + new_length) > PAGE_SIZE) {
 		WARN(1, "tpm_buf: write overflow\n");
-		buf->flags |= TPM_BUF_OVERFLOW;
+		buf->flags |= TPM_BUF_INVALID;
 		return;
 	}
 
@@ -157,8 +156,12 @@ EXPORT_SYMBOL_GPL(tpm_buf_append_u32);
  */
 void tpm_buf_append_handle(struct tpm_chip *chip, struct tpm_buf *buf, u32 handle)
 {
+	if (buf->flags & TPM_BUF_INVALID)
+		return;
+
 	if (buf->flags & TPM_BUF_TPM2B) {
 		dev_err(&chip->dev, "Invalid buffer type (TPM2B)\n");
+		buf->flags |= TPM_BUF_INVALID;
 		return;
 	}
 
@@ -177,14 +180,13 @@ static void tpm_buf_read(struct tpm_buf *buf, off_t *offset, size_t count, void
 {
 	off_t next_offset;
 
-	/* Return silently if overflow has already happened. */
-	if (buf->flags & TPM_BUF_BOUNDARY_ERROR)
+	if (buf->flags & TPM_BUF_INVALID)
 		return;
 
 	next_offset = *offset + count;
 	if (next_offset > buf->length) {
 		WARN(1, "tpm_buf: read out of boundary\n");
-		buf->flags |= TPM_BUF_BOUNDARY_ERROR;
+		buf->flags |= TPM_BUF_INVALID;
 		return;
 	}
 
diff --git a/include/linux/tpm.h b/include/linux/tpm.h
index 973458a38250..3eae22a06558 100644
--- a/include/linux/tpm.h
+++ b/include/linux/tpm.h
@@ -369,12 +369,10 @@ struct tpm_header {
 } __packed;
 
 enum tpm_buf_flags {
-	/* the capacity exceeded: */
-	TPM_BUF_OVERFLOW	= BIT(0),
 	/* TPM2B format: */
-	TPM_BUF_TPM2B		= BIT(1),
-	/* read out of boundary: */
-	TPM_BUF_BOUNDARY_ERROR	= BIT(2),
+	TPM_BUF_TPM2B		= BIT(0),
+	/* The buffer is in invalid and unusable state: */
+	TPM_BUF_INVALID		= BIT(1),
 };
 
 /*
diff --git a/security/keys/trusted-keys/trusted_tpm2.c b/security/keys/trusted-keys/trusted_tpm2.c
index 74eb1223c3da..991f9af92eb1 100644
--- a/security/keys/trusted-keys/trusted_tpm2.c
+++ b/security/keys/trusted-keys/trusted_tpm2.c
@@ -293,7 +293,7 @@ int tpm2_seal_trusted(struct tpm_chip *chip,
 	/* creation PCR */
 	tpm_buf_append_u32(&buf, 0);
 
-	if (buf.flags & TPM_BUF_OVERFLOW) {
+	if (buf.flags & TPM_BUF_INVALID) {
 		rc = -E2BIG;
 		tpm2_end_auth_session(chip);
 		goto out;
@@ -306,7 +306,7 @@ int tpm2_seal_trusted(struct tpm_chip *chip,
 		goto out;
 
 	blob_len = tpm_buf_read_u32(&buf, &offset);
-	if (blob_len > MAX_BLOB_SIZE || buf.flags & TPM_BUF_BOUNDARY_ERROR) {
+	if (blob_len > MAX_BLOB_SIZE || buf.flags & TPM_BUF_INVALID) {
 		rc = -E2BIG;
 		goto out;
 	}
@@ -413,7 +413,7 @@ static int tpm2_load_cmd(struct tpm_chip *chip,
 
 	tpm_buf_append(&buf, blob, blob_len);
 
-	if (buf.flags & TPM_BUF_OVERFLOW) {
+	if (buf.flags & TPM_BUF_INVALID) {
 		rc = -E2BIG;
 		tpm2_end_auth_session(chip);
 		goto out;
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859155.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A0E132FB08F;
	Sat, 18 Oct 2025 11:18:14 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786294; cv=none; b=HJeOK5hrdFPwAi/VNW7i+yX0RwcDEArD4w+Y1qXCj9UppM7MZRHdxhDY7+AQlSbe8C35U9ZeAkA2IciZPJwPyOEgfUPe6n9AyuU0lmUoQYCu1o77GvvvMpmKtxFOoESKRPVmSv02eG2FzaUHcI2ckoiCKl3BNXluZSrxe40M9bU=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786294; c=relaxed/simple;
	bh=XpJHX/fukvR1EVJDNCEOJACnshwHu5GcOTkhk6nqXlE=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=d8WtvEEOfJIHWLfSBxNI6YqNBox6IsAFzkxFmHBQpM7QJJXTavWLnldPisCJgTIMlh8GcdQBw/8jDu4FJa/1MhSsOAbpgjFF8/tUpLjx6yr4DQoNtEdq251bjL/azHlMHKqorbJFNzJ4jsiTGgA4ehXEs0v2gkrSRJv6OdPiG1o=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=qr4tMiHe; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="qr4tMiHe"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id C4812C113D0;
	Sat, 18 Oct 2025 11:18:13 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786294;
	bh=XpJHX/fukvR1EVJDNCEOJACnshwHu5GcOTkhk6nqXlE=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=qr4tMiHelniUZ/F/yw4xyyhzvE6bSFToOlDKeIQt8TK+/FnD5KoitnkAwTXcunFRk
	 iLzoWR2daw9Vn8kodrBLQx6u9LqnWh8EG46bRnfVWkAsNbsJ06bvLhMeJmYmDePhQi
	 SaPd8rLazqnjLxWIJd5EfX2ZPnT8VhPj/2BJ7/hBEPnziALkfV27uu9FKlX2lpJCHf
	 VUf8HNzeeDXyankwax/OdecvbcZKJJ5bza5qAGvt3bn7bbyUpCwcleM7swT87ZT+sv
	 X2GUHGa91kMeHaYZLkv0Q4aV9ZH7lf0CvLidqr5VIQHBIIINui4pnvbJhDtQh04RhS
	 aiEihvzFaATjg==
From: Jarkko Sakkinen <jarkko@kernel.org>
To: linux-integrity@vger.kernel.org
Cc: keyring@vger.kernel.org,
	dpsmith@apertussolutions.com,
	ross.philipson@oracle.com,
	Jonathan McDowell <noodles@earth.li>,
	Roberto Sassu <roberto.sassu@huawei.com>,
	Stefano Garzarella <sgarzare@redhat.com>,
	Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>,
	Jonathan McDowell <noodles@meta.com>,
	Peter Huewe <peterhuewe@gmx.de>,
	Jarkko Sakkinen <jarkko@kernel.org>,
	Jason Gunthorpe <jgg@ziepe.ca>,
	linux-kernel@vger.kernel.org
Subject: [PATCH v6 09/10] tpm-buf: Remove chip parameter from tpm_buf_append_handle
Date: Sat, 18 Oct 2025 14:17:24 +0300
Message-Id: <20251018111725.3116386-10-jarkko@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018111725.3116386-1-jarkko@kernel.org>
References: <20251018111725.3116386-1-jarkko@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>

Remove @chip from tpm_buf_append_handle() in order to decouple it from
driver. This allows tpm-buf.c to be compiled as part of early boot code,
thus providing a mechanism to build and parse TPM data.

E.g., Trenchboot can use this to manage TPM2_PcrExtend protocol data as
part of its early boot blob simply by compiling and linking the object
file.

Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>
Reviewed-by: Jonathan McDowell <noodles@meta.com>
---
v6:
- Rewrote the commit message.
v5:
- No changes.
v4:
- No changes.
v3:
- No changes.
v2:
- No changes.
---
 drivers/char/tpm/tpm-buf.c       | 5 ++---
 drivers/char/tpm/tpm2-cmd.c      | 2 +-
 drivers/char/tpm/tpm2-sessions.c | 2 +-
 include/linux/tpm.h              | 2 +-
 4 files changed, 5 insertions(+), 6 deletions(-)

diff --git a/drivers/char/tpm/tpm-buf.c b/drivers/char/tpm/tpm-buf.c
index 69ee77400539..1b9dee0d0681 100644
--- a/drivers/char/tpm/tpm-buf.c
+++ b/drivers/char/tpm/tpm-buf.c
@@ -147,20 +147,19 @@ EXPORT_SYMBOL_GPL(tpm_buf_append_u32);
 
 /**
  * tpm_buf_append_handle() - Add a handle
- * @chip:	&tpm_chip instance
  * @buf:	&tpm_buf instance
  * @handle:	a TPM object handle
  *
  * Add a handle to the buffer, and increase the count tracking the number of
  * handles in the command buffer. Works only for command buffers.
  */
-void tpm_buf_append_handle(struct tpm_chip *chip, struct tpm_buf *buf, u32 handle)
+void tpm_buf_append_handle(struct tpm_buf *buf, u32 handle)
 {
 	if (buf->flags & TPM_BUF_INVALID)
 		return;
 
 	if (buf->flags & TPM_BUF_TPM2B) {
-		dev_err(&chip->dev, "Invalid buffer type (TPM2B)\n");
+		WARN(1, "tpm-buf: invalid type: TPM2B\n");
 		buf->flags |= TPM_BUF_INVALID;
 		return;
 	}
diff --git a/drivers/char/tpm/tpm2-cmd.c b/drivers/char/tpm/tpm2-cmd.c
index 254003e5dd8b..e548b0ac7654 100644
--- a/drivers/char/tpm/tpm2-cmd.c
+++ b/drivers/char/tpm/tpm2-cmd.c
@@ -190,7 +190,7 @@ int tpm2_pcr_extend(struct tpm_chip *chip, u32 pcr_idx,
 		tpm_buf_append_name(chip, &buf, pcr_idx, NULL);
 		tpm_buf_append_hmac_session(chip, &buf, 0, NULL, 0);
 	} else {
-		tpm_buf_append_handle(chip, &buf, pcr_idx);
+		tpm_buf_append_handle(&buf, pcr_idx);
 		tpm_buf_append_auth(chip, &buf, NULL, 0);
 	}
 
diff --git a/drivers/char/tpm/tpm2-sessions.c b/drivers/char/tpm/tpm2-sessions.c
index 13f019d1312a..bbc05f0997a8 100644
--- a/drivers/char/tpm/tpm2-sessions.c
+++ b/drivers/char/tpm/tpm2-sessions.c
@@ -232,7 +232,7 @@ void tpm_buf_append_name(struct tpm_chip *chip, struct tpm_buf *buf,
 #endif
 
 	if (!tpm2_chip_auth(chip)) {
-		tpm_buf_append_handle(chip, buf, handle);
+		tpm_buf_append_handle(buf, handle);
 		return;
 	}
 
diff --git a/include/linux/tpm.h b/include/linux/tpm.h
index 3eae22a06558..6ff76a4b8a53 100644
--- a/include/linux/tpm.h
+++ b/include/linux/tpm.h
@@ -426,7 +426,7 @@ void tpm_buf_append_u32(struct tpm_buf *buf, const u32 value);
 u8 tpm_buf_read_u8(struct tpm_buf *buf, off_t *offset);
 u16 tpm_buf_read_u16(struct tpm_buf *buf, off_t *offset);
 u32 tpm_buf_read_u32(struct tpm_buf *buf, off_t *offset);
-void tpm_buf_append_handle(struct tpm_chip *chip, struct tpm_buf *buf, u32 handle);
+void tpm_buf_append_handle(struct tpm_buf *buf, u32 handle);
 
 /*
  * Check if TPM device is in the firmware upgrade mode.
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859156.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CAC5C1EB9E1;
	Sat, 18 Oct 2025 11:18:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786300; cv=none; b=EAC0oaveJg2LQXXc22iyQL4NR3+9hmBi2oHLOFxxaNSBDAJN8YW/1MW4XXrhLmPAEyGJMQaaAD3/ooBsGikaz8V3JeC3TYVyWI7GDXMwuMyi6z6JObzSD0S2/4RIJDrtymlhxAw0MosPYVTQKnGLBdvojG+d2As2ZyTf+p+ADw0=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786300; c=relaxed/simple;
	bh=nctqSjFjmwBavoJnI3q2nPG4SHsGmb34EYmP7SQIRBI=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=jmyEKscrvzpSQqfAhT6oFS1DnLbJkpxho0VuRsxuy7WYr0A23AYkGnp/+aKEQWcHwSA/9npwUtJzrQhdNCFig8N+E+hd0bvjLCEYAnLuQLaYZydp8kHJI9YSxs4kuNPlxyPCklo+u9r3rNaz2GOjlbOrDTeLyyc/LjiFSjHNZ+I=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=JGC2ndwO; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="JGC2ndwO"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id A3FB2C4CEF8;
	Sat, 18 Oct 2025 11:18:19 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786300;
	bh=nctqSjFjmwBavoJnI3q2nPG4SHsGmb34EYmP7SQIRBI=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=JGC2ndwOfqyIG5n12vj73+13MF8oQFvmgndhfmVJSpkBY354T5oVi0+iCbLfVwC0B
	 1/XFQK/Lkmevp+BPmVgzEXHcapvBt08I1xWJYfaMzQOz7iOhy3aSt81nV8HdNpoWho
	 mLCnK9MQDpXEC2Bcn2Q89qayOk42GhatsqU4drqy7Opka5CTu/pihwPGrBIQyGVEJ8
	 M8I1NXRwfoiqBYp2oJysHpu+uH1JK5+2DRO5tt31KqiLYzLHQAglYe41Nam7F3y3W6
	 KdECOupPAmDJbPpQMLFrNqIq954S2LX6JEPh5dVyOhm6/ns2VjCieiVOLNMC0a2JFo
	 9g+E5mckeSwGg==
From: Jarkko Sakkinen <jarkko@kernel.org>
To: linux-integrity@vger.kernel.org
Cc: keyring@vger.kernel.org,
	dpsmith@apertussolutions.com,
	ross.philipson@oracle.com,
	Jonathan McDowell <noodles@earth.li>,
	Roberto Sassu <roberto.sassu@huawei.com>,
	Stefano Garzarella <sgarzare@redhat.com>,
	Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>,
	Stefan Berger <stefanb@linux.ibm.com>,
	Peter Huewe <peterhuewe@gmx.de>,
	Jarkko Sakkinen <jarkko@kernel.org>,
	Jason Gunthorpe <jgg@ziepe.ca>,
	James Bottomley <James.Bottomley@HansenPartnership.com>,
	Mimi Zohar <zohar@linux.ibm.com>,
	David Howells <dhowells@redhat.com>,
	Paul Moore <paul@paul-moore.com>,
	James Morris <jmorris@namei.org>,
	"Serge E. Hallyn" <serge@hallyn.com>,
	linux-kernel@vger.kernel.org,
	keyrings@vger.kernel.org,
	linux-security-module@vger.kernel.org
Subject: [PATCH v6 10/10] tpm-buf: Enable managed and stack allocations.
Date: Sat, 18 Oct 2025 14:17:25 +0300
Message-Id: <20251018111725.3116386-11-jarkko@kernel.org>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018111725.3116386-1-jarkko@kernel.org>
References: <20251018111725.3116386-1-jarkko@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

From: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>

Decouple kzalloc from buffer creation, so that a managed allocation can be
done trivially:

	struct tpm_buf *buf __free(kfree) buf = kzalloc(TPM_BUFSIZE,
							GFP_KERNEL);
	if (!buf)
		return -ENOMEM;
	tpm_buf_init(buf, TPM_BUFSIZE);

Alternatively, stack allocations are also possible:

	u8 buf_data[512];
	struct tpm_buf *buf = (struct tpm_buf *)buf_data;
	tpm_buf_init(buf, sizeof(buf_data));

Given that every single tpm_transmit_cmd() call site needs to be changed,
place command names from TCG 1.2 and 2.0 specifications to the @dest
parameter, which will e.g., help tracing bugs.

Signed-off-by: Jarkko Sakkinen <jarkko.sakkinen@opinsys.com>
Reviewed-by: Stefan Berger <stefanb@linux.ibm.com>
---
v6
- Update commit message.
v5:
- There was a spurious change in tpm2_seal_trusted() error
  code handling introduce by this patch.
v4:
- Since every single tpm_transmit_cmd() call site needs to be
  changed anyhow, use 'dest' parameter more structured and
  actually useful way, and pick the string TCG 1.2 and 2.0
  specifications.
- tpm1-cmd: Remove useless rc declarations and repliace them
  with trivial "return tpm_transmit_cmd" statement.
- Reverted spurious changes in include/linux/tpm.h.
- Use concisely TPM_BUFSIZE instead of PAGE_SIZE.
v3:
- A new patch from the earlier series with more scoped changes and
  less abstract commit message.
---
 drivers/char/tpm/tpm-buf.c                | 122 +++++----
 drivers/char/tpm/tpm-sysfs.c              |  21 +-
 drivers/char/tpm/tpm.h                    |   1 -
 drivers/char/tpm/tpm1-cmd.c               | 162 +++++-------
 drivers/char/tpm/tpm2-cmd.c               | 299 ++++++++++------------
 drivers/char/tpm/tpm2-sessions.c          | 122 +++++----
 drivers/char/tpm/tpm2-space.c             |  44 ++--
 drivers/char/tpm/tpm_vtpm_proxy.c         |  30 +--
 include/linux/tpm.h                       |  18 +-
 security/keys/trusted-keys/trusted_tpm1.c |  34 ++-
 security/keys/trusted-keys/trusted_tpm2.c | 175 ++++++-------
 11 files changed, 484 insertions(+), 544 deletions(-)

diff --git a/drivers/char/tpm/tpm-buf.c b/drivers/char/tpm/tpm-buf.c
index 1b9dee0d0681..a3bf3c3d0c48 100644
--- a/drivers/char/tpm/tpm-buf.c
+++ b/drivers/char/tpm/tpm-buf.c
@@ -7,82 +7,109 @@
 #include <linux/module.h>
 #include <linux/tpm.h>
 
-/**
- * tpm_buf_init() - Allocate and initialize a TPM command
- * @buf:	A &tpm_buf
- * @tag:	TPM_TAG_RQU_COMMAND, TPM2_ST_NO_SESSIONS or TPM2_ST_SESSIONS
- * @ordinal:	A command ordinal
- *
- * Return: 0 or -ENOMEM
- */
-int tpm_buf_init(struct tpm_buf *buf, u16 tag, u32 ordinal)
+static void __tpm_buf_size_invariant(struct tpm_buf *buf, u16 buf_size)
 {
-	buf->data = (u8 *)__get_free_page(GFP_KERNEL);
-	if (!buf->data)
-		return -ENOMEM;
-
-	tpm_buf_reset(buf, tag, ordinal);
-	return 0;
+	u32 buf_size_2 = (u32)buf->capacity + (u32)sizeof(*buf);
+
+	if (!buf->capacity) {
+		if (buf_size > TPM_BUFSIZE) {
+			WARN(1, "%s: size overflow: %u\n", __func__, buf_size);
+			buf->flags |= TPM_BUF_INVALID;
+		}
+	} else {
+		if (buf_size != buf_size_2) {
+			WARN(1, "%s: size mismatch: %u != %u\n", __func__, buf_size,
+			     buf_size_2);
+			buf->flags |= TPM_BUF_INVALID;
+		}
+	}
 }
-EXPORT_SYMBOL_GPL(tpm_buf_init);
 
-/**
- * tpm_buf_reset() - Initialize a TPM command
- * @buf:	A &tpm_buf
- * @tag:	TPM_TAG_RQU_COMMAND, TPM2_ST_NO_SESSIONS or TPM2_ST_SESSIONS
- * @ordinal:	A command ordinal
- */
-void tpm_buf_reset(struct tpm_buf *buf, u16 tag, u32 ordinal)
+static void __tpm_buf_reset(struct tpm_buf *buf, u16 buf_size, u16 tag, u32 ordinal)
 {
 	struct tpm_header *head = (struct tpm_header *)buf->data;
 
+	__tpm_buf_size_invariant(buf, buf_size);
+
+	if (buf->flags & TPM_BUF_INVALID)
+		return;
+
 	WARN_ON(tag != TPM_TAG_RQU_COMMAND && tag != TPM2_ST_NO_SESSIONS &&
 		tag != TPM2_ST_SESSIONS && tag != 0);
 
 	buf->flags = 0;
 	buf->length = sizeof(*head);
+	buf->capacity = buf_size - sizeof(*buf);
+	buf->handles = 0;
 	head->tag = cpu_to_be16(tag);
 	head->length = cpu_to_be32(sizeof(*head));
 	head->ordinal = cpu_to_be32(ordinal);
+}
+
+static void __tpm_buf_reset_sized(struct tpm_buf *buf, u16 buf_size)
+{
+	__tpm_buf_size_invariant(buf, buf_size);
+
+	if (buf->flags & TPM_BUF_INVALID)
+		return;
+
+	buf->flags = TPM_BUF_TPM2B;
+	buf->length = 2;
+	buf->capacity = buf_size - sizeof(*buf);
 	buf->handles = 0;
+	buf->data[0] = 0;
+	buf->data[1] = 0;
 }
-EXPORT_SYMBOL_GPL(tpm_buf_reset);
 
 /**
- * tpm_buf_init_sized() - Allocate and initialize a sized (TPM2B) buffer
- * @buf:	A @tpm_buf
- *
- * Return: 0 or -ENOMEM
+ * tpm_buf_init() - Initialize a TPM command
+ * @buf:	A &tpm_buf
+ * @buf_size:	Size of the buffer.
  */
-int tpm_buf_init_sized(struct tpm_buf *buf)
+void tpm_buf_init(struct tpm_buf *buf, u16 buf_size)
 {
-	buf->data = (u8 *)__get_free_page(GFP_KERNEL);
-	if (!buf->data)
-		return -ENOMEM;
+	memset(buf, 0, buf_size);
+	__tpm_buf_reset(buf, buf_size, TPM_TAG_RQU_COMMAND, 0);
+}
+EXPORT_SYMBOL_GPL(tpm_buf_init);
 
-	tpm_buf_reset_sized(buf);
-	return 0;
+/**
+ * tpm_buf_init_sized() - Initialize a sized buffer
+ * @buf:	A &tpm_buf
+ * @buf_size:	Size of the buffer.
+ */
+void tpm_buf_init_sized(struct tpm_buf *buf, u16 buf_size)
+{
+	memset(buf, 0, buf_size);
+	__tpm_buf_reset_sized(buf, buf_size);
 }
 EXPORT_SYMBOL_GPL(tpm_buf_init_sized);
 
 /**
- * tpm_buf_reset_sized() - Initialize a sized buffer
+ * tpm_buf_reset() - Re-initialize a TPM command
  * @buf:	A &tpm_buf
+ * @tag:	TPM_TAG_RQU_COMMAND, TPM2_ST_NO_SESSIONS or TPM2_ST_SESSIONS
+ * @ordinal:	A command ordinal
  */
-void tpm_buf_reset_sized(struct tpm_buf *buf)
+void tpm_buf_reset(struct tpm_buf *buf, u16 tag, u32 ordinal)
 {
-	buf->flags = TPM_BUF_TPM2B;
-	buf->length = 2;
-	buf->data[0] = 0;
-	buf->data[1] = 0;
+	u16 buf_size = buf->capacity + sizeof(*buf);
+
+	__tpm_buf_reset(buf, buf_size, tag, ordinal);
 }
-EXPORT_SYMBOL_GPL(tpm_buf_reset_sized);
+EXPORT_SYMBOL_GPL(tpm_buf_reset);
 
-void tpm_buf_destroy(struct tpm_buf *buf)
+/**
+ * tpm_buf_reset_sized() - Re-initialize a sized buffer
+ * @buf:	A &tpm_buf
+ */
+void tpm_buf_reset_sized(struct tpm_buf *buf)
 {
-	free_page((unsigned long)buf->data);
+	u16 buf_size = buf->capacity + sizeof(*buf);
+
+	__tpm_buf_reset_sized(buf, buf_size);
 }
-EXPORT_SYMBOL_GPL(tpm_buf_destroy);
+EXPORT_SYMBOL_GPL(tpm_buf_reset_sized);
 
 /**
  * tpm_buf_length() - Return the number of bytes consumed by the data
@@ -92,6 +119,9 @@ EXPORT_SYMBOL_GPL(tpm_buf_destroy);
  */
 u32 tpm_buf_length(struct tpm_buf *buf)
 {
+	if (buf->flags & TPM_BUF_INVALID)
+		return 0;
+
 	return buf->length;
 }
 EXPORT_SYMBOL_GPL(tpm_buf_length);
@@ -104,10 +134,12 @@ EXPORT_SYMBOL_GPL(tpm_buf_length);
  */
 void tpm_buf_append(struct tpm_buf *buf, const u8 *new_data, u16 new_length)
 {
+	u32 total_length = (u32)buf->length + (u32)new_length;
+
 	if (buf->flags & TPM_BUF_INVALID)
 		return;
 
-	if ((buf->length + new_length) > PAGE_SIZE) {
+	if (total_length > (u32)buf->capacity) {
 		WARN(1, "tpm_buf: write overflow\n");
 		buf->flags |= TPM_BUF_INVALID;
 		return;
diff --git a/drivers/char/tpm/tpm-sysfs.c b/drivers/char/tpm/tpm-sysfs.c
index 94231f052ea7..f5dcadb1ab3c 100644
--- a/drivers/char/tpm/tpm-sysfs.c
+++ b/drivers/char/tpm/tpm-sysfs.c
@@ -32,28 +32,29 @@ struct tpm_readpubek_out {
 static ssize_t pubek_show(struct device *dev, struct device_attribute *attr,
 			  char *buf)
 {
-	struct tpm_buf tpm_buf;
 	struct tpm_readpubek_out *out;
 	int i;
 	char *str = buf;
 	struct tpm_chip *chip = to_tpm_chip(dev);
 	char anti_replay[20];
 
+	struct tpm_buf *tpm_buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!tpm_buf)
+		return -ENOMEM;
+
 	memset(&anti_replay, 0, sizeof(anti_replay));
 
 	if (tpm_try_get_ops(chip))
 		return 0;
 
-	if (tpm_buf_init(&tpm_buf, TPM_TAG_RQU_COMMAND, TPM_ORD_READPUBEK))
-		goto out_ops;
-
-	tpm_buf_append(&tpm_buf, anti_replay, sizeof(anti_replay));
+	tpm_buf_init(tpm_buf, TPM_BUFSIZE);
+	tpm_buf_reset(tpm_buf, TPM_TAG_RQU_COMMAND, TPM_ORD_READPUBEK);
+	tpm_buf_append(tpm_buf, anti_replay, sizeof(anti_replay));
 
-	if (tpm_transmit_cmd(chip, &tpm_buf, READ_PUBEK_RESULT_MIN_BODY_SIZE,
-			     "attempting to read the PUBEK"))
-		goto out_buf;
+	if (tpm_transmit_cmd(chip, tpm_buf, READ_PUBEK_RESULT_MIN_BODY_SIZE, "TPM_ReadPubek"))
+		goto out_ops;
 
-	out = (struct tpm_readpubek_out *)&tpm_buf.data[10];
+	out = (struct tpm_readpubek_out *)&tpm_buf->data[10];
 	str +=
 	    sprintf(str,
 		    "Algorithm: %4ph\n"
@@ -71,8 +72,6 @@ static ssize_t pubek_show(struct device *dev, struct device_attribute *attr,
 	for (i = 0; i < 256; i += 16)
 		str += sprintf(str, "%16ph\n", &out->modulus[i]);
 
-out_buf:
-	tpm_buf_destroy(&tpm_buf);
 out_ops:
 	tpm_put_ops(chip);
 	return str - buf;
diff --git a/drivers/char/tpm/tpm.h b/drivers/char/tpm/tpm.h
index a37712c02e44..ca391b2a211c 100644
--- a/drivers/char/tpm/tpm.h
+++ b/drivers/char/tpm/tpm.h
@@ -32,7 +32,6 @@
 #endif
 
 #define TPM_MINOR		224	/* officially assigned */
-#define TPM_BUFSIZE		4096
 #define TPM_NUM_DEVICES		65536
 #define TPM_RETRY		50
 
diff --git a/drivers/char/tpm/tpm1-cmd.c b/drivers/char/tpm/tpm1-cmd.c
index 5c49bdff33de..10cb5d008c9f 100644
--- a/drivers/char/tpm/tpm1-cmd.c
+++ b/drivers/char/tpm/tpm1-cmd.c
@@ -323,20 +323,14 @@ unsigned long tpm1_calc_ordinal_duration(struct tpm_chip *chip, u32 ordinal)
  */
 static int tpm1_startup(struct tpm_chip *chip)
 {
-	struct tpm_buf buf;
-	int rc;
-
-	dev_info(&chip->dev, "starting up the TPM manually\n");
-
-	rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_STARTUP);
-	if (rc < 0)
-		return rc;
-
-	tpm_buf_append_u16(&buf, TPM_ST_CLEAR);
-
-	rc = tpm_transmit_cmd(chip, &buf, 0, "attempting to start the TPM");
-	tpm_buf_destroy(&buf);
-	return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_STARTUP);
+	tpm_buf_append_u16(buf, TPM_ST_CLEAR);
+	return tpm_transmit_cmd(chip, buf, 0, "TPM_Startup");
 }
 
 int tpm1_get_timeouts(struct tpm_chip *chip)
@@ -463,50 +457,45 @@ int tpm1_get_timeouts(struct tpm_chip *chip)
 int tpm1_pcr_extend(struct tpm_chip *chip, u32 pcr_idx, const u8 *hash,
 		    const char *log_msg)
 {
-	struct tpm_buf buf;
-	int rc;
-
-	rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_PCR_EXTEND);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
-	tpm_buf_append_u32(&buf, pcr_idx);
-	tpm_buf_append(&buf, hash, TPM_DIGEST_SIZE);
-
-	rc = tpm_transmit_cmd(chip, &buf, TPM_DIGEST_SIZE, log_msg);
-	tpm_buf_destroy(&buf);
-	return rc;
+	tpm_buf_append_u32(buf, pcr_idx);
+	tpm_buf_append(buf, hash, TPM_DIGEST_SIZE);
+	return tpm_transmit_cmd(chip, buf, TPM_DIGEST_SIZE, log_msg);
 }
 
 #define TPM_ORD_GET_CAP 101
 ssize_t tpm1_getcap(struct tpm_chip *chip, u32 subcap_id, cap_t *cap,
 		    const char *desc, size_t min_cap_length)
 {
-	struct tpm_buf buf;
 	int rc;
 
-	rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_GET_CAP);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_GET_CAP);
 
 	if (subcap_id == TPM_CAP_VERSION_1_1 ||
 	    subcap_id == TPM_CAP_VERSION_1_2) {
-		tpm_buf_append_u32(&buf, subcap_id);
-		tpm_buf_append_u32(&buf, 0);
+		tpm_buf_append_u32(buf, subcap_id);
+		tpm_buf_append_u32(buf, 0);
 	} else {
 		if (subcap_id == TPM_CAP_FLAG_PERM ||
 		    subcap_id == TPM_CAP_FLAG_VOL)
-			tpm_buf_append_u32(&buf, TPM_CAP_FLAG);
+			tpm_buf_append_u32(buf, TPM_CAP_FLAG);
 		else
-			tpm_buf_append_u32(&buf, TPM_CAP_PROP);
+			tpm_buf_append_u32(buf, TPM_CAP_PROP);
 
-		tpm_buf_append_u32(&buf, 4);
-		tpm_buf_append_u32(&buf, subcap_id);
+		tpm_buf_append_u32(buf, 4);
+		tpm_buf_append_u32(buf, subcap_id);
 	}
-	rc = tpm_transmit_cmd(chip, &buf, min_cap_length, desc);
+	rc = tpm_transmit_cmd(chip, buf, min_cap_length, desc);
 	if (!rc)
-		*cap = *(cap_t *)&buf.data[TPM_HEADER_SIZE + 4];
-	tpm_buf_destroy(&buf);
+		*cap = *(cap_t *)&buf->data[TPM_HEADER_SIZE + 4];
 	return rc;
 }
 EXPORT_SYMBOL_GPL(tpm1_getcap);
@@ -531,81 +520,69 @@ int tpm1_get_random(struct tpm_chip *chip, u8 *dest, size_t max)
 {
 	struct tpm1_get_random_out *out;
 	u32 num_bytes =  min_t(u32, max, TPM_MAX_RNG_DATA);
-	struct tpm_buf buf;
 	u32 total = 0;
 	int retries = 5;
 	u32 recd;
 	int rc;
 
-	rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_GET_RANDOM);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
+	tpm_buf_init(buf, TPM_BUFSIZE);
 	do {
-		tpm_buf_append_u32(&buf, num_bytes);
+		tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_GET_RANDOM);
+		tpm_buf_append_u32(buf, num_bytes);
 
-		rc = tpm_transmit_cmd(chip, &buf, sizeof(out->rng_data_len),
-				      "attempting get random");
+		rc = tpm_transmit_cmd(chip, buf, sizeof(out->rng_data_len), "TPM_GetRandom");
 		if (rc) {
 			if (rc > 0)
 				rc = -EIO;
-			goto out;
+			return rc;
 		}
 
-		out = (struct tpm1_get_random_out *)&buf.data[TPM_HEADER_SIZE];
+		out = (struct tpm1_get_random_out *)&buf->data[TPM_HEADER_SIZE];
 
 		recd = be32_to_cpu(out->rng_data_len);
-		if (recd > num_bytes) {
-			rc = -EFAULT;
-			goto out;
-		}
+		if (recd > num_bytes)
+			return -EFAULT;
+
+		if (buf->length < TPM_HEADER_SIZE +
+				  sizeof(out->rng_data_len) + recd)
+			return -EFAULT;
 
-		if (tpm_buf_length(&buf) < TPM_HEADER_SIZE +
-					   sizeof(out->rng_data_len) + recd) {
-			rc = -EFAULT;
-			goto out;
-		}
 		memcpy(dest, out->rng_data, recd);
 
 		dest += recd;
 		total += recd;
 		num_bytes -= recd;
-
-		tpm_buf_reset(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_GET_RANDOM);
 	} while (retries-- && total < max);
 
 	rc = total ? (int)total : -EIO;
-out:
-	tpm_buf_destroy(&buf);
 	return rc;
 }
 
 #define TPM_ORD_PCRREAD 21
 int tpm1_pcr_read(struct tpm_chip *chip, u32 pcr_idx, u8 *res_buf)
 {
-	struct tpm_buf buf;
 	int rc;
 
-	rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_PCRREAD);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
-	tpm_buf_append_u32(&buf, pcr_idx);
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_PCRREAD);
+	tpm_buf_append_u32(buf, pcr_idx);
 
-	rc = tpm_transmit_cmd(chip, &buf, TPM_DIGEST_SIZE,
-			      "attempting to read a pcr value");
+	rc = tpm_transmit_cmd(chip, buf, TPM_DIGEST_SIZE, "TPM_PCRRead");
 	if (rc)
-		goto out;
-
-	if (tpm_buf_length(&buf) < TPM_DIGEST_SIZE) {
-		rc = -EFAULT;
-		goto out;
-	}
+		return rc;
 
-	memcpy(res_buf, &buf.data[TPM_HEADER_SIZE], TPM_DIGEST_SIZE);
+	if (buf->length < TPM_DIGEST_SIZE)
+		return -EFAULT;
 
-out:
-	tpm_buf_destroy(&buf);
+	memcpy(res_buf, &buf->data[TPM_HEADER_SIZE], TPM_DIGEST_SIZE);
 	return rc;
 }
 
@@ -619,16 +596,13 @@ int tpm1_pcr_read(struct tpm_chip *chip, u32 pcr_idx, u8 *res_buf)
  */
 static int tpm1_continue_selftest(struct tpm_chip *chip)
 {
-	struct tpm_buf buf;
-	int rc;
-
-	rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_CONTINUE_SELFTEST);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
-	rc = tpm_transmit_cmd(chip, &buf, 0, "continue selftest");
-	tpm_buf_destroy(&buf);
-	return rc;
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_CONTINUE_SELFTEST);
+	return tpm_transmit_cmd(chip, buf, 0, "TPM_ContinueSelfTest");
 }
 
 /**
@@ -742,22 +716,24 @@ int tpm1_auto_startup(struct tpm_chip *chip)
 int tpm1_pm_suspend(struct tpm_chip *chip, u32 tpm_suspend_pcr)
 {
 	u8 dummy_hash[TPM_DIGEST_SIZE] = { 0 };
-	struct tpm_buf buf;
 	unsigned int try;
 	int rc;
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
 	/* for buggy tpm, flush pcrs with extend to selected dummy */
 	if (tpm_suspend_pcr)
 		rc = tpm1_pcr_extend(chip, tpm_suspend_pcr, dummy_hash,
 				     "extending dummy pcr before suspend");
 
-	rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_SAVESTATE);
-	if (rc)
-		return rc;
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_SAVESTATE);
+
 	/* now do the actual savestate */
 	for (try = 0; try < TPM_RETRY; try++) {
-		rc = tpm_transmit_cmd(chip, &buf, 0, NULL);
+		rc = tpm_transmit_cmd(chip, buf, 0, NULL);
 		/*
 		 * If the TPM indicates that it is too busy to respond to
 		 * this command then retry before giving up.  It can take
@@ -772,7 +748,7 @@ int tpm1_pm_suspend(struct tpm_chip *chip, u32 tpm_suspend_pcr)
 			break;
 		tpm_msleep(TPM_TIMEOUT_RETRY);
 
-		tpm_buf_reset(&buf, TPM_TAG_RQU_COMMAND, TPM_ORD_SAVESTATE);
+		tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_SAVESTATE);
 	}
 
 	if (rc)
@@ -782,7 +758,5 @@ int tpm1_pm_suspend(struct tpm_chip *chip, u32 tpm_suspend_pcr)
 		dev_warn(&chip->dev, "TPM savestate took %dms\n",
 			 try * TPM_TIMEOUT_RETRY);
 
-	tpm_buf_destroy(&buf);
-
 	return rc;
 }
diff --git a/drivers/char/tpm/tpm2-cmd.c b/drivers/char/tpm/tpm2-cmd.c
index e548b0ac7654..768719bbbf04 100644
--- a/drivers/char/tpm/tpm2-cmd.c
+++ b/drivers/char/tpm/tpm2-cmd.c
@@ -104,12 +104,15 @@ int tpm2_pcr_read(struct tpm_chip *chip, u32 pcr_idx,
 {
 	int i;
 	int rc;
-	struct tpm_buf buf;
 	struct tpm2_pcr_read_out *out;
 	u8 pcr_select[TPM2_PCR_SELECT_MIN] = {0};
 	u16 digest_size;
 	u16 expected_digest_size = 0;
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
 	if (pcr_idx >= TPM2_PLATFORM_PCR)
 		return -EINVAL;
 
@@ -124,36 +127,31 @@ int tpm2_pcr_read(struct tpm_chip *chip, u32 pcr_idx,
 		expected_digest_size = chip->allocated_banks[i].digest_size;
 	}
 
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_PCR_READ);
-	if (rc)
-		return rc;
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_PCR_READ);
 
 	pcr_select[pcr_idx >> 3] = 1 << (pcr_idx & 0x7);
 
-	tpm_buf_append_u32(&buf, 1);
-	tpm_buf_append_u16(&buf, digest->alg_id);
-	tpm_buf_append_u8(&buf, TPM2_PCR_SELECT_MIN);
-	tpm_buf_append(&buf, (const unsigned char *)pcr_select,
+	tpm_buf_append_u32(buf, 1);
+	tpm_buf_append_u16(buf, digest->alg_id);
+	tpm_buf_append_u8(buf, TPM2_PCR_SELECT_MIN);
+	tpm_buf_append(buf, (const unsigned char *)pcr_select,
 		       sizeof(pcr_select));
 
-	rc = tpm_transmit_cmd(chip, &buf, 0, "attempting to read a pcr value");
+	rc = tpm_transmit_cmd(chip, buf, 0, "TPM2_PCR_Read");
 	if (rc)
-		goto out;
+		return rc;
 
-	out = (struct tpm2_pcr_read_out *)&buf.data[TPM_HEADER_SIZE];
+	out = (struct tpm2_pcr_read_out *)&buf->data[TPM_HEADER_SIZE];
 	digest_size = be16_to_cpu(out->digest_size);
 	if (digest_size > sizeof(digest->digest) ||
-	    (!digest_size_ptr && digest_size != expected_digest_size)) {
-		rc = -EINVAL;
-		goto out;
-	}
+	    (!digest_size_ptr && digest_size != expected_digest_size))
+		return rc;
 
 	if (digest_size_ptr)
 		*digest_size_ptr = digest_size;
 
 	memcpy(digest->digest, out->digest, digest_size);
-out:
-	tpm_buf_destroy(&buf);
 	return rc;
 }
 
@@ -169,46 +167,45 @@ int tpm2_pcr_read(struct tpm_chip *chip, u32 pcr_idx,
 int tpm2_pcr_extend(struct tpm_chip *chip, u32 pcr_idx,
 		    struct tpm_digest *digests)
 {
-	struct tpm_buf buf;
 	int rc;
 	int i;
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
 	if (!disable_pcr_integrity) {
 		rc = tpm2_start_auth_session(chip);
 		if (rc)
 			return rc;
 	}
 
-	rc = tpm_buf_init(&buf, TPM2_ST_SESSIONS, TPM2_CC_PCR_EXTEND);
-	if (rc) {
-		if (!disable_pcr_integrity)
-			tpm2_end_auth_session(chip);
-		return rc;
-	}
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_SESSIONS, TPM2_CC_PCR_EXTEND);
 
 	if (!disable_pcr_integrity) {
-		tpm_buf_append_name(chip, &buf, pcr_idx, NULL);
-		tpm_buf_append_hmac_session(chip, &buf, 0, NULL, 0);
+		tpm_buf_append_name(chip, buf, pcr_idx, NULL);
+		tpm_buf_append_hmac_session(chip, buf, 0, NULL, 0);
 	} else {
-		tpm_buf_append_handle(&buf, pcr_idx);
-		tpm_buf_append_auth(chip, &buf, NULL, 0);
+		tpm_buf_append_handle(buf, pcr_idx);
+		tpm_buf_append_auth(chip, buf, NULL, 0);
 	}
 
-	tpm_buf_append_u32(&buf, chip->nr_allocated_banks);
+	tpm_buf_append_u32(buf, chip->nr_allocated_banks);
 
 	for (i = 0; i < chip->nr_allocated_banks; i++) {
-		tpm_buf_append_u16(&buf, digests[i].alg_id);
-		tpm_buf_append(&buf, (const unsigned char *)&digests[i].digest,
+		tpm_buf_append_u16(buf, digests[i].alg_id);
+		tpm_buf_append(buf, (const unsigned char *)&digests[i].digest,
 			       chip->allocated_banks[i].digest_size);
 	}
+	if (buf->flags & TPM_BUF_INVALID)
+		return -EINVAL;
 
 	if (!disable_pcr_integrity)
-		tpm_buf_fill_hmac_session(chip, &buf);
-	rc = tpm_transmit_cmd(chip, &buf, 0, "attempting extend a PCR value");
+		tpm_buf_fill_hmac_session(chip, buf);
+	rc = tpm_transmit_cmd(chip, buf, 0, "TPM2_PCR_Extend");
 	if (!disable_pcr_integrity)
-		rc = tpm_buf_check_hmac_response(chip, &buf, rc);
-
-	tpm_buf_destroy(&buf);
+		rc = tpm_buf_check_hmac_response(chip, buf, rc);
 
 	return rc;
 }
@@ -233,7 +230,6 @@ int tpm2_get_random(struct tpm_chip *chip, u8 *dest, size_t max)
 {
 	struct tpm2_get_random_out *out;
 	struct tpm_header *head;
-	struct tpm_buf buf;
 	u32 recd;
 	u32 num_bytes = max;
 	int err;
@@ -245,51 +241,50 @@ int tpm2_get_random(struct tpm_chip *chip, u8 *dest, size_t max)
 	if (!num_bytes || max > TPM_MAX_RNG_DATA)
 		return -EINVAL;
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
 	err = tpm2_start_auth_session(chip);
 	if (err)
 		return err;
 
-	err = tpm_buf_init(&buf, 0, 0);
-	if (err) {
-		tpm2_end_auth_session(chip);
-		return err;
-	}
-
+	tpm_buf_init(buf, TPM_BUFSIZE);
 	do {
-		tpm_buf_reset(&buf, TPM2_ST_SESSIONS, TPM2_CC_GET_RANDOM);
+		tpm_buf_reset(buf, TPM2_ST_SESSIONS, TPM2_CC_GET_RANDOM);
 		if (tpm2_chip_auth(chip)) {
-			tpm_buf_append_hmac_session(chip, &buf,
+			tpm_buf_append_hmac_session(chip, buf,
 						    TPM2_SA_ENCRYPT |
 						    TPM2_SA_CONTINUE_SESSION,
 						    NULL, 0);
 		} else  {
-			offset = buf.handles * 4 + TPM_HEADER_SIZE;
-			head = (struct tpm_header *)buf.data;
-			if (tpm_buf_length(&buf) == offset)
+			offset = buf->handles * 4 + TPM_HEADER_SIZE;
+			head = (struct tpm_header *)buf->data;
+			if (tpm_buf_length(buf) == offset)
 				head->tag = cpu_to_be16(TPM2_ST_NO_SESSIONS);
 		}
-		tpm_buf_append_u16(&buf, num_bytes);
-		tpm_buf_fill_hmac_session(chip, &buf);
-		err = tpm_transmit_cmd(chip, &buf,
+		tpm_buf_append_u16(buf, num_bytes);
+		tpm_buf_fill_hmac_session(chip, buf);
+		err = tpm_transmit_cmd(chip, buf,
 				       offsetof(struct tpm2_get_random_out,
 						buffer),
-				       "attempting get random");
-		err = tpm_buf_check_hmac_response(chip, &buf, err);
+				       "TPM2_GetRandom");
+		err = tpm_buf_check_hmac_response(chip, buf, err);
 		if (err) {
 			if (err > 0)
 				err = -EIO;
 			goto out;
 		}
 
-		head = (struct tpm_header *)buf.data;
+		head = (struct tpm_header *)buf->data;
 		offset = TPM_HEADER_SIZE;
 		/* Skip the parameter size field: */
 		if (be16_to_cpu(head->tag) == TPM2_ST_SESSIONS)
 			offset += 4;
 
-		out = (struct tpm2_get_random_out *)&buf.data[offset];
+		out = (struct tpm2_get_random_out *)&buf->data[offset];
 		recd = min_t(u32, be16_to_cpu(out->size), num_bytes);
-		if (tpm_buf_length(&buf) <
+		if (tpm_buf_length(buf) <
 		    TPM_HEADER_SIZE +
 		    offsetof(struct tpm2_get_random_out, buffer) +
 		    recd) {
@@ -303,11 +298,9 @@ int tpm2_get_random(struct tpm_chip *chip, u8 *dest, size_t max)
 		num_bytes -= recd;
 	} while (retries-- && total < max);
 
-	tpm_buf_destroy(&buf);
-
 	return total ? total : -EIO;
+
 out:
-	tpm_buf_destroy(&buf);
 	tpm2_end_auth_session(chip);
 	return err;
 }
@@ -319,20 +312,18 @@ int tpm2_get_random(struct tpm_chip *chip, u8 *dest, size_t max)
  */
 void tpm2_flush_context(struct tpm_chip *chip, u32 handle)
 {
-	struct tpm_buf buf;
-	int rc;
-
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_FLUSH_CONTEXT);
-	if (rc) {
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf) {
 		dev_warn(&chip->dev, "0x%08x was not flushed, out of memory\n",
 			 handle);
 		return;
 	}
 
-	tpm_buf_append_u32(&buf, handle);
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_FLUSH_CONTEXT);
+	tpm_buf_append_u32(buf, handle);
 
-	tpm_transmit_cmd(chip, &buf, 0, "flushing context");
-	tpm_buf_destroy(&buf);
+	tpm_transmit_cmd(chip, buf, 0, "TPM2_FlushContext");
 }
 EXPORT_SYMBOL_GPL(tpm2_flush_context);
 
@@ -359,19 +350,20 @@ ssize_t tpm2_get_tpm_pt(struct tpm_chip *chip, u32 property_id,  u32 *value,
 			const char *desc)
 {
 	struct tpm2_get_cap_out *out;
-	struct tpm_buf buf;
 	int rc;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
-	if (rc)
-		return rc;
-	tpm_buf_append_u32(&buf, TPM2_CAP_TPM_PROPERTIES);
-	tpm_buf_append_u32(&buf, property_id);
-	tpm_buf_append_u32(&buf, 1);
-	rc = tpm_transmit_cmd(chip, &buf, 0, NULL);
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
+	tpm_buf_append_u32(buf, TPM2_CAP_TPM_PROPERTIES);
+	tpm_buf_append_u32(buf, property_id);
+	tpm_buf_append_u32(buf, 1);
+	rc = tpm_transmit_cmd(chip, buf, 0, NULL);
 	if (!rc) {
-		out = (struct tpm2_get_cap_out *)
-			&buf.data[TPM_HEADER_SIZE];
+		out = (struct tpm2_get_cap_out *)&buf->data[TPM_HEADER_SIZE];
 		/*
 		 * To prevent failing boot up of some systems, Infineon TPM2.0
 		 * returns SUCCESS on TPM2_Startup in field upgrade mode. Also
@@ -383,7 +375,6 @@ ssize_t tpm2_get_tpm_pt(struct tpm_chip *chip, u32 property_id,  u32 *value,
 		else
 			rc = -ENODATA;
 	}
-	tpm_buf_destroy(&buf);
 	return rc;
 }
 EXPORT_SYMBOL_GPL(tpm2_get_tpm_pt);
@@ -400,15 +391,14 @@ EXPORT_SYMBOL_GPL(tpm2_get_tpm_pt);
  */
 void tpm2_shutdown(struct tpm_chip *chip, u16 shutdown_type)
 {
-	struct tpm_buf buf;
-	int rc;
-
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_SHUTDOWN);
-	if (rc)
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
 		return;
-	tpm_buf_append_u16(&buf, shutdown_type);
-	tpm_transmit_cmd(chip, &buf, 0, "stopping the TPM");
-	tpm_buf_destroy(&buf);
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_SHUTDOWN);
+	tpm_buf_append_u16(buf, shutdown_type);
+	tpm_transmit_cmd(chip, buf, 0, "TPM2_Shutdown");
 }
 
 /**
@@ -426,20 +416,19 @@ void tpm2_shutdown(struct tpm_chip *chip, u16 shutdown_type)
  */
 static int tpm2_do_selftest(struct tpm_chip *chip)
 {
-	struct tpm_buf buf;
 	int full;
 	int rc;
 
-	for (full = 0; full < 2; full++) {
-		rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_SELF_TEST);
-		if (rc)
-			return rc;
-
-		tpm_buf_append_u8(&buf, full);
-		rc = tpm_transmit_cmd(chip, &buf, 0,
-				      "attempting the self test");
-		tpm_buf_destroy(&buf);
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_SELF_TEST);
+	for (full = 0; full < 2; full++) {
+		tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_SELF_TEST);
+		tpm_buf_append_u8(buf, full);
+		rc = tpm_transmit_cmd(chip, buf, 0, "TPM2_SelfTest");
 		if (rc == TPM2_RC_TESTING)
 			rc = TPM2_RC_SUCCESS;
 		if (rc == TPM2_RC_INITIALIZE || rc == TPM2_RC_SUCCESS)
@@ -464,23 +453,24 @@ static int tpm2_do_selftest(struct tpm_chip *chip)
 int tpm2_probe(struct tpm_chip *chip)
 {
 	struct tpm_header *out;
-	struct tpm_buf buf;
 	int rc;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
-	if (rc)
-		return rc;
-	tpm_buf_append_u32(&buf, TPM2_CAP_TPM_PROPERTIES);
-	tpm_buf_append_u32(&buf, TPM_PT_TOTAL_COMMANDS);
-	tpm_buf_append_u32(&buf, 1);
-	rc = tpm_transmit_cmd(chip, &buf, 0, NULL);
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
+	tpm_buf_append_u32(buf, TPM2_CAP_TPM_PROPERTIES);
+	tpm_buf_append_u32(buf, TPM_PT_TOTAL_COMMANDS);
+	tpm_buf_append_u32(buf, 1);
+	rc = tpm_transmit_cmd(chip, buf, 0, NULL);
 	/* We ignore TPM return codes on purpose. */
 	if (rc >=  0) {
-		out = (struct tpm_header *)buf.data;
+		out = (struct tpm_header *)buf->data;
 		if (be16_to_cpu(out->tag) == TPM2_ST_NO_SESSIONS)
 			chip->flags |= TPM_CHIP_FLAG_TPM2;
 	}
-	tpm_buf_destroy(&buf);
 	return 0;
 }
 EXPORT_SYMBOL_GPL(tpm2_probe);
@@ -520,7 +510,6 @@ struct tpm2_pcr_selection {
 ssize_t tpm2_get_pcr_allocation(struct tpm_chip *chip)
 {
 	struct tpm2_pcr_selection pcr_selection;
-	struct tpm_buf buf;
 	void *marker;
 	void *end;
 	void *pcr_select_offset;
@@ -532,39 +521,37 @@ ssize_t tpm2_get_pcr_allocation(struct tpm_chip *chip)
 	int rc;
 	int i = 0;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
-	tpm_buf_append_u32(&buf, TPM2_CAP_PCRS);
-	tpm_buf_append_u32(&buf, 0);
-	tpm_buf_append_u32(&buf, 1);
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
+	tpm_buf_append_u32(buf, TPM2_CAP_PCRS);
+	tpm_buf_append_u32(buf, 0);
+	tpm_buf_append_u32(buf, 1);
 
-	rc = tpm_transmit_cmd(chip, &buf, 9, "get tpm pcr allocation");
+	rc = tpm_transmit_cmd(chip, buf, 9, "TPM2_GetCapability(PCRS)");
 	if (rc)
-		goto out;
+		return rc;
 
-	nr_possible_banks = be32_to_cpup(
-		(__be32 *)&buf.data[TPM_HEADER_SIZE + 5]);
+	nr_possible_banks = be32_to_cpup((__be32 *)&buf->data[TPM_HEADER_SIZE + 5]);
 	if (nr_possible_banks > TPM2_MAX_PCR_BANKS) {
 		pr_err("tpm: unexpected number of banks: %u > %u",
 		       nr_possible_banks, TPM2_MAX_PCR_BANKS);
-		rc = -ENOMEM;
-		goto out;
+		return -ENOMEM;
 	}
 
-	marker = &buf.data[TPM_HEADER_SIZE + 9];
+	marker = &buf->data[TPM_HEADER_SIZE + 9];
 
-	rsp_len = be32_to_cpup((__be32 *)&buf.data[2]);
-	end = &buf.data[rsp_len];
+	rsp_len = be32_to_cpup((__be32 *)&buf->data[2]);
+	end = &buf->data[rsp_len];
 
 	for (i = 0; i < nr_possible_banks; i++) {
 		pcr_select_offset = marker +
 			offsetof(struct tpm2_pcr_selection, size_of_select);
-		if (pcr_select_offset >= end) {
-			rc = -EFAULT;
-			break;
-		}
+		if (pcr_select_offset >= end)
+			return -EFAULT;
 
 		memcpy(&pcr_selection, marker, sizeof(pcr_selection));
 		hash_alg = be16_to_cpu(pcr_selection.hash_alg);
@@ -576,7 +563,7 @@ ssize_t tpm2_get_pcr_allocation(struct tpm_chip *chip)
 
 			rc = tpm2_init_bank_info(chip, nr_alloc_banks);
 			if (rc < 0)
-				break;
+				return rc;
 
 			nr_alloc_banks++;
 		}
@@ -588,21 +575,21 @@ ssize_t tpm2_get_pcr_allocation(struct tpm_chip *chip)
 	}
 
 	chip->nr_allocated_banks = nr_alloc_banks;
-out:
-	tpm_buf_destroy(&buf);
-
-	return rc;
+	return 0;
 }
 
 int tpm2_get_cc_attrs_tbl(struct tpm_chip *chip)
 {
-	struct tpm_buf buf;
 	u32 nr_commands;
 	__be32 *attrs;
 	u32 cc;
 	int i;
 	int rc;
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
 	rc = tpm2_get_tpm_pt(chip, TPM_PT_TOTAL_COMMANDS, &nr_commands, NULL);
 	if (rc)
 		goto out;
@@ -619,30 +606,24 @@ int tpm2_get_cc_attrs_tbl(struct tpm_chip *chip)
 		goto out;
 	}
 
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
-	if (rc)
-		goto out;
-
-	tpm_buf_append_u32(&buf, TPM2_CAP_COMMANDS);
-	tpm_buf_append_u32(&buf, TPM2_CC_FIRST);
-	tpm_buf_append_u32(&buf, nr_commands);
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_GET_CAPABILITY);
+	tpm_buf_append_u32(buf, TPM2_CAP_COMMANDS);
+	tpm_buf_append_u32(buf, TPM2_CC_FIRST);
+	tpm_buf_append_u32(buf, nr_commands);
 
-	rc = tpm_transmit_cmd(chip, &buf, 9 + 4 * nr_commands, NULL);
-	if (rc) {
-		tpm_buf_destroy(&buf);
+	rc = tpm_transmit_cmd(chip, buf, 9 + 4 * nr_commands, NULL);
+	if (rc)
 		goto out;
-	}
 
-	if (nr_commands !=
-	    be32_to_cpup((__be32 *)&buf.data[TPM_HEADER_SIZE + 5])) {
+	if (nr_commands != be32_to_cpup((__be32 *)&buf->data[TPM_HEADER_SIZE + 5])) {
 		rc = -EFAULT;
-		tpm_buf_destroy(&buf);
 		goto out;
 	}
 
 	chip->nr_commands = nr_commands;
 
-	attrs = (__be32 *)&buf.data[TPM_HEADER_SIZE + 9];
+	attrs = (__be32 *)&buf->data[TPM_HEADER_SIZE + 9];
 	for (i = 0; i < nr_commands; i++, attrs++) {
 		chip->cc_attrs_tbl[i] = be32_to_cpup(attrs);
 		cc = chip->cc_attrs_tbl[i] & 0xFFFF;
@@ -654,8 +635,6 @@ int tpm2_get_cc_attrs_tbl(struct tpm_chip *chip)
 		}
 	}
 
-	tpm_buf_destroy(&buf);
-
 out:
 	if (rc > 0)
 		rc = -ENODEV;
@@ -676,20 +655,14 @@ EXPORT_SYMBOL_GPL(tpm2_get_cc_attrs_tbl);
 
 static int tpm2_startup(struct tpm_chip *chip)
 {
-	struct tpm_buf buf;
-	int rc;
-
-	dev_info(&chip->dev, "starting up the TPM manually\n");
-
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_STARTUP);
-	if (rc < 0)
-		return rc;
-
-	tpm_buf_append_u16(&buf, TPM2_SU_CLEAR);
-	rc = tpm_transmit_cmd(chip, &buf, 0, "attempting to start the TPM");
-	tpm_buf_destroy(&buf);
-
-	return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_STARTUP);
+	tpm_buf_append_u16(buf, TPM2_SU_CLEAR);
+	return tpm_transmit_cmd(chip, buf, 0, "TPM2_Startup");
 }
 
 /**
diff --git a/drivers/char/tpm/tpm2-sessions.c b/drivers/char/tpm/tpm2-sessions.c
index bbc05f0997a8..378b8d21b10c 100644
--- a/drivers/char/tpm/tpm2-sessions.c
+++ b/drivers/char/tpm/tpm2-sessions.c
@@ -182,19 +182,18 @@ static int tpm2_parse_read_public(char *name, struct tpm_buf *buf)
 
 static int tpm2_read_public(struct tpm_chip *chip, u32 handle, char *name)
 {
-	struct tpm_buf buf;
 	int rc;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_READ_PUBLIC);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
-	tpm_buf_append_u32(&buf, handle);
-	rc = tpm_transmit_cmd(chip, &buf, 0, "read public");
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_READ_PUBLIC);
+	tpm_buf_append_u32(buf, handle);
+	rc = tpm_transmit_cmd(chip, buf, 0, "TPM2_ReadPublic");
 	if (rc == TPM2_RC_SUCCESS)
-		rc = tpm2_parse_read_public(name, &buf);
-
-	tpm_buf_destroy(&buf);
+		rc = tpm2_parse_read_public(name, buf);
 
 	return rc;
 }
@@ -924,7 +923,6 @@ static int tpm2_load_null(struct tpm_chip *chip, u32 *null_key)
 int tpm2_start_auth_session(struct tpm_chip *chip)
 {
 	struct tpm2_auth *auth;
-	struct tpm_buf buf;
 	u32 null_key;
 	int rc;
 
@@ -933,6 +931,10 @@ int tpm2_start_auth_session(struct tpm_chip *chip)
 		return 0;
 	}
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
 	auth = kzalloc(sizeof(*auth), GFP_KERNEL);
 	if (!auth)
 		return -ENOMEM;
@@ -943,41 +945,37 @@ int tpm2_start_auth_session(struct tpm_chip *chip)
 
 	auth->session = TPM_HEADER_SIZE;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_NO_SESSIONS, TPM2_CC_START_AUTH_SESS);
-	if (rc)
-		goto out;
-
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_NO_SESSIONS, TPM2_CC_START_AUTH_SESS);
 	/* salt key handle */
-	tpm_buf_append_u32(&buf, null_key);
+	tpm_buf_append_u32(buf, null_key);
 	/* bind key handle */
-	tpm_buf_append_u32(&buf, TPM2_RH_NULL);
+	tpm_buf_append_u32(buf, TPM2_RH_NULL);
 	/* nonce caller */
 	get_random_bytes(auth->our_nonce, sizeof(auth->our_nonce));
-	tpm_buf_append_u16(&buf, sizeof(auth->our_nonce));
-	tpm_buf_append(&buf, auth->our_nonce, sizeof(auth->our_nonce));
+	tpm_buf_append_u16(buf, sizeof(auth->our_nonce));
+	tpm_buf_append(buf, auth->our_nonce, sizeof(auth->our_nonce));
 
 	/* append encrypted salt and squirrel away unencrypted in auth */
-	tpm_buf_append_salt(&buf, chip, auth);
+	tpm_buf_append_salt(buf, chip, auth);
 	/* session type (HMAC, audit or policy) */
-	tpm_buf_append_u8(&buf, TPM2_SE_HMAC);
+	tpm_buf_append_u8(buf, TPM2_SE_HMAC);
 
 	/* symmetric encryption parameters */
 	/* symmetric algorithm */
-	tpm_buf_append_u16(&buf, TPM_ALG_AES);
+	tpm_buf_append_u16(buf, TPM_ALG_AES);
 	/* bits for symmetric algorithm */
-	tpm_buf_append_u16(&buf, AES_KEY_BITS);
+	tpm_buf_append_u16(buf, AES_KEY_BITS);
 	/* symmetric algorithm mode (must be CFB) */
-	tpm_buf_append_u16(&buf, TPM_ALG_CFB);
+	tpm_buf_append_u16(buf, TPM_ALG_CFB);
 	/* hash algorithm for session */
-	tpm_buf_append_u16(&buf, TPM_ALG_SHA256);
+	tpm_buf_append_u16(buf, TPM_ALG_SHA256);
 
-	rc = tpm_ret_to_err(tpm_transmit_cmd(chip, &buf, 0, "StartAuthSession"));
+	rc = tpm_ret_to_err(tpm_transmit_cmd(chip, buf, 0, "TPM2_StartAuthSession"));
 	tpm2_flush_context(chip, null_key);
 
 	if (rc == TPM2_RC_SUCCESS)
-		rc = tpm2_parse_start_auth_session(auth, &buf);
-
-	tpm_buf_destroy(&buf);
+		rc = tpm2_parse_start_auth_session(auth, buf);
 
 	if (rc == TPM2_RC_SUCCESS) {
 		chip->auth = auth;
@@ -1199,18 +1197,18 @@ static int tpm2_create_primary(struct tpm_chip *chip, u32 hierarchy,
 			       u32 *handle, u8 *name)
 {
 	int rc;
-	struct tpm_buf buf;
-	struct tpm_buf template;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_SESSIONS, TPM2_CC_CREATE_PRIMARY);
-	if (rc)
-		return rc;
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
-	rc = tpm_buf_init_sized(&template);
-	if (rc) {
-		tpm_buf_destroy(&buf);
-		return rc;
-	}
+	struct tpm_buf *template __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!template)
+		return -ENOMEM;
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_SESSIONS, TPM2_CC_CREATE_PRIMARY);
+	tpm_buf_init_sized(template, TPM_BUFSIZE);
 
 	/*
 	 * create the template.  Note: in order for userspace to
@@ -1222,75 +1220,71 @@ static int tpm2_create_primary(struct tpm_chip *chip, u32 hierarchy,
 	 */
 
 	/* key type */
-	tpm_buf_append_u16(&template, TPM_ALG_ECC);
+	tpm_buf_append_u16(template, TPM_ALG_ECC);
 
 	/* name algorithm */
-	tpm_buf_append_u16(&template, TPM_ALG_SHA256);
+	tpm_buf_append_u16(template, TPM_ALG_SHA256);
 
 	/* object properties */
-	tpm_buf_append_u32(&template, TPM2_OA_NULL_KEY);
+	tpm_buf_append_u32(template, TPM2_OA_NULL_KEY);
 
 	/* sauth policy (empty) */
-	tpm_buf_append_u16(&template, 0);
+	tpm_buf_append_u16(template, 0);
 
 	/* BEGIN parameters: key specific; for ECC*/
 
 	/* symmetric algorithm */
-	tpm_buf_append_u16(&template, TPM_ALG_AES);
+	tpm_buf_append_u16(template, TPM_ALG_AES);
 
 	/* bits for symmetric algorithm */
-	tpm_buf_append_u16(&template, AES_KEY_BITS);
+	tpm_buf_append_u16(template, AES_KEY_BITS);
 
 	/* algorithm mode (must be CFB) */
-	tpm_buf_append_u16(&template, TPM_ALG_CFB);
+	tpm_buf_append_u16(template, TPM_ALG_CFB);
 
 	/* scheme (NULL means any scheme) */
-	tpm_buf_append_u16(&template, TPM_ALG_NULL);
+	tpm_buf_append_u16(template, TPM_ALG_NULL);
 
 	/* ECC Curve ID */
-	tpm_buf_append_u16(&template, TPM2_ECC_NIST_P256);
+	tpm_buf_append_u16(template, TPM2_ECC_NIST_P256);
 
 	/* KDF Scheme */
-	tpm_buf_append_u16(&template, TPM_ALG_NULL);
+	tpm_buf_append_u16(template, TPM_ALG_NULL);
 
 	/* unique: key specific; for ECC it is two zero size points */
-	tpm_buf_append_u16(&template, 0);
-	tpm_buf_append_u16(&template, 0);
+	tpm_buf_append_u16(template, 0);
+	tpm_buf_append_u16(template, 0);
 
 	/* END parameters */
 
 	/* primary handle */
-	tpm_buf_append_u32(&buf, hierarchy);
-	tpm_buf_append_empty_auth(&buf, TPM2_RS_PW);
+	tpm_buf_append_u32(buf, hierarchy);
+	tpm_buf_append_empty_auth(buf, TPM2_RS_PW);
 
 	/* sensitive create size is 4 for two empty buffers */
-	tpm_buf_append_u16(&buf, 4);
+	tpm_buf_append_u16(buf, 4);
 
 	/* sensitive create auth data (empty) */
-	tpm_buf_append_u16(&buf, 0);
+	tpm_buf_append_u16(buf, 0);
 
 	/* sensitive create sensitive data (empty) */
-	tpm_buf_append_u16(&buf, 0);
+	tpm_buf_append_u16(buf, 0);
 
 	/* the public template */
-	tpm_buf_append(&buf, template.data, template.length);
-	tpm_buf_destroy(&template);
+	tpm_buf_append(buf, template->data, template->length);
 
 	/* outside info (empty) */
-	tpm_buf_append_u16(&buf, 0);
+	tpm_buf_append_u16(buf, 0);
 
 	/* creation PCR (none) */
-	tpm_buf_append_u32(&buf, 0);
+	tpm_buf_append_u32(buf, 0);
 
-	rc = tpm_transmit_cmd(chip, &buf, 0,
-			      "attempting to create NULL primary");
+	rc = tpm_transmit_cmd(chip, buf, 0, "TPM2_CreatePrimary");
 
 	if (rc == TPM2_RC_SUCCESS)
-		rc = tpm2_parse_create_primary(chip, &buf, handle, hierarchy,
+		rc = tpm2_parse_create_primary(chip, buf, handle, hierarchy,
 					       name);
 
-	tpm_buf_destroy(&buf);
-
 	return rc;
 }
 
diff --git a/drivers/char/tpm/tpm2-space.c b/drivers/char/tpm/tpm2-space.c
index 60354cd53b5c..cbf86ff5931f 100644
--- a/drivers/char/tpm/tpm2-space.c
+++ b/drivers/char/tpm/tpm2-space.c
@@ -71,24 +71,25 @@ void tpm2_del_space(struct tpm_chip *chip, struct tpm_space *space)
 int tpm2_load_context(struct tpm_chip *chip, u8 *buf,
 		      unsigned int *offset, u32 *handle)
 {
-	struct tpm_buf tbuf;
 	struct tpm2_context *ctx;
 	unsigned int body_size;
 	int rc;
 
-	rc = tpm_buf_init(&tbuf, TPM2_ST_NO_SESSIONS, TPM2_CC_CONTEXT_LOAD);
-	if (rc)
-		return rc;
+	struct tpm_buf *tbuf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!tbuf)
+		return -ENOMEM;
+
+	tpm_buf_init(tbuf, TPM_BUFSIZE);
+	tpm_buf_reset(tbuf, TPM2_ST_NO_SESSIONS, TPM2_CC_CONTEXT_LOAD);
 
 	ctx = (struct tpm2_context *)&buf[*offset];
 	body_size = sizeof(*ctx) + be16_to_cpu(ctx->blob_size);
-	tpm_buf_append(&tbuf, &buf[*offset], body_size);
+	tpm_buf_append(tbuf, &buf[*offset], body_size);
 
-	rc = tpm_transmit_cmd(chip, &tbuf, 4, NULL);
+	rc = tpm_transmit_cmd(chip, tbuf, 4, NULL);
 	if (rc < 0) {
 		dev_warn(&chip->dev, "%s: failed with a system error %d\n",
 			 __func__, rc);
-		tpm_buf_destroy(&tbuf);
 		return -EFAULT;
 	} else if (tpm2_rc_value(rc) == TPM2_RC_HANDLE ||
 		   rc == TPM2_RC_REFERENCE_H0) {
@@ -103,64 +104,55 @@ int tpm2_load_context(struct tpm_chip *chip, u8 *buf,
 		 * flushed outside the space
 		 */
 		*handle = 0;
-		tpm_buf_destroy(&tbuf);
 		return -ENOENT;
 	} else if (tpm2_rc_value(rc) == TPM2_RC_INTEGRITY) {
-		tpm_buf_destroy(&tbuf);
 		return -EINVAL;
 	} else if (rc > 0) {
 		dev_warn(&chip->dev, "%s: failed with a TPM error 0x%04X\n",
 			 __func__, rc);
-		tpm_buf_destroy(&tbuf);
 		return -EFAULT;
 	}
 
-	*handle = be32_to_cpup((__be32 *)&tbuf.data[TPM_HEADER_SIZE]);
+	*handle = be32_to_cpup((__be32 *)&tbuf->data[TPM_HEADER_SIZE]);
 	*offset += body_size;
-
-	tpm_buf_destroy(&tbuf);
 	return 0;
 }
 
 int tpm2_save_context(struct tpm_chip *chip, u32 handle, u8 *buf,
 		      unsigned int buf_size, unsigned int *offset)
 {
-	struct tpm_buf tbuf;
 	unsigned int body_size;
 	int rc;
 
-	rc = tpm_buf_init(&tbuf, TPM2_ST_NO_SESSIONS, TPM2_CC_CONTEXT_SAVE);
-	if (rc)
-		return rc;
+	struct tpm_buf *tbuf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!tbuf)
+		return -ENOMEM;
 
-	tpm_buf_append_u32(&tbuf, handle);
+	tpm_buf_init(tbuf, TPM_BUFSIZE);
+	tpm_buf_reset(tbuf, TPM2_ST_NO_SESSIONS, TPM2_CC_CONTEXT_SAVE);
+	tpm_buf_append_u32(tbuf, handle);
 
-	rc = tpm_transmit_cmd(chip, &tbuf, 0, NULL);
+	rc = tpm_transmit_cmd(chip, tbuf, 0, NULL);
 	if (rc < 0) {
 		dev_warn(&chip->dev, "%s: failed with a system error %d\n",
 			 __func__, rc);
-		tpm_buf_destroy(&tbuf);
 		return -EFAULT;
 	} else if (tpm2_rc_value(rc) == TPM2_RC_REFERENCE_H0) {
-		tpm_buf_destroy(&tbuf);
 		return -ENOENT;
 	} else if (rc) {
 		dev_warn(&chip->dev, "%s: failed with a TPM error 0x%04X\n",
 			 __func__, rc);
-		tpm_buf_destroy(&tbuf);
 		return -EFAULT;
 	}
 
-	body_size = tpm_buf_length(&tbuf) - TPM_HEADER_SIZE;
+	body_size = tpm_buf_length(tbuf) - TPM_HEADER_SIZE;
 	if ((*offset + body_size) > buf_size) {
 		dev_warn(&chip->dev, "%s: out of backing storage\n", __func__);
-		tpm_buf_destroy(&tbuf);
 		return -ENOMEM;
 	}
 
-	memcpy(&buf[*offset], &tbuf.data[TPM_HEADER_SIZE], body_size);
+	memcpy(&buf[*offset], &tbuf->data[TPM_HEADER_SIZE], body_size);
 	*offset += body_size;
-	tpm_buf_destroy(&tbuf);
 	return 0;
 }
 
diff --git a/drivers/char/tpm/tpm_vtpm_proxy.c b/drivers/char/tpm/tpm_vtpm_proxy.c
index 0818bb517805..682dfc93845d 100644
--- a/drivers/char/tpm/tpm_vtpm_proxy.c
+++ b/drivers/char/tpm/tpm_vtpm_proxy.c
@@ -395,40 +395,36 @@ static bool vtpm_proxy_tpm_req_canceled(struct tpm_chip  *chip, u8 status)
 
 static int vtpm_proxy_request_locality(struct tpm_chip *chip, int locality)
 {
-	struct tpm_buf buf;
 	int rc;
 	const struct tpm_header *header;
 	struct proxy_dev *proxy_dev = dev_get_drvdata(&chip->dev);
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
+	tpm_buf_init(buf, TPM_BUFSIZE);
 	if (chip->flags & TPM_CHIP_FLAG_TPM2)
-		rc = tpm_buf_init(&buf, TPM2_ST_SESSIONS,
-				  TPM2_CC_SET_LOCALITY);
+		tpm_buf_reset(buf, TPM2_ST_SESSIONS, TPM2_CC_SET_LOCALITY);
 	else
-		rc = tpm_buf_init(&buf, TPM_TAG_RQU_COMMAND,
-				  TPM_ORD_SET_LOCALITY);
-	if (rc)
-		return rc;
-	tpm_buf_append_u8(&buf, locality);
+		tpm_buf_reset(buf, TPM_TAG_RQU_COMMAND, TPM_ORD_SET_LOCALITY);
+
+	tpm_buf_append_u8(buf, locality);
 
 	proxy_dev->state |= STATE_DRIVER_COMMAND;
 
-	rc = tpm_transmit_cmd(chip, &buf, 0, "attempting to set locality");
+	rc = tpm_transmit_cmd(chip, buf, 0, "attempting to set locality");
 
 	proxy_dev->state &= ~STATE_DRIVER_COMMAND;
 
-	if (rc < 0) {
-		locality = rc;
-		goto out;
-	}
+	if (rc < 0)
+		return rc;
 
-	header = (const struct tpm_header *)buf.data;
+	header = (const struct tpm_header *)buf->data;
 	rc = be32_to_cpu(header->return_code);
 	if (rc)
 		locality = -1;
 
-out:
-	tpm_buf_destroy(&buf);
-
 	return locality;
 }
 
diff --git a/include/linux/tpm.h b/include/linux/tpm.h
index 6ff76a4b8a53..a453271933cf 100644
--- a/include/linux/tpm.h
+++ b/include/linux/tpm.h
@@ -25,7 +25,8 @@
 #include <crypto/hash_info.h>
 #include <crypto/aes.h>
 
-#define TPM_DIGEST_SIZE 20	/* Max TPM v1.2 PCR size */
+#define TPM_DIGEST_SIZE		20	/* Max TPM v1.2 PCR size */
+#define TPM_BUFSIZE		4096
 
 #define TPM2_MAX_DIGEST_SIZE	SHA512_DIGEST_SIZE
 #define TPM2_MAX_PCR_BANKS	8
@@ -376,13 +377,15 @@ enum tpm_buf_flags {
 };
 
 /*
- * A string buffer type for constructing TPM commands.
+ * A buffer for constructing and parsing TPM commands, responses and sized
+ * (TPM2B) buffers.
  */
 struct tpm_buf {
-	u32 flags;
-	u32 length;
-	u8 *data;
+	u8 flags;
 	u8 handles;
+	u16 length;
+	u16 capacity;
+	u8 data[];
 };
 
 enum tpm2_object_attributes {
@@ -413,11 +416,10 @@ struct tpm2_hash {
 	unsigned int tpm_id;
 };
 
-int tpm_buf_init(struct tpm_buf *buf, u16 tag, u32 ordinal);
+void tpm_buf_init(struct tpm_buf *buf, u16 buf_size);
+void tpm_buf_init_sized(struct tpm_buf *buf, u16 buf_size);
 void tpm_buf_reset(struct tpm_buf *buf, u16 tag, u32 ordinal);
-int tpm_buf_init_sized(struct tpm_buf *buf);
 void tpm_buf_reset_sized(struct tpm_buf *buf);
-void tpm_buf_destroy(struct tpm_buf *buf);
 u32 tpm_buf_length(struct tpm_buf *buf);
 void tpm_buf_append(struct tpm_buf *buf, const u8 *new_data, u16 new_length);
 void tpm_buf_append_u8(struct tpm_buf *buf, const u8 value);
diff --git a/security/keys/trusted-keys/trusted_tpm1.c b/security/keys/trusted-keys/trusted_tpm1.c
index 636acb66a4f6..3ac204a902de 100644
--- a/security/keys/trusted-keys/trusted_tpm1.c
+++ b/security/keys/trusted-keys/trusted_tpm1.c
@@ -310,9 +310,8 @@ static int TSS_checkhmac2(unsigned char *buffer,
  * For key specific tpm requests, we will generate and send our
  * own TPM command packets using the drivers send function.
  */
-static int trusted_tpm_send(unsigned char *cmd, size_t buflen)
+static int trusted_tpm_send(void *cmd, size_t buflen)
 {
-	struct tpm_buf buf;
 	int rc;
 
 	if (!chip)
@@ -322,15 +321,12 @@ static int trusted_tpm_send(unsigned char *cmd, size_t buflen)
 	if (rc)
 		return rc;
 
-	buf.flags = 0;
-	buf.length = buflen;
-	buf.data = cmd;
 	dump_tpm_buf(cmd);
-	rc = tpm_transmit_cmd(chip, &buf, 4, "sending data");
+	rc = tpm_transmit_cmd(chip, cmd, 4, "sending data");
 	dump_tpm_buf(cmd);
 
+	/* Convert TPM error to -EPERM. */
 	if (rc > 0)
-		/* TPM error */
 		rc = -EPERM;
 
 	tpm_put_ops(chip);
@@ -624,23 +620,23 @@ static int tpm_unseal(struct tpm_buf *tb,
 static int key_seal(struct trusted_key_payload *p,
 		    struct trusted_key_options *o)
 {
-	struct tpm_buf tb;
 	int ret;
 
-	ret = tpm_buf_init(&tb, 0, 0);
-	if (ret)
-		return ret;
+	struct tpm_buf *tb __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!tb)
+		return -ENOMEM;
+
+	tpm_buf_init(tb, TPM_BUFSIZE);
 
 	/* include migratable flag at end of sealed key */
 	p->key[p->key_len] = p->migratable;
 
-	ret = tpm_seal(&tb, o->keytype, o->keyhandle, o->keyauth,
+	ret = tpm_seal(tb, o->keytype, o->keyhandle, o->keyauth,
 		       p->key, p->key_len + 1, p->blob, &p->blob_len,
 		       o->blobauth, o->pcrinfo, o->pcrinfo_len);
 	if (ret < 0)
 		pr_info("srkseal failed (%d)\n", ret);
 
-	tpm_buf_destroy(&tb);
 	return ret;
 }
 
@@ -650,14 +646,15 @@ static int key_seal(struct trusted_key_payload *p,
 static int key_unseal(struct trusted_key_payload *p,
 		      struct trusted_key_options *o)
 {
-	struct tpm_buf tb;
 	int ret;
 
-	ret = tpm_buf_init(&tb, 0, 0);
-	if (ret)
-		return ret;
+	struct tpm_buf *tb __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!tb)
+		return -ENOMEM;
+
+	tpm_buf_init(tb, TPM_BUFSIZE);
 
-	ret = tpm_unseal(&tb, o->keyhandle, o->keyauth, p->blob, p->blob_len,
+	ret = tpm_unseal(tb, o->keyhandle, o->keyauth, p->blob, p->blob_len,
 			 o->blobauth, p->key, &p->key_len);
 	if (ret < 0)
 		pr_info("srkunseal failed (%d)\n", ret);
@@ -665,7 +662,6 @@ static int key_unseal(struct trusted_key_payload *p,
 		/* pull migratable flag out of sealed key */
 		p->migratable = p->key[--p->key_len];
 
-	tpm_buf_destroy(&tb);
 	return ret;
 }
 
diff --git a/security/keys/trusted-keys/trusted_tpm2.c b/security/keys/trusted-keys/trusted_tpm2.c
index 991f9af92eb1..79e2209fb369 100644
--- a/security/keys/trusted-keys/trusted_tpm2.c
+++ b/security/keys/trusted-keys/trusted_tpm2.c
@@ -210,13 +210,20 @@ int tpm2_seal_trusted(struct tpm_chip *chip,
 		      struct trusted_key_options *options)
 {
 	off_t offset = TPM_HEADER_SIZE;
-	struct tpm_buf buf, sized;
 	int blob_len = 0;
 	u32 hash;
 	u32 flags;
 	int i;
 	int rc;
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
+	struct tpm_buf *sized __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!sized)
+		return -ENOMEM;
+
 	for (i = 0; i < ARRAY_SIZE(tpm2_hash_map); i++) {
 		if (options->hash == tpm2_hash_map[i].crypto_id) {
 			hash = tpm2_hash_map[i].tpm_id;
@@ -238,91 +245,79 @@ int tpm2_seal_trusted(struct tpm_chip *chip,
 	if (rc)
 		goto out_put;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_SESSIONS, TPM2_CC_CREATE);
-	if (rc) {
-		tpm2_end_auth_session(chip);
-		goto out_put;
-	}
-
-	rc = tpm_buf_init_sized(&sized);
-	if (rc) {
-		tpm_buf_destroy(&buf);
-		tpm2_end_auth_session(chip);
-		goto out_put;
-	}
-
-	tpm_buf_append_name(chip, &buf, options->keyhandle, NULL);
-	tpm_buf_append_hmac_session(chip, &buf, TPM2_SA_DECRYPT,
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_init_sized(sized, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_SESSIONS, TPM2_CC_CREATE);
+	tpm_buf_append_name(chip, buf, options->keyhandle, NULL);
+	tpm_buf_append_hmac_session(chip, buf, TPM2_SA_DECRYPT,
 				    options->keyauth, TPM_DIGEST_SIZE);
 
 	/* sensitive */
-	tpm_buf_append_u16(&sized, options->blobauth_len);
+	tpm_buf_append_u16(sized, options->blobauth_len);
 
 	if (options->blobauth_len)
-		tpm_buf_append(&sized, options->blobauth, options->blobauth_len);
+		tpm_buf_append(sized, options->blobauth, options->blobauth_len);
 
-	tpm_buf_append_u16(&sized, payload->key_len);
-	tpm_buf_append(&sized, payload->key, payload->key_len);
-	tpm_buf_append(&buf, sized.data, sized.length);
+	tpm_buf_append_u16(sized, payload->key_len);
+	tpm_buf_append(sized, payload->key, payload->key_len);
+	tpm_buf_append(buf, sized->data, sized->length);
 
 	/* public */
-	tpm_buf_reset_sized(&sized);
-	tpm_buf_append_u16(&sized, TPM_ALG_KEYEDHASH);
-	tpm_buf_append_u16(&sized, hash);
+	tpm_buf_init_sized(sized, TPM_BUFSIZE);
+	tpm_buf_append_u16(sized, TPM_ALG_KEYEDHASH);
+	tpm_buf_append_u16(sized, hash);
 
 	/* key properties */
 	flags = 0;
 	flags |= options->policydigest_len ? 0 : TPM2_OA_USER_WITH_AUTH;
 	flags |= payload->migratable ? 0 : (TPM2_OA_FIXED_TPM | TPM2_OA_FIXED_PARENT);
-	tpm_buf_append_u32(&sized, flags);
+	tpm_buf_append_u32(sized, flags);
 
 	/* policy */
-	tpm_buf_append_u16(&sized, options->policydigest_len);
+	tpm_buf_append_u16(sized, options->policydigest_len);
 	if (options->policydigest_len)
-		tpm_buf_append(&sized, options->policydigest, options->policydigest_len);
+		tpm_buf_append(sized, options->policydigest, options->policydigest_len);
 
 	/* public parameters */
-	tpm_buf_append_u16(&sized, TPM_ALG_NULL);
-	tpm_buf_append_u16(&sized, 0);
+	tpm_buf_append_u16(sized, TPM_ALG_NULL);
+	tpm_buf_append_u16(sized, 0);
 
-	tpm_buf_append(&buf, sized.data, sized.length);
+	tpm_buf_append(buf, sized->data, sized->length);
 
 	/* outside info */
-	tpm_buf_append_u16(&buf, 0);
+	tpm_buf_append_u16(buf, 0);
 
 	/* creation PCR */
-	tpm_buf_append_u32(&buf, 0);
+	tpm_buf_append_u32(buf, 0);
 
-	if (buf.flags & TPM_BUF_INVALID) {
+	if (buf->flags & TPM_BUF_INVALID) {
 		rc = -E2BIG;
 		tpm2_end_auth_session(chip);
 		goto out;
 	}
 
-	tpm_buf_fill_hmac_session(chip, &buf);
-	rc = tpm_transmit_cmd(chip, &buf, 4, "sealing data");
-	rc = tpm_buf_check_hmac_response(chip, &buf, rc);
+	tpm_buf_fill_hmac_session(chip, buf);
+	rc = tpm_transmit_cmd(chip, buf, 4, "sealing data");
+	rc = tpm_buf_check_hmac_response(chip, buf, rc);
 	if (rc)
 		goto out;
 
-	blob_len = tpm_buf_read_u32(&buf, &offset);
-	if (blob_len > MAX_BLOB_SIZE || buf.flags & TPM_BUF_INVALID) {
+	blob_len = tpm_buf_read_u32(buf, &offset);
+	if (blob_len > MAX_BLOB_SIZE || buf->flags & TPM_BUF_INVALID) {
 		rc = -E2BIG;
 		goto out;
 	}
-	if (buf.length - offset < blob_len) {
+	if (buf->length - offset < blob_len) {
 		rc = -EFAULT;
 		goto out;
 	}
 
-	blob_len = tpm2_key_encode(payload, options, &buf.data[offset], blob_len);
+	blob_len = tpm2_key_encode(payload, options, &buf->data[offset],
+				   blob_len);
 	if (blob_len < 0)
 		rc = blob_len;
 
 out:
-	tpm_buf_destroy(&sized);
-	tpm_buf_destroy(&buf);
-
 	if (!rc)
 		payload->blob_len = blob_len;
 
@@ -349,7 +344,6 @@ static int tpm2_load_cmd(struct tpm_chip *chip,
 			 struct trusted_key_options *options,
 			 u32 *blob_handle)
 {
-	struct tpm_buf buf;
 	unsigned int private_len;
 	unsigned int public_len;
 	unsigned int blob_len;
@@ -401,33 +395,29 @@ static int tpm2_load_cmd(struct tpm_chip *chip,
 	if (rc)
 		return rc;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_SESSIONS, TPM2_CC_LOAD);
-	if (rc) {
-		tpm2_end_auth_session(chip);
-		return rc;
-	}
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
 
-	tpm_buf_append_name(chip, &buf, options->keyhandle, NULL);
-	tpm_buf_append_hmac_session(chip, &buf, 0, options->keyauth,
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_SESSIONS, TPM2_CC_LOAD);
+	tpm_buf_append_name(chip, buf, options->keyhandle, NULL);
+	tpm_buf_append_hmac_session(chip, buf, 0, options->keyauth,
 				    TPM_DIGEST_SIZE);
 
-	tpm_buf_append(&buf, blob, blob_len);
+	tpm_buf_append(buf, blob, blob_len);
 
-	if (buf.flags & TPM_BUF_INVALID) {
-		rc = -E2BIG;
+	if (buf->flags & TPM_BUF_INVALID) {
 		tpm2_end_auth_session(chip);
-		goto out;
+		return -E2BIG;
 	}
 
-	tpm_buf_fill_hmac_session(chip, &buf);
-	rc = tpm_transmit_cmd(chip, &buf, 4, "loading blob");
-	rc = tpm_buf_check_hmac_response(chip, &buf, rc);
+	tpm_buf_fill_hmac_session(chip, buf);
+	rc = tpm_transmit_cmd(chip, buf, 4, "loading blob");
+	rc = tpm_buf_check_hmac_response(chip, buf, rc);
 	if (!rc)
 		*blob_handle = be32_to_cpup(
-			(__be32 *) &buf.data[TPM_HEADER_SIZE]);
-
-out:
-	tpm_buf_destroy(&buf);
+			(__be32 *)&buf->data[TPM_HEADER_SIZE]);
 
 	return tpm_ret_to_err(rc);
 }
@@ -450,26 +440,25 @@ static int tpm2_unseal_cmd(struct tpm_chip *chip,
 			   u32 blob_handle)
 {
 	struct tpm_header *head;
-	struct tpm_buf buf;
 	u16 data_len;
 	int offset;
 	u8 *data;
 	int rc;
 
+	struct tpm_buf *buf __free(kfree) = kzalloc(TPM_BUFSIZE, GFP_KERNEL);
+	if (!buf)
+		return -ENOMEM;
+
 	rc = tpm2_start_auth_session(chip);
 	if (rc)
 		return rc;
 
-	rc = tpm_buf_init(&buf, TPM2_ST_SESSIONS, TPM2_CC_UNSEAL);
-	if (rc) {
-		tpm2_end_auth_session(chip);
-		return rc;
-	}
-
-	tpm_buf_append_name(chip, &buf, blob_handle, NULL);
+	tpm_buf_init(buf, TPM_BUFSIZE);
+	tpm_buf_reset(buf, TPM2_ST_SESSIONS, TPM2_CC_UNSEAL);
+	tpm_buf_append_name(chip, buf, blob_handle, NULL);
 
 	if (!options->policyhandle) {
-		tpm_buf_append_hmac_session(chip, &buf, TPM2_SA_ENCRYPT,
+		tpm_buf_append_hmac_session(chip, buf, TPM2_SA_ENCRYPT,
 					    options->blobauth,
 					    options->blobauth_len);
 	} else {
@@ -478,39 +467,35 @@ static int tpm2_unseal_cmd(struct tpm_chip *chip,
 		 * the password will end up being unencrypted on the bus, as
 		 * HMAC nonce cannot be calculated for it.
 		 */
-		tpm_buf_append_u32(&buf, 9 + options->blobauth_len);
-		tpm_buf_append_u32(&buf, options->policyhandle);
-		tpm_buf_append_u16(&buf, 0);
-		tpm_buf_append_u8(&buf, 0);
-		tpm_buf_append_u16(&buf, options->blobauth_len);
-		tpm_buf_append(&buf, options->blobauth, options->blobauth_len);
+		tpm_buf_append_u32(buf, 9 + options->blobauth_len);
+		tpm_buf_append_u32(buf, options->policyhandle);
+		tpm_buf_append_u16(buf, 0);
+		tpm_buf_append_u8(buf, 0);
+		tpm_buf_append_u16(buf, options->blobauth_len);
+		tpm_buf_append(buf, options->blobauth, options->blobauth_len);
 		if (tpm2_chip_auth(chip)) {
-			tpm_buf_append_hmac_session(chip, &buf, TPM2_SA_ENCRYPT, NULL, 0);
+			tpm_buf_append_hmac_session(chip, buf, TPM2_SA_ENCRYPT, NULL, 0);
 		} else  {
-			offset = buf.handles * 4 + TPM_HEADER_SIZE;
-			head = (struct tpm_header *)buf.data;
-			if (tpm_buf_length(&buf) == offset)
+			offset = buf->handles * 4 + TPM_HEADER_SIZE;
+			head = (struct tpm_header *)buf->data;
+			if (tpm_buf_length(buf) == offset)
 				head->tag = cpu_to_be16(TPM2_ST_NO_SESSIONS);
 		}
 	}
 
-	tpm_buf_fill_hmac_session(chip, &buf);
-	rc = tpm_transmit_cmd(chip, &buf, 6, "unsealing");
-	rc = tpm_buf_check_hmac_response(chip, &buf, rc);
+	tpm_buf_fill_hmac_session(chip, buf);
+	rc = tpm_transmit_cmd(chip, buf, 6, "unsealing");
+	rc = tpm_buf_check_hmac_response(chip, buf, rc);
 
 	if (!rc) {
 		data_len = be16_to_cpup(
-			(__be16 *) &buf.data[TPM_HEADER_SIZE + 4]);
-		if (data_len < MIN_KEY_SIZE ||  data_len > MAX_KEY_SIZE) {
-			rc = -EFAULT;
-			goto out;
-		}
+			(__be16 *)&buf->data[TPM_HEADER_SIZE + 4]);
+		if (data_len < MIN_KEY_SIZE ||  data_len > MAX_KEY_SIZE)
+			return -EFAULT;
 
-		if (tpm_buf_length(&buf) < TPM_HEADER_SIZE + 6 + data_len) {
-			rc = -EFAULT;
-			goto out;
-		}
-		data = &buf.data[TPM_HEADER_SIZE + 6];
+		if (tpm_buf_length(buf) < TPM_HEADER_SIZE + 6 + data_len)
+			return -EFAULT;
+		data = &buf->data[TPM_HEADER_SIZE + 6];
 
 		if (payload->old_format) {
 			/* migratable flag is at the end of the key */
@@ -527,8 +512,6 @@ static int tpm2_unseal_cmd(struct tpm_chip *chip,
 		}
 	}
 
-out:
-	tpm_buf_destroy(&buf);
 	return tpm_ret_to_err(rc);
 }
 
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859157.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C4FB719A2A3;
	Sat, 18 Oct 2025 11:24:20 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786660; cv=none; b=Dg0xfOOjpXDaoG1OJXgSn8J4y6lpXqZROplAKTCdw5t4n9wKXcCqb18tRhqGCnHbQAFP7cyo9Xv6HdrHIx6WK/wvMKksc5T4gAaU5qo9Z7UA6NLGtsfeRwQyM0MT2p9YC9Osj5uGLO+QvgBVUsW7dDX5sE4ErZRZl5z+15+NTxg=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786660; c=relaxed/simple;
	bh=vIX+zASVCEWJgvgHuP0y3ZQ3+YtqE6IF2mGxnKPU3/c=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=kuYg2IW/3Dd+RhvHZrBmlBw1/8pqzgF6IOMiL4bdQ8KahLaI3qQ/89og6nB3e6e2Ch3wc/YLL4NbP+nxVdvTAMp49J2XzkYR3zme4lswrGPatptT5sMhWgkXmAnPrD8nVuRiHECDcYUcB6gk/qsRhkIaS+TqQdiQk4YTPizjHqo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=f8U8zij2; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="f8U8zij2"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 401A8C4CEF8;
	Sat, 18 Oct 2025 11:24:20 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786660;
	bh=vIX+zASVCEWJgvgHuP0y3ZQ3+YtqE6IF2mGxnKPU3/c=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=f8U8zij2IuWdF7RuKtpq8H00vV5AIAKz3SCEdteoXkI6zkf404UAKU+cWnW/6/BE2
	 lRgvaD7MLJvlN0tPuCpJJJTurWimo9JSItGt5KKbR4RWOO428+iI5V1fPKYMth0tWR
	 bHPUVQfYSB7sGk/STLO+UknHGaIB4Wo/6wJPZt9cbxLNNqIGvLtcK+QqrRmdB7PiKs
	 VA6YnNfD04IHPIcaY0dlItgXyEtOred16PWXNu/eRiZqn+WhLmvIi+KhHRGxu3/P3d
	 7SeL/x+Fwo+XVzSRPyQb7TXoLFJrQPOy4/8jy3JEKrx5Geuzkti7MPm6fT+gMCHEid
	 Fc4AcN7IsbGUA==
Date: Sat, 18 Oct 2025 14:24:17 +0300
From: Jarkko Sakkinen <jarkko@kernel.org>
To: Randy Dunlap <rdunlap@infradead.org>
Cc: Gopi Krishna Menon <krishnagopi487@gmail.com>, zohar@linux.ibm.com,
	James.Bottomley@hansenpartnership.com, corbet@lwn.net,
	Meenakshi Aggarwal <meenakshi.aggarwal@nxp.com>,
	Pankaj Gupta <pankaj.gupta@nxp.com>,
	Herbert Xu <herbert@gondor.apana.org.au>,
	linux-integrity@vger.kernel.org, keyrings@vger.kernel.org,
	linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
	skhan@linuxfoundation.org, david.hunter.linux@gmail.com,
	linux-kernel-mentees@lists.linux.dev, khalid@kernel.org
Subject: Re: [PATCH] docs: trusted-encrypted: fix htmldocs build error
Message-ID: <aPN44cFbtIvwnbbY@kernel.org>
References: <20251017181135.354411-1-krishnagopi487@gmail.com>
 <7928c851-649d-47f4-a747-3314c0d45706@infradead.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <7928c851-649d-47f4-a747-3314c0d45706@infradead.org>

On Fri, Oct 17, 2025 at 12:27:43PM -0700, Randy Dunlap wrote:
> Adding patch signers.
> 
> Fixes: 95c46f40aac4 ("docs: trusted-encrypted: trusted-keys as protected keys")
> 
> although that might not matter if this patch is only in a -next tree.
> 
> 
> On 10/17/25 11:11 AM, Gopi Krishna Menon wrote:
> > Running "make htmldocs" generates the following build error and
> > warning in trusted-encrypted.rst:
> > 
> > Documentation/security/keys/trusted-encrypted.rst:18: ERROR: Unexpected indentation.
> > Documentation/security/keys/trusted-encrypted.rst:19: WARNING: Block quote ends without a blank line; unexpected unindent.
> > 
> > Add a blank line before bullet list and fix the indentation of text to
> > fix the build error and resolve the warning.
> > 
> > Signed-off-by: Gopi Krishna Menon <krishnagopi487@gmail.com>
> 
> Reviewed-by: Randy Dunlap <rdunlap@infradead.org>
> Tested-by: Randy Dunlap <rdunlap@infradead.org>

Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>

BR, Jarkko

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859158.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6D4C71EB9E1
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 11:27:31 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786851; cv=none; b=LPzrDp9/xwcii8ycCH+F2HsbooVx2krX5RI51a/e138ahXScQd3XRsuONZUvSCQ+NdlbckvQehRsddbBQVueL1tNnLsa5m5Qi/LBwI9ViA58sfdjhE9dLEQJa414VBaRZOtLKjwObH8ob8vJI19cef+NxMlTaARWT9QuAMcDPiQ=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786851; c=relaxed/simple;
	bh=gf3HoOxKt4m1NqIGatZeeHhS1uuAWLXIJ3lR3WwC8o4=;
	h=MIME-Version:References:In-Reply-To:From:Date:Message-ID:Subject:
	 To:Cc:Content-Type; b=Ui6gB9FO/6yuwKnWZ52qNm2gxheyUk+8ClUumilBUeHNVLgtfzgVljZ0qZKfziK0THIkaUNcNVPtnihh+ICpuQ6fEgdP4ksjmnKGQMHuZnGWCGlmaz+iwXsDX33oA78Ri3gKiIH0wLMtrzsGcu/M6Xgm9mXD8R23mPoYfuCcGL4=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=Xz60DgMY; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="Xz60DgMY"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 07775C19421
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 11:27:31 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786851;
	bh=gf3HoOxKt4m1NqIGatZeeHhS1uuAWLXIJ3lR3WwC8o4=;
	h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
	b=Xz60DgMYd73n//dk1vGHAOomRDj84nYu8gPFNrzM1S4rJu/z4l1hAy+yCj5p1rnJB
	 fsO/1nw9Ii8cD0gsgUEHlQxYZuth9Atjqr+bxr1MhkeUFNDXZz/on6S/g74FRogMaw
	 D1wESx1cces56hnh4z/9GuSeWzze2Yr6750Gjx+GViEN54bqLldMbiDTksIxl0gIYW
	 T4u0V6YiJQ3taLJOl6dnlaR707VTqcuR6roLRjOD8qL0tINKJv2RB4cf2fkIfK0Sl1
	 ldjBmk+EJuVDqgoKNWkQC50KtwKEDE5B2lCP6LdbQOjuhRTtByzP5mPrgs0cFaO1P/
	 MOhKuOsoJD+3w==
Received: by mail-oo1-f42.google.com with SMTP id 006d021491bc7-65051376edbso708065eaf.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 04:27:30 -0700 (PDT)
X-Forwarded-Encrypted: i=1; AJvYcCUFJFE+W053XXyYEr1AG+gPqx/tXta4y0dR/66gdD5RHbvc/286yQ7iVdc6Oh7SK6Gb7mioED0jzCPdMcQ=@vger.kernel.org
X-Gm-Message-State: AOJu0YzFgM3o0hCIxLe50zw3OdLia7599fvP30kGQGdALqksMm9GcTE7
	oTMEspIR+fGnQNIUG+Cfhh5QOaeEfixmBaD1vLn+ch/OEzIPbYCdC27PDn6lFN3tg1dOyAcj0ZO
	L7kTOVJvxaz1LMX2iNmRlwNYrzUZw374=
X-Google-Smtp-Source: AGHT+IEqtAjX7bGgXFLTiXHINPUgRACxPa5e5SbtFa0/3L8xX27Do+XIrKmU1uLH+LDyENKH88LxrEs2OHkNKCwG2EE=
X-Received: by 2002:a05:6808:1a16:b0:43d:43a5:ccaf with SMTP id
 5614622812f47-443a2fb214amr2650331b6e.43.1760786850233; Sat, 18 Oct 2025
 04:27:30 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
References: <20251017122123.v2.1.I60a53c170a8596661883bd2b4ef475155c7aa72b@changeid>
In-Reply-To: <20251017122123.v2.1.I60a53c170a8596661883bd2b4ef475155c7aa72b@changeid>
From: "Rafael J. Wysocki" <rafael@kernel.org>
Date: Sat, 18 Oct 2025 13:27:13 +0200
X-Gmail-Original-Message-ID: <CAJZ5v0ie0Jz6AJdZJx2jNSRcqRQOqMCF+gYdgemTs=rKwXD1_g@mail.gmail.com>
X-Gm-Features: AS18NWD6bHTd_vUF_qBtVIKT5NWPoUwfrydYcGt_jLLmqKDaZufr6wiJXQu2i5E
Message-ID: <CAJZ5v0ie0Jz6AJdZJx2jNSRcqRQOqMCF+gYdgemTs=rKwXD1_g@mail.gmail.com>
Subject: Re: [PATCH v2] PCI/PM: Prevent runtime suspend before devices are
 fully initialized
To: Brian Norris <briannorris@chromium.org>
Cc: Bjorn Helgaas <bhelgaas@google.com>, "Rafael J . Wysocki" <rafael@kernel.org>, linux-kernel@vger.kernel.org, 
	=?UTF-8?Q?Ilpo_J=C3=A4rvinen?= <ilpo.jarvinen@linux.intel.com>, 
	linux-pm@vger.kernel.org, Lukas Wunner <lukas@wunner.de>, linux-pci@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

On Fri, Oct 17, 2025 at 9:22=E2=80=AFPM Brian Norris <briannorris@chromium.=
org> wrote:
>
> Today, it's possible for a PCI device to be created and
> runtime-suspended before it is fully initialized. When that happens, the
> device will remain in D0, but the suspend process may save an
> intermediate version of that device's state -- for example, without
> appropriate BAR configuration. When the device later resumes, we'll
> restore invalid PCI state and the device may not function.
>
> Prevent runtime suspend for PCI devices by deferring pm_runtime_enable()
> until we've fully initialized the device.
>
> More details on how exactly this may occur:
>
> 1. PCI device is created by pci_scan_slot() or similar
> 2. As part of pci_scan_slot(), pci_pm_init() enables runtime PM; the
>    device starts "active" and we initially prevent (pm_runtime_forbid())
>    suspend -- but see [*] footnote
> 3. Underlying 'struct device' is added to the system (device_add());
>    runtime PM can now be configured by user space
> 4. PCI device receives BAR configuration
>    (pci_assign_unassigned_bus_resources(), etc.)
> 5. PCI device is added to the system in pci_bus_add_device()
>
> The device may potentially suspend between #3 and #4.
>
> [*] By default, pm_runtime_forbid() prevents suspending a device; but by
> design, this can be overridden by user space policy via
>
>   echo auto > /sys/bus/pci/devices/.../power/control
>
> Thus, the above #3/#4 sequence is racy with user space (udev or
> similar).
>
> Notably, many PCI devices are enumerated at subsys_initcall time and so
> will not race with user space. However, there are several scenarios
> where PCI devices are created later on, such as with hotplug or when
> drivers (pwrctrl or controller drivers) are built as modules.
>
> Signed-off-by: Brian Norris <briannorris@chromium.org>
> Cc: <stable@vger.kernel.org>

Can you please add a Link: pointer to the discussion on the previous
version of the patch?

With that

Reviewed-by: Rafael J. Wysocki (Intel) <rafael@kernel.org>

> ---
>
> Changes in v2:
>  * Update CC list
>  * Rework problem description
>  * Update solution: defer pm_runtime_enable(), instead of trying to
>    get()/put()
>
>  drivers/pci/bus.c | 3 +++
>  drivers/pci/pci.c | 1 -
>  2 files changed, 3 insertions(+), 1 deletion(-)
>
> diff --git a/drivers/pci/bus.c b/drivers/pci/bus.c
> index f26aec6ff588..fc66b6cb3a54 100644
> --- a/drivers/pci/bus.c
> +++ b/drivers/pci/bus.c
> @@ -14,6 +14,7 @@
>  #include <linux/of.h>
>  #include <linux/of_platform.h>
>  #include <linux/platform_device.h>
> +#include <linux/pm_runtime.h>
>  #include <linux/proc_fs.h>
>  #include <linux/slab.h>
>
> @@ -375,6 +376,8 @@ void pci_bus_add_device(struct pci_dev *dev)
>                 put_device(&pdev->dev);
>         }
>
> +       pm_runtime_enable(&dev->dev);
> +
>         if (!dn || of_device_is_available(dn))
>                 pci_dev_allow_binding(dev);
>
> diff --git a/drivers/pci/pci.c b/drivers/pci/pci.c
> index b14dd064006c..f792164fa297 100644
> --- a/drivers/pci/pci.c
> +++ b/drivers/pci/pci.c
> @@ -3226,7 +3226,6 @@ void pci_pm_init(struct pci_dev *dev)
>         pci_pm_power_up_and_verify_state(dev);
>         pm_runtime_forbid(&dev->dev);
>         pm_runtime_set_active(&dev->dev);
> -       pm_runtime_enable(&dev->dev);
>  }
>
>  static unsigned long pci_ea_flags(struct pci_dev *dev, u8 prop)
> --
> 2.51.0.858.gf9c4a03a3a-goog
>

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859159.eml"

Received: from canpmsgout04.his.huawei.com (canpmsgout04.his.huawei.com [113.46.200.219])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 7DF8E1ADC7E;
	Sat, 18 Oct 2025 11:27:42 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=113.46.200.219
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786867; cv=none; b=gUMTX8VuxyoPj2n2gGla3vEMgP8JUgcKHaCkraPgFZxrY0yzDD+BIZ9RY7xOkbXBqd1F7emEL2qQJyzJMIJjoYcwSJF6+qCsM3ZBF5dRTDhpBhgiG3CRH0SuTzKhDwNzcIXgIeTvSjKgYQCf53ZgcbP98uxQBX/jZkG1RLpmw+0=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786867; c=relaxed/simple;
	bh=jcOMAGkiUb+fuS17tYJmBIE8jMkbwbWbcDpVYAnxhoM=;
	h=From:To:CC:Subject:Date:Message-ID:MIME-Version:Content-Type; b=NSsAQEXPgBulaUDZ3aRroVmurxXSrhRujKadaHACa3ok2sAFPPhWcgQbxpzD6z/k5hm7MIvgiuSex+C16Y5bvUPEQ0N9dPikDUTyTy8bTYAn1jIaep5kfPk2Uphykb/G+2uFfEDeJK9YQYtxM1xR/PD4Hzne4PYdplTDiG+p1Vo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com; spf=pass smtp.mailfrom=huawei.com; dkim=pass (1024-bit key) header.d=huawei.com header.i=@huawei.com header.b=4BPOaSG2; arc=none smtp.client-ip=113.46.200.219
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=huawei.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=huawei.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=huawei.com header.i=@huawei.com header.b="4BPOaSG2"
dkim-signature: v=1; a=rsa-sha256; d=huawei.com; s=dkim;
	c=relaxed/relaxed; q=dns/txt;
	h=From;
	bh=xB+eplaRL5bHHA3zfec6b5b4SIuM+3ZPPxwvvx0ulNI=;
	b=4BPOaSG2ULqT62OBPuJSSgyUQEYDTXqDjJJZnn3dg7Kj6rz8AVKtm6j8LGshUqhyZ1mCaWp1s
	vqQUq3K/A5BHY0vafTrIGix8SPvgevHVt/ANNfzxwycAa7e8h2ffa8DVNydZSidyUuF/sFy5ORG
	HOpaKHBcr9+nOMSOkCuk2aI=
Received: from mail.maildlp.com (unknown [172.19.162.254])
	by canpmsgout04.his.huawei.com (SkyGuard) with ESMTPS id 4cpfYL04YWz1prQN;
	Sat, 18 Oct 2025 19:27:18 +0800 (CST)
Received: from dggemv705-chm.china.huawei.com (unknown [10.3.19.32])
	by mail.maildlp.com (Postfix) with ESMTPS id 8CF54180487;
	Sat, 18 Oct 2025 19:27:40 +0800 (CST)
Received: from kwepemq200001.china.huawei.com (7.202.195.16) by
 dggemv705-chm.china.huawei.com (10.3.19.32) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.2.1544.11; Sat, 18 Oct 2025 19:27:40 +0800
Received: from localhost.huawei.com (10.90.31.46) by
 kwepemq200001.china.huawei.com (7.202.195.16) with Microsoft SMTP Server
 (version=TLS1_2, cipher=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384) id
 15.2.1544.11; Sat, 18 Oct 2025 19:27:39 +0800
From: Chenghai Huang <huangchenghai2@huawei.com>
To: <herbert@gondor.apana.org.au>, <davem@davemloft.net>
CC: <linux-kernel@vger.kernel.org>, <linux-crypto@vger.kernel.org>,
	<linuxarm@openeuler.org>, <liulongfang@huawei.com>, <qianweili@huawei.com>,
	<wangzhou1@hisilicon.com>, <fanghao11@huawei.com>, <nieweiqiang@huawei.com>
Subject: [PATCH] crypto: hisilicon/qm - restore original qos values
Date: Sat, 18 Oct 2025 19:27:39 +0800
Message-ID: <20251018112739.3220154-1-huangchenghai2@huawei.com>
X-Mailer: git-send-email 2.33.0
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit
Content-Type: text/plain
X-ClientProxiedBy: kwepems500002.china.huawei.com (7.221.188.17) To
 kwepemq200001.china.huawei.com (7.202.195.16)

From: nieweiqiang <nieweiqiang@huawei.com>

When the new qos valus setting fails, restore to
the original qos values.

Fixes: 72b010dc33b9 ("crypto: hisilicon/qm - supports writing QoS int the host")
Signed-off-by: nieweiqiang <nieweiqiang@huawei.com>
Signed-off-by: Chenghai Huang <huangchenghai2@huawei.com>
---
 drivers/crypto/hisilicon/qm.c | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/drivers/crypto/hisilicon/qm.c b/drivers/crypto/hisilicon/qm.c
index a5b96adf2d1e..30e44cfb57ee 100644
--- a/drivers/crypto/hisilicon/qm.c
+++ b/drivers/crypto/hisilicon/qm.c
@@ -3678,6 +3678,7 @@ static void qm_clear_vft_config(struct hisi_qm *qm)
 static int qm_func_shaper_enable(struct hisi_qm *qm, u32 fun_index, u32 qos)
 {
 	struct device *dev = &qm->pdev->dev;
+	struct qm_shaper_factor t_factor;
 	u32 ir = qos * QM_QOS_RATE;
 	int ret, total_vfs, i;
 
@@ -3685,6 +3686,7 @@ static int qm_func_shaper_enable(struct hisi_qm *qm, u32 fun_index, u32 qos)
 	if (fun_index > total_vfs)
 		return -EINVAL;
 
+	memcpy(&t_factor, &qm->factor[fun_index], sizeof(t_factor));
 	qm->factor[fun_index].func_qos = qos;
 
 	ret = qm_get_shaper_para(ir, &qm->factor[fun_index]);
@@ -3698,11 +3700,21 @@ static int qm_func_shaper_enable(struct hisi_qm *qm, u32 fun_index, u32 qos)
 		ret = qm_set_vft_common(qm, SHAPER_VFT, fun_index, i, 1);
 		if (ret) {
 			dev_err(dev, "type: %d, failed to set shaper vft!\n", i);
-			return -EINVAL;
+			goto back_func_qos;
 		}
 	}
 
 	return 0;
+
+back_func_qos:
+	memcpy(&qm->factor[fun_index], &t_factor, sizeof(t_factor));
+	for (i--; i >= ALG_TYPE_0; i--) {
+		ret = qm_set_vft_common(qm, SHAPER_VFT, fun_index, i, 1);
+		if (ret)
+			dev_err(dev, "failed to restore shaper vft during rollback!\n");
+	}
+
+	return -EINVAL;
 }
 
 static u32 qm_get_shaper_vft_qos(struct hisi_qm *qm, u32 fun_index)
-- 
2.33.0


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859160.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id A90D61643B;
	Sat, 18 Oct 2025 11:28:57 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760786937; cv=none; b=RNcmWvCMiH05PeS0Zg6RZzDkGj4K1HlHuUrQqXPIVVDub9RvsVNVvi5cdFpRIR6ZrIALOfWCsghvnUWfHuen7CfVwzLQfOxIk0wmZqnXMDTht5MgveXriecjA7tZYvnPdKsyc+YN02Kt9/fsHOghoNvlBZ+vbH9x5loTDDATYs0=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760786937; c=relaxed/simple;
	bh=UQxc6ViLFlVFF78U6caoncGViFhdBPvdRP4aRqaYZZc=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=ggJPur7x7nWxJty5dzrBLjm6cwiB+ML88bYqJvflJYCXKdFDxBSPsrleOpq2xx/hq7RSE9utB+heFWccfdLm2cD533NabLd8uvT4+u4+dXwmTtivCHXtAWjidqapTN84YrpYGM5l5WRx5wPVBUqw9vhD2ZNBr5amQSfXg9Tm22Q=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=gW2IQCE1; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="gW2IQCE1"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id D08E7C4CEF8;
	Sat, 18 Oct 2025 11:28:56 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760786937;
	bh=UQxc6ViLFlVFF78U6caoncGViFhdBPvdRP4aRqaYZZc=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=gW2IQCE17ZSMXILNO0KY9j3ov9YF7prSlKeEn16guhf3rqqXtyCWZ4W8k679RbtNd
	 NInj34dATy561e2LzlHipBX3CNhB9q1jL7G73wgm3R/rKsQHW0iArdWgokS5EuXqp3
	 3GmKch5gEsINE4T9Ej3XnUacQpJKddWPnmVTGgy5Z/2u3H53T7a/ZMf8V/QnbHcN9C
	 iNl5bkFeE9S0ZXFN6FyZ26u+lWKk3zSvKVJbnRl8qLEe/dzwcc/xE6Y4p3ccjBDLV2
	 JsdgR2AeRQA7KSJeyvuJsULrFDQivDqmGpqQdN0CxCpqk4//yde9910eqE5QoTngpX
	 whhl0mfguxtWg==
Date: Sat, 18 Oct 2025 14:28:53 +0300
From: Jarkko Sakkinen <jarkko@kernel.org>
To: Stuart Yoder <stuart.yoder@arm.com>
Cc: linux-integrity@vger.kernel.org, peterhuewe@gmx.de, jgg@ziepe.ca,
	sudeep.holla@arm.com, Prachotan.Bathi@arm.com,
	linux-kernel@vger.kernel.org
Subject: Re: [PATCH] tpm_crb: Add idle support for the Arm FF-A start method
Message-ID: <aPN59bwcUrieMACf@kernel.org>
References: <20250825205943.1225599-1-stuart.yoder@arm.com>
 <aKzcaaXGQyLfDPrf@kernel.org>
 <9227d35b-40d6-4faf-910d-ee7de9bbc094@arm.com>
 <aKzoaWeJOh5W0M6J@kernel.org>
 <91d8e71a-7013-43d7-9d04-9a191fed50e9@arm.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <91d8e71a-7013-43d7-9d04-9a191fed50e9@arm.com>

On Wed, Oct 15, 2025 at 05:22:53PM -0500, Stuart Yoder wrote:
> 
> 
> On 8/25/25 5:49 PM, Jarkko Sakkinen wrote:
> > On Mon, Aug 25, 2025 at 05:19:34PM -0500, Stuart Yoder wrote:
> > > 
> > > 
> > > On 8/25/25 4:58 PM, Jarkko Sakkinen wrote:
> > > > On Mon, Aug 25, 2025 at 03:59:43PM -0500, Stuart Yoder wrote:
> > > > > According to the CRB over FF-A specification [1], a TPM that implements
> > > > > the ABI must comply with the TCG PTP specification. This requires support
> > > > > for the Idle and Ready states.
> > > > > 
> > > > > This patch implements CRB control area requests for goIdle and
> > > > > cmdReady on FF-A based TPMs.
> > > > > 
> > > > > The FF-A message used to notify the TPM of CRB updates includes a
> > > > > locality parameter, which provides a hint to the TPM about which
> > > > > locality modified the CRB.  This patch adds a locality parameter
> > > > > to __crb_go_idle() and __crb_cmd_ready() to support this.
> > > > > 
> > > > > [1] https://developer.arm.com/documentation/den0138/latest/
> > > > > 
> > > > > Signed-off-by: Stuart Yoder <stuart.yoder@arm.com>
> > > > 
> > > > Perhaps a dummy question but is this "QEMU testable"? I know how
> > > > to bind swtpm to QEMU and make it appear as CRB device on x86-64.
> > > > 
> > > > I don't see much testing happening with these ARM CRB patches,
> > > > and if that works in the first palce  I could probably add
> > > > a new board target to my BR2_EXTERNAL [1].
> > > > 
> > > > I can of course do "negative testing' i.e. that these don't
> > > > break x86 ;-)
> > > 
> > > Unfortunately this is not currently testable on QEMU.  We are using
> > > the Arm FVP [1], which is also a machine emulator, with the firmware
> > > stack and an fTPM running in TrustZone.  The firmware, fTPM, etc are
> > > not all publicly available yet, but everything is based on open
> > > source projects and the intent is that all the components needed do
> > > test this on FVP will be available at some point.
> > > 
> > > There is nothing fundamental that would prevent this from running
> > > on QEMU, but just a fair amount of integration and possibly firmware
> > > work.
> > 
> > OK, it's cool and the patch looks totally fine and I can
> > "hallucinate it" so:
> > 
> > Reviewed-by: Jarkko Sakkinen <jarkko@kernel.org>
> 
> Hi Jarkko,
> 
> It looks like this patch did not make it into 6.18.  I wanted to make
> sure it didn't get lost.  Will it be queued up for 6.19?

Totally my fault, sorry. There was a bit shuffling with TCG_TPM2_HMAC and
some other things, and this one slipped over :-/

Since it is non-intrusive despite not a bug fix,  I think I can put out
-rc2 pull request to Linus, and see if he sees this acceptable.

> 
> Thanks,
> Stuart

BR, Jarkko

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859161.eml"

Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.10])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 9589D354ADF;
	Sat, 18 Oct 2025 11:34:25 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.10
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760787267; cv=none; b=TGbiYz1lTeNqLbCCpEIq6LPvCATIwcvHfp0IOGyJvMPNZi2skeBx7y0vNHdxVY0NF7yEI1nWlaf+VTlvufWtEaNpVaz6sAeuucO1LJCQLRYx1pjIWOqnu8xKVOsTiiG8ySy0r0huwYOtqJaBN85XWFL574TttoYWG5wiNeFvrSM=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760787267; c=relaxed/simple;
	bh=lxmXxI9NVNvUFbJkHjVwI4PAcvRKTU8tPXimX86qghE=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=B1dhfoYc2J2VjnfnMWZZaL1YJZfP18k8AFPyTCv8b2SK96vz2jztWKBA3gDS2zXStBnfxBmveMnR6/2ADAKE6KYAkvBt49kzinpZfOwjQmYK8izWbbKLabtE17hbnlJ491faCfAGL6nM8JIVNYiI8y8lsMPUaM7AbLgXNaToJbM=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=cXD+BNUK; arc=none smtp.client-ip=192.198.163.10
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="cXD+BNUK"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1760787266; x=1792323266;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=lxmXxI9NVNvUFbJkHjVwI4PAcvRKTU8tPXimX86qghE=;
  b=cXD+BNUK15x2DaVHETizGjZvPMTkYntmBc6Kx7r5yOBVZtqvudKCRrD+
   ZeGcG/SS/EssfXQjB8hYjBmEDDxQHubNhPhz3BP+nrel6YJIRa9q0AwLA
   YuPwg+JheXBkzbkqB9PQZicI/slRoY5iYBOGnE13XOlWj2kIvz1cJDFDl
   cZl/KyAEY70qyTLak3SOVPJqmmDf4QUbNeN0voBku1UKOPEuYUabafMeF
   7yZwWS4XTTr5MxnUjIKNiCkoYGjkqVCNKeo67aWVUkMGJd2LOEtWB8Dlc
   oRwSpPIbQ5pcQtOGZsR7sCSLrX7jHpB5M+l6KYabGdLAmAyCQtxj0BVJd
   Q==;
X-CSE-ConnectionGUID: imIc4URUTK2Nw4UKeVd23A==
X-CSE-MsgGUID: 8HJQArxoT5+YpoH0jt46rA==
X-IronPort-AV: E=McAfee;i="6800,10657,11585"; a="74331305"
X-IronPort-AV: E=Sophos;i="6.19,238,1754982000"; 
   d="scan'208";a="74331305"
Received: from orviesa009.jf.intel.com ([10.64.159.149])
  by fmvoesa104.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 18 Oct 2025 04:34:25 -0700
X-CSE-ConnectionGUID: hItXz9+CR9+morbJD6EyVA==
X-CSE-MsgGUID: MR5JyuycRausU/z8Jyg5Pw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.19,238,1754982000"; 
   d="scan'208";a="182491676"
Received: from lkp-server02.sh.intel.com (HELO 66d7546c76b2) ([10.239.97.151])
  by orviesa009.jf.intel.com with ESMTP; 18 Oct 2025 04:34:20 -0700
Received: from kbuild by 66d7546c76b2 with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1vA5CU-0008G9-0M;
	Sat, 18 Oct 2025 11:34:18 +0000
Date: Sat, 18 Oct 2025 19:33:56 +0800
From: kernel test robot <lkp@intel.com>
To: Laurentiu Mihalcea <laurentiumihalcea111@gmail.com>,
	Abel Vesa <abelvesa@kernel.org>, Peng Fan <peng.fan@nxp.com>,
	Michael Turquette <mturquette@baylibre.com>,
	Stephen Boyd <sboyd@kernel.org>, Rob Herring <robh@kernel.org>,
	Krzysztof Kozlowski <krzk@kernel.org>,
	Conor Dooley <conor+dt@kernel.org>, Shawn Guo <shawnguo@kernel.org>,
	Fabio Estevam <festevam@gmail.com>,
	Philipp Zabel <p.zabel@pengutronix.de>,
	Daniel Baluta <daniel.baluta@nxp.com>,
	Shengjiu Wang <shengjiu.wang@nxp.com>
Cc: oe-kbuild-all@lists.linux.dev, linux-clk@vger.kernel.org,
	imx@lists.linux.dev, devicetree@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org,
	Pengutronix Kernel Team <kernel@pengutronix.de>
Subject: Re: [PATCH v2 3/8] clk: imx: add driver for imx8ulp's sim lpav
Message-ID: <202510181949.IazLEB6V-lkp@intel.com>
References: <20251017112025.11997-4-laurentiumihalcea111@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20251017112025.11997-4-laurentiumihalcea111@gmail.com>

Hi Laurentiu,

kernel test robot noticed the following build warnings:

[auto build test WARNING on pza/reset/next]
[also build test WARNING on abelvesa/clk/imx abelvesa/for-next linus/master v6.18-rc1 next-20251017]
[cannot apply to pza/imx-drm/next]
[If your patch is applied to the wrong git tree, kindly drop us a note.
And when submitting patch, we suggest to use '--base' as documented in
https://git-scm.com/docs/git-format-patch#_base_tree_information]

url:    https://github.com/intel-lab-lkp/linux/commits/Laurentiu-Mihalcea/reset-imx8mp-audiomix-Fix-bad-mask-values/20251017-192620
base:   https://git.pengutronix.de/git/pza/linux reset/next
patch link:    https://lore.kernel.org/r/20251017112025.11997-4-laurentiumihalcea111%40gmail.com
patch subject: [PATCH v2 3/8] clk: imx: add driver for imx8ulp's sim lpav
config: xtensa-randconfig-r132-20251018 (https://download.01.org/0day-ci/archive/20251018/202510181949.IazLEB6V-lkp@intel.com/config)
compiler: xtensa-linux-gcc (GCC) 11.5.0
reproduce (this is a W=1 build): (https://download.01.org/0day-ci/archive/20251018/202510181949.IazLEB6V-lkp@intel.com/reproduce)

If you fix the issue in a separate patch/commit (i.e. not just a new version of
the same patch/commit), kindly add following tags
| Reported-by: kernel test robot <lkp@intel.com>
| Closes: https://lore.kernel.org/oe-kbuild-all/202510181949.IazLEB6V-lkp@intel.com/

All warnings (new ones prefixed by >>):

   drivers/clk/imx/clk-imx8ulp-sim-lpav.c: In function 'clk_imx8ulp_sim_lpav_aux_reset_release':
   drivers/clk/imx/clk-imx8ulp-sim-lpav.c:52:9: error: implicit declaration of function 'kfree' [-Werror=implicit-function-declaration]
      52 |         kfree(adev);
         |         ^~~~~
   drivers/clk/imx/clk-imx8ulp-sim-lpav.c: In function 'clk_imx8ulp_sim_lpav_register_aux_reset':
   drivers/clk/imx/clk-imx8ulp-sim-lpav.c:65:16: error: cleanup argument not a function
      65 |         struct auxiliary_device *adev __free(kfree) = NULL;
         |                ^~~~~~~~~~~~~~~~
   drivers/clk/imx/clk-imx8ulp-sim-lpav.c:68:16: error: implicit declaration of function 'kzalloc' [-Werror=implicit-function-declaration]
      68 |         adev = kzalloc(sizeof(*adev), GFP_KERNEL);
         |                ^~~~~~~
>> drivers/clk/imx/clk-imx8ulp-sim-lpav.c:68:14: warning: assignment to 'struct auxiliary_device *' from 'int' makes pointer from integer without a cast [-Wint-conversion]
      68 |         adev = kzalloc(sizeof(*adev), GFP_KERNEL);
         |              ^
   cc1: some warnings being treated as errors


vim +68 drivers/clk/imx/clk-imx8ulp-sim-lpav.c

    62	
    63	static int clk_imx8ulp_sim_lpav_register_aux_reset(struct platform_device *pdev)
    64	{
    65		struct auxiliary_device *adev __free(kfree) = NULL;
    66		int ret;
    67	
  > 68		adev = kzalloc(sizeof(*adev), GFP_KERNEL);
    69		if (!adev)
    70			return -ENOMEM;
    71	
    72		adev->name = "reset";
    73		adev->dev.parent = &pdev->dev;
    74		adev->dev.release = clk_imx8ulp_sim_lpav_aux_reset_release;
    75	
    76		ret = auxiliary_device_init(adev);
    77		if (ret) {
    78			dev_err(&pdev->dev, "failed to initialize aux dev\n");
    79			return ret;
    80		}
    81	
    82		ret = auxiliary_device_add(adev);
    83		if (ret) {
    84			auxiliary_device_uninit(adev);
    85			dev_err(&pdev->dev, "failed to add aux dev\n");
    86			return ret;
    87		}
    88	
    89		return devm_add_action_or_reset(&pdev->dev,
    90						clk_imx8ulp_sim_lpav_unregister_aux_reset,
    91						no_free_ptr(adev));
    92	}
    93	#else
    94	static int clk_imx8ulp_sim_lpav_register_aux_reset(struct platform_device *pdev)
    95	{
    96		return 0;
    97	}
    98	#endif /* CONFIG_RESET_CONTROLLER */
    99	

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests/wiki

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859162.eml"

Received: from us-smtp-delivery-124.mimecast.com (us-smtp-delivery-124.mimecast.com [170.10.133.124])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E5A401891AB
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 11:34:59 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=170.10.133.124
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760787302; cv=none; b=eSwpy/tI4sOvR+dh4Rt4HEoQxrk2MR5PS4lyEH0mrx3cl98e+HqAqxIOq3C3+4FTZPtszeANwzFjP2INf3bF4QmAhEFFU670XYKU6wV4cVQZjdpJkb7dsDavcHK05msZE2Ic1vS04urL3XCuDaeMEIe3N3lpskSokgYwfCZRLMM=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760787302; c=relaxed/simple;
	bh=2HOj/xzKhcO8s4sqeEqwsRiLEwIcFjk5Y3X2Ol/ZICk=;
	h=Date:From:To:Subject:Message-ID:MIME-Version:Content-Type:
	 Content-Disposition; b=Wz8w6Eke3fFjHB1r9Gj+NlzSj8QCsPKmka5+VRTtcmHdU24Hgjxsb4PNI0te0MimEZggL5kJrwnX4W+ASB/5vFqdvfrprMg+9ZcbdoA7BSsH9TkFxDYaDH+2EEewy/4BZXrIzpLS1O29zhuBrSjvwaZ/fCdlxT923hcSMrBNsBc=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=redhat.com; spf=pass smtp.mailfrom=redhat.com; dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com header.b=S8LcK6J+; arc=none smtp.client-ip=170.10.133.124
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=redhat.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=redhat.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com header.b="S8LcK6J+"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
	s=mimecast20190719; t=1760787298;
	h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
	 to:to:cc:mime-version:mime-version:content-type:content-type;
	bh=G9/JHrzXmAgdFgKt0xgGfmf/DuE+Fs6aLIAKhwVZ77E=;
	b=S8LcK6J+GMilfWnhG3FwAVlwY7AQ7LInMyXlYHYp17shBN9slzUUKLv1zJBj40N+xiJZ+j
	z556dS41n/1JrUQ1V/dU0Li5IuKdx8yOLcwtdQmAeXjwulozj/9PbYdu+TBaMXamla3Sv3
	KItv/b0DIb6DaJPL+RJ+nAIbH7QnkCs=
Received: from mx-prod-mc-06.mail-002.prod.us-west-2.aws.redhat.com
 (ec2-35-165-154-97.us-west-2.compute.amazonaws.com [35.165.154.97]) by
 relay.mimecast.com with ESMTP with STARTTLS (version=TLSv1.3,
 cipher=TLS_AES_256_GCM_SHA384) id us-mta-652-ZcRzIoybNWCaXpmV_1ZKfg-1; Sat,
 18 Oct 2025 07:34:57 -0400
X-MC-Unique: ZcRzIoybNWCaXpmV_1ZKfg-1
X-Mimecast-MFC-AGG-ID: ZcRzIoybNWCaXpmV_1ZKfg_1760787295
Received: from mx-prod-int-06.mail-002.prod.us-west-2.aws.redhat.com (mx-prod-int-06.mail-002.prod.us-west-2.aws.redhat.com [10.30.177.93])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
	 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	by mx-prod-mc-06.mail-002.prod.us-west-2.aws.redhat.com (Postfix) with ESMTPS id 13A541800245;
	Sat, 18 Oct 2025 11:34:55 +0000 (UTC)
Received: from localhost (unknown [10.22.88.15])
	by mx-prod-int-06.mail-002.prod.us-west-2.aws.redhat.com (Postfix) with ESMTP id 982A31800446;
	Sat, 18 Oct 2025 11:34:53 +0000 (UTC)
Date: Sat, 18 Oct 2025 08:34:52 -0300
From: "Luis Claudio R. Goncalves" <lgoncalv@redhat.com>
To: Ingo Molnar <mingo@redhat.com>, Peter Zijlstra <peterz@infradead.org>,
	Juri Lelli <juri.lelli@redhat.com>, Phil Auld <pauld@redhat.com>,
	Valentin Schneider <vschneid@redhat.com>,
	Steven Rostedt <rostedt@goodmis.org>,
	Vincent Guittot <vincent.guittot@linaro.org>,
	Dietmar Eggemann <dietmar.eggemann@arm.com>,
	Ben Segall <bsegall@google.com>, Mel Gorman <mgorman@suse.de>,
	Shizhao Chen <shichen@redhat.com>, linux-kernel@vger.kernel.org,
	Omar Sandoval <osandov@fb.com>, Xuewen Yan <xuewen.yan@unisoc.com>
Subject: sched: update_entity_lag does not handle corner case with task in PI
 chain
Message-ID: <aPN7XBJbGhdWJDb2@uudg.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
X-Scanned-By: MIMEDefang 3.4.1 on 10.30.177.93

Hello!

The underlying question here is what is the expected behavior of
update_entity_lag() in the context explained below...


--[ Short Description:

While running sched_group_migration test from CKI repository[1], which
migrates tasks between cpusets, Shizhao Chen reports hitting the warning
in update_entity_lag():

    WARN_ON_ONCE(!se->on_rq);

In short, update_entity_lag() is acting on a task that is waiting on a lock,
sleeping, with both on_rq and se->on_rq equal to zero.

When a stalled RCU grace period occurs, rcu_boost_kthread() is called. If an
rt_mutex is involved in the process, rt_mutex_setprio() is called and may
eventually walk down a Priority Inheritance chain, adjusting the priorities
of the waiters in the chain. In such cases update_entity_lag() may be called.

What is the expected behavior for this case, to bail out of update_entity_lag()
or avoid calling the function entirely?


--[ Additional Notes:

Reproducing the Problem:

  - Install sched_group_migration[1] and run it on a loop.
    (while : ;  do runtest.sh; done)
  - In my experience, running the test with 4 CPUs reproduces the problem
    within 15 minutes. Setting "nr_cpus=4 max_cpus=4" on boot does the trick.


The scenario below is a simplification of the cases I observed while
investigating the problem:

    CPUn					CPUx

    task01 has rcu-state lock
    contends on another lock		
    (goes to sleep)
    --> on_rq=0 se.on_rq=0
					rcub/x contends on rcu-state lock
					  rcu_boost_kthread()
					    rt_set_prio()
					      update_entity_lag(task01->se)
					        WARNING()


It could be that task01 and the task holding the lock wanted by task01 are
being migrated from one cpuset to another at that point. In any case, that
is not an error, so the problem seems to be update_entity_lag() being called
to work on a task that hurts a basic requirement (!se->on_rq).


The resulting backtrace is:

[ 1805.450470] ------------[ cut here ]------------
[ 1805.450474] WARNING: CPU: 2 PID: 19 at kernel/sched/fair.c:697 update_entity_lag+0x5b/0x70
[ 1805.463366] Modules linked in: intel_rapl_msr intel_rapl_common intel_uncore_frequency intel_uncore_frequency_common skx_edac skx_edac_common nfit libnvdimm x86_pkg_temp_th
ermal intel_powerclamp coretemp kvm_intel kvm platform_profile dell_wmi sparse_keymap rfkill irqbypass iTCO_wdt video mgag200 rapl iTCO_vendor_support dell_smbios ipmi_ssif in
tel_cstate vfat dcdbas wmi_bmof intel_uncore dell_wmi_descriptor pcspkr fat i2c_algo_bit lpc_ich mei_me i2c_i801 i2c_smbus mei intel_pch_thermal ipmi_si acpi_power_meter acpi_
ipmi ipmi_devintf ipmi_msghandler sg fuse loop xfs sd_mod i40e ghash_clmulni_intel libie libie_adminq ahci libahci tg3 libata wmi sunrpc dm_mirror dm_region_hash dm_log dm_mod
 nfnetlink
[ 1805.525160] CPU: 2 UID: 0 PID: 19 Comm: rcub/0 Kdump: loaded Not tainted 6.17.1-rt5 #1 PREEMPT_RT 
[ 1805.534113] Hardware name: Dell Inc. PowerEdge R440/0WKGTH, BIOS 2.21.1 03/07/2024
[ 1805.541678] RIP: 0010:update_entity_lag+0x5b/0x70
[ 1805.546385] Code: 42 f8 48 81 3b 00 00 10 00 75 23 48 89 fa 48 f7 da 48 39 ea 48 0f 4c d5 48 39 fd 48 0f 4d d7 48 89 53 78 5b 5d c3 cc cc cc cc <0f> 0b eb b1 48 89 de e8 b9
 8c ff ff 48 89 c7 eb d0 0f 1f 40 00 90
[ 1805.565130] RSP: 0000:ffffcc9e802f7b90 EFLAGS: 00010046
[ 1805.570358] RAX: 0000000000000000 RBX: ffff8959080c0080 RCX: 0000000000000000
[ 1805.577488] RDX: 0000000000000000 RSI: ffff8959080c0080 RDI: ffff895592cc1c00
[ 1805.584622] RBP: ffff895592cc1c00 R08: 0000000000008800 R09: 0000000000000000
[ 1805.591756] R10: 0000000000000001 R11: 0000000000200b20 R12: 000000000000000e
[ 1805.598886] R13: 0000000000000000 R14: 0000000000000000 R15: 0000000000000000
[ 1805.606020] FS:  0000000000000000(0000) GS:ffff895947da2000(0000) knlGS:0000000000000000
[ 1805.614107] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033
[ 1805.619853] CR2: 00007f655816ed40 CR3: 00000004ab854006 CR4: 00000000007726f0
[ 1805.626985] PKRU: 55555554
[ 1805.629696] Call Trace:
[ 1805.632150]  <TASK>
[ 1805.634258]  dequeue_entity+0x90/0x4f0
[ 1805.638012]  dequeue_entities+0xc9/0x6b0
[ 1805.641935]  dequeue_task_fair+0x8a/0x190
[ 1805.645949]  ? sched_clock+0x10/0x30
[ 1805.649527]  rt_mutex_setprio+0x318/0x4b0
[ 1805.653541]  rt_mutex_adjust_prio_chain+0x71c/0xa40
[ 1805.658421]  task_blocks_on_rt_mutex.constprop.0+0x20c/0x4a0
[ 1805.664081]  __rt_mutex_slowlock.constprop.0+0x53/0x1d0
[ 1805.669305]  __rt_mutex_slowlock_locked.constprop.0+0x48/0x70
[ 1805.675051]  rt_mutex_slowlock.constprop.0+0x4d/0xd0
[ 1805.680016]  rcu_boost_kthread+0xd5/0x2d0
[ 1805.684030]  ? __pfx_rcu_boost_kthread+0x10/0x10
[ 1805.688646]  kthread+0x108/0x250
[ 1805.691880]  ? migrate_enable+0xd1/0xf0
[ 1805.695719]  ? __pfx_kthread+0x10/0x10
[ 1805.699473]  ret_from_fork+0x116/0x130
[ 1805.703226]  ? __pfx_kthread+0x10/0x10
[ 1805.706978]  ret_from_fork_asm+0x1a/0x30
[ 1805.710908]  </TASK>


Please let me know if what I reported above is enough to understand the problem
and design/suggest a solution. I tried to organize the scattered information
bits as well as possible.

Best regards,
Luis

[1] https://gitlab.com/cki-project/kernel-tests/-/archive/main/kernel-tests-main.zip#general/scheduler/sched_group_migration/


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859163.eml"

Received: from mout.web.de (mout.web.de [212.227.17.12])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 57DBD1ADC7E;
	Sat, 18 Oct 2025 11:41:03 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=212.227.17.12
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760787668; cv=none; b=XsdlfnkuCIOheBB7gCiINglKN3epZtd070sV4c/jT17/tYpyo65/G7T7VFjqlgjxBXDwuhD7ZQyo6XYAFF88glHLzVQagLXkn+U0KbcAnm8QtkVjkBBb9u/JjWyzhhSpgCTRpIW+ulbgK7ReOeoFDENW6J0M62G8wxI3uB9D4nw=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760787668; c=relaxed/simple;
	bh=LiDlH8BrVQvz8trw9QM3KlEdCPM3TO/pVTGoFjDAUuo=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=oaCAHnucwwkaUBgt47grWtKGAOiSBlHoDwzGwPyKQXsVBeQHX64OD5A5jCPRwvVfzBzPdi3QuRSbdKlZq9VaixcmpIQvXqX54t9TIET2rHnzoTRIyXIXau0Rd7o3dr6kRrvgVvir2V4H+TlN6hhI+0h3hfXY3Bl1Z8pBJdbYtYc=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=web.de; spf=pass smtp.mailfrom=web.de; dkim=pass (2048-bit key) header.d=web.de header.i=markus.elfring@web.de header.b=RD0oRDFL; arc=none smtp.client-ip=212.227.17.12
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=web.de
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=web.de
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=web.de header.i=markus.elfring@web.de header.b="RD0oRDFL"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=web.de;
	s=s29768273; t=1760787647; x=1761392447; i=markus.elfring@web.de;
	bh=rFRibB9Qt7JGgXkVO4Hx93pWdntl56FRy/NNmI1KJYY=;
	h=X-UI-Sender-Class:Message-ID:Date:MIME-Version:Subject:To:Cc:
	 References:From:In-Reply-To:Content-Type:
	 Content-Transfer-Encoding:cc:content-transfer-encoding:
	 content-type:date:from:message-id:mime-version:reply-to:subject:
	 to;
	b=RD0oRDFLAVyJeAgEg2Z5lc/gyefM4fY0NPlf0v3UEyDMR0zJn1hktmDx+BuezQPh
	 Ubuz3Y1rcdlGYrpGUVOTlt8KEbS2fmuH/A4Fk4DSJ/DYU5oPXegLpBFyoEoKtSwsY
	 fQsBcyiQD9NQ/rXi4fTJK71hD+EKg8QiiRNhp+srUlZmWcImsiARpUmC7sqXVFi+Z
	 vRCOqEpVevdMoOwMdGtp1p41FrP+edSgAmJbvFyX3T8J637bt7n17nBulMWwVhtoY
	 CqK8MPkIGh+G/yilR1S5FOeD+7Ru33v1O07IvYQwFyytM0bZfREtqMRqTw6KEWbH6
	 m2fKhOpUHdfcq//a1A==
X-UI-Sender-Class: 814a7b36-bfc1-4dae-8640-3722d8ec6cd6
Received: from [192.168.178.29] ([94.31.92.233]) by smtp.web.de (mrweb105
 [213.165.67.124]) with ESMTPSA (Nemesis) id 1MT7aP-1um33g2kNr-00Kkq5; Sat, 18
 Oct 2025 13:40:47 +0200
Message-ID: <b39e1a7d-1505-4f26-aa6c-c18a151be8ab@web.de>
Date: Sat, 18 Oct 2025 13:40:45 +0200
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [1/3] PCI: j721e: Propagate dev_err_probe return value
To: Anand Moon <linux.amoon@gmail.com>, cocci@inria.fr,
 linux-pci@vger.kernel.org, linux-omap@vger.kernel.org,
 linux-arm-kernel@lists.infradead.org
Cc: Bjorn Helgaas <bhelgaas@google.com>,
 =?UTF-8?Q?Krzysztof_Wilczy=C5=84ski?= <kwilczynski@kernel.org>,
 Lorenzo Pieralisi <lpieralisi@kernel.org>,
 Manivannan Sadhasivam <mani@kernel.org>, Rob Herring <robh@kernel.org>,
 Siddharth Vadapalli <s-vadapalli@ti.com>,
 Vignesh Raghavendra <vigneshr@ti.com>, LKML <linux-kernel@vger.kernel.org>,
 kernel-janitors@vger.kernel.org
References: <20251014113234.44418-2-linux.amoon@gmail.com>
 <a2cefc72-de44-4a23-92d2-44b58c8c13fe@web.de>
 <CANAwSgTtaAtCxtF+DGS-Ay4O3_9JMwk-fJ27yoijhWWbF2URrg@mail.gmail.com>
Content-Language: en-GB, de-DE
From: Markus Elfring <Markus.Elfring@web.de>
In-Reply-To: <CANAwSgTtaAtCxtF+DGS-Ay4O3_9JMwk-fJ27yoijhWWbF2URrg@mail.gmail.com>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 7bit
X-Provags-ID: V03:K1:brUrWs3f1wRlvb50xsoJvVd5EaCNX6rLdO+gQJ+rCOePPXiZu9s
 mQzVRW3tHeyUJ8GLTZOHmIVAiBP3LT1soBbrApPJbXg9C9aO26IjY0RdGZLuALcXxfvapQo
 iXhix1wfpm+VcEAHfiYBsG9TmZbmKQ7onDPKdgA3BY4PrF/w1QXQeEYujiTYQGPdYu2bqzJ
 zcqXxxhljGxr3oHGgCZ3A==
X-Spam-Flag: NO
UI-OutboundReport: notjunk:1;M01:P0:BcQRwCXMQJQ=;3e10CcDiOryBiF/b1jz+Xz04tYX
 6tMWnqurP8xXWjcpNcnR52/Bk3BOz5LZzaJw1drgMYRpiditN4eshGtilqLvQpw68Nc8/FPzZ
 rsTUkUpsXkKJr0RxBEejvmX6lUhyc3o8mfSPcBbp7U2jEHBJ2kHwRc34KEEqkt1/af4teVpI+
 I69YVuAbSO+i+kEgR2p2aNTJkQODqspgo1flHUiDxmXQzjDGniYnQokzrJ4/+zvchOWrKzs7c
 48YDKAZnLj0K3qC3HcnEawKPQgQnKD9TjwCOP/S9bDWVhZvEXpw/Rhwktx2mZpcEhakMKcQYM
 gIYPJeR6QoE8+C3rPGOgU3l6Ar77WltSf2uTDc39pCe99cQO/J/rHV0iicAt++NlVHjj0q5m2
 T/sxg3qCJwIySOTzLGDYifJuqLd6qk2vr6/zh1IrBbBZIuko2bgDefluV4fwq1d+I7ki8xHBo
 6OWBuVOD3vOI/YlRugJIXjeTwJFFUheX+MlKFW6TV3dDWwUYogHSppYR5+LEGnDbw39yGkpo0
 mPM86U5vPW9/cuSaj6gM0uWFpRBf8cj6IHfmv4OzRLuzjtvzy7YqbEshJTVf53jdvM/Ne98Ix
 LWSivOwCb2R7WA3IYztnuF4XH572tr9rpJzlkhEvekiHlZtm+uy9zKR1dIL4BoRM2IR7vSraL
 zzx5jpJ4OYjiM61Ova6cCxlmVk9xNy7Cu2yxiNvXIef5UdnaD0vFYbmZJ4+7wvSISwWdZEZFd
 OyrI36mtJT8KhOMZeMzTYn1sHlTdvK5lQ3tyE/WQ+qKr1gKT7gPJQ2nwvpqzGDkgz+jIcu+om
 GGtgqQxlKsZz96wzEKKFRw/7r1EmcDIEicMbNYUbortWIXxmJ571bfhAH1epQXgmgCtlrNymj
 PQTW05aiUQMCzKDdslGXZcK9lpo1rDRP9eNFrn9aL7QzK/mhjsqaWTT+zVdNdbPxu2mmTox8M
 cCnIza3lIVThGcaZoaX+XtPCByRWT5SzH64tJ3eB8qNzjeyeeL7PL3lE/RsZIcZ2bT4bXtIKM
 CEBXjjsCVJtQ9+KJQPPS1BFE0BbXD+JcHoFi6siN9fMeFL08qOyjL1scD84VKUzrBbeMZE42I
 whwJdecWWUvW+WN2UDsT92gkdoJhWa5ypBb5pCKN7WzuTUo3oqHfx1n7+d9aQjEIneR8DbCvk
 YLbgX6XQQmBn7hJtcvFP2jv3ju4FqtRqLRpnno6WEeTm04IApR8PuhPm9JM4Q7dth3vpRYSe9
 SlVt3fV71pwcPNmcc3WMWId9Ir8DKdT4K1pMDkWLBhm+5xHg6ZvZ2X4xzT8r21EoVfscDpflR
 ozqGN0/EdyxEr2btUAImnsiCd1v070+gOtuo/GWlRbOgNeuM7o6WfCQsURWTqga/aaJyYR/zv
 i4y7o6IUMD+EPHe7I0vCa2MMu9CalwA/5PJavZnT4LyDCKPa5/2bxY6ZlW2zWmOI4vDaQf12f
 klRDl1mqmirQgRxnglF3uXyLJYsdjyQY6H6RtmmddH4WT5wpH6E4OVzaIT+ZojssB91tqinNV
 KMIDdPQPdUqxFNf4XIYl7IkebzbaTqMDtLrTF2jxzqRm3rjQEiY5HpSS/v/d69yEg9dZSuWQZ
 PhhDoCMNT+LqNCH5HIzeTH1V7ci9zjBZ4QVCBgi/+6+BvHvUMfyb3KrSLTqIsDHwi829iGtMi
 n2LicQIKq6JqW1PmU/qno4QaxiVNC363NF6AQuAC06UHd2qNark+X7bCvCAO0JFO/5q8i4ajN
 mfwlxQad3ZtXL5ZYYfsCq3/5QnfPQuXmZYBDvqZHeVn3+L5ItvgN/r0rsXrUhlWE7ML2kjZkG
 MgE9RhPqL503VQtOOg+GcBqEcQ+Ho8lF9strWYE9qUtWbbSMoJoTTG80cLoiu0STKacjhmTGt
 uGWk/iTffaBGS46BLo6538ChzYre90sWNgHztq0v7PU57DgdQ8JHasikR1VZVj1V9by7/O1j4
 yiLNoiSLii3x6WcY1Kcz0262vqrkvODHEvdC/LcivX+QrKnK45jCEiMoCmcNmnmayeTzmciYW
 W8u2mORdbEa2PCgqvWDF8l2MBGRQTApyLq9kbF1WuSgo2V/NOkyIc7On//si9ia0K+S79nUvH
 sjbDbwqOjj0X5zvM7Qz4f+bVcFM19CVbDO7k14FKvnENqNzAzOXJi8pOBQa9SQLBcgoGMSVrn
 FnI+X10D/KOFk20gTYcqGigz8NXv3efI4d4wgJ4/yloCIdvxdxzNCAQvvFvo8mtd+eHBQQNIn
 F6JNUNPIdU65PQYryq4KCEPqVcOxicGDXS0AH9Xiqt2F86xpg/uFOwC6lhMSgiz4SpSldLSGi
 bsjdM8Di/tXtnw7YOHRl5LR2cYR4c67Z/AqRqnq6h+DElWFZYm+i5Pu2I3CvZwvSyrl6mkMAG
 MqxMoi+bQL6TRLEQZ4SkUBgsK4SbWGCLFnNWNZAGrozNc3Oip0u9/R6cFemROagjCLBpXxj/Z
 V5wO2FM7NP94myoDS61rqy/AYyf9tJUgKWMJA+rbcshnOY1H31+KUZLicbcm4CzWw9aIItFXN
 jwbTTY+n1anDLhK6j7MK3DsCitZfkI8y/SZ0fYzpVqQB8UB8XI86dWPdVRO8cySrlKKa2Pjac
 swK/j6iKrt+58gj/bRBUryjJ/W2iLuv4yD8tD6I6MyuYt/ndATDlvsgl5gvqR4n2Auu7GToHV
 3MUcLbxq+b/Yr+fRFGAvqW/NMFo1rMRmBS3y6X+lLz6vBJfBnSHRAnFHYWJas9K9IcAZsfNnz
 Jdd9WMuuP2NlfmTPfihYOgRxE3fJ3s8mwe0fVJzVRF1TKJUXvTyNvS7fcTAdfrYTOQng3T6nt
 KtkMBitRaMi7u7TTXNyCnYYj9Brux3drUlmJs/pcgxOpHlJ8U96hdq3qUSmvEZOIS2ZYkQMI2
 wLOXzv17DwJeFeM5Bfz3YeG7BB9Azv0HuFcLQiKXOQad0k8KKrWju1nxDi2RSqie6zHfD/66z
 mqckhtvTXJYSNysDEXi2mtBqnR+M7N/PuuqEt9LiDnnW2KYO5lHQfxgPAf5iH9sDKeYJEgJtw
 XFF5o7CpICWKIm3hHvqMnN2TV9IG1sdHF3QqfPfcw29FLI7stuMgkdmer6nzONhejiWTbxwAu
 ccs/4c6QS1sWVqHLFG3DozhVAy0vmw+DK7ROZ1ot87qqKWmi0nfEWhlwrw1dPpgLRuGpiLT0a
 0jS3BMQPPblgL5dwn//IlU+OylskSGUIVQaeQYN2ozzbde3Jb010xR56fzVHnfRGRojXX3dpa
 veRGArOm0RJDxKl2KUqpUqCUxg3LG79c5SL1czm13IRaUiyrDYKq+ctiMPxPIFDRRbJmpQtuk
 IUzKV/BF3sEwmmtfI3iy91AePUgB2C/ylFdog1Ya4gvmaXVKIlAVwUqUHV9NJmpCpDz9JR7nv
 YbK0KyV7x9XwZ6YKsebff7iZCtOwQrz9tFnEKerQ5ErBZqnwnP18KjD+jB1rBGCc/QRKdSk9T
 92Z/CTW5iO8T/fDoGuV38bvz0ks3USjNOE+O/EaE0qnG6KlpUdtmOGywLtPQlU6XgLz4WjAxe
 mNbzG7yNQTRabIZoVED9WYyZH7h6KoJAAicfYFU8jEmyNmo4AgSYu3qJBur2xeSQIqWGYc/PL
 4qkdzfetCLM0Ykag88NkqsrmI9ZLOtkwipdHM91tBC58uLg9CWNIGJuupaxzsqBXeD3bsKx1Y
 5BWom2nxPLIBCc8tz9FDKDagQhRK27kBliQR+ew6Hk1L6qdHqlMQbuDo7b4xombhovvr50dBL
 CASzWfXwT1kqMxz13jcSkcwyZLkOib9e4OZqmUy5sRsYfHTkxa2sg8w9dqEZZGcUf32qiYeej
 6Gki/iB+7RuRbs2NeQ/9TLv//B+hK2JlV2ZkWFH0B/56grOfHUKe7WhPfmpzXD2AcxdGMXOjP
 VShxoNLlByyqX/vYOLCIB0104TdWxBrRiD/Y7S9ehqrnlJvqaZJrLOKNu//UdInNSFuwII7L5
 qTrR4E+g1VDC0y21maZj1Rp75JrffWbRX0QHDUbv1XRpXSdzyGyUBaKExP5NFPQv7oW82l9j6
 RzngBlV+z4YY5fyWDq+HlqvhtFhm56ndoqPS2mAmZXFq2gh7EikzMV58+WcezZF9pAU5SrZlo
 lur66ugJGvvkP+31jvHeZYC4huE5co9OvGje65fw07hxTdoEZC+jvMvaTwbbwlnWyv7O74swV
 mkgkiaj/dIcBTiVZCWsc0bG7s+kY4iAqmB09+rSdcAF6NT1ZUJZdaj/bPbUxVbKObnD3lhRvL
 nqMkHK+jIHprvRqK39kOZgb+r5uz1XB20WacoTt1RwRcsZkavlPTiwJr7EdkK3LdvsTNX7TV+
 /sQ2MwKoA6dTglvY3MgGOjxwF3UpSVyyiFEH3G/NuQrr2ixBujGRnT5QWR+K2NkRj0Du/UyeY
 H14S4dLBZ53W0ss/jBHiU8j3iv0coM29p7r9V6caBKEYqKP+RNRUUonCTkhW6SAV0ErnCoebQ
 6bwovByPX7XuV7t35Atsn7xhJks2GQpU9DojBygXiV6Gb4ZFnLpSQwn/jCqspUOU30JMngrXx
 hHhkQIG5zw5v5i8K2WZpUpQEYHfSKzyV5iwXHVZ1VU62tPJLbjpyJq+QtX+BkFg7jZ5hivN17
 1ITOIlNLNHshWWreg0z82NkOS7/IaziG3iFUO4qS6DMUW+6g1ixkDxUcD8peRxsRedws8QVJU
 wTmhlpcIUth04hSqwQGuZiKE76APH9vFngzz31y+D0Xz5ORQ1jLXwgMrZLwbbHujo5BoPFtv7
 5JTAXsrrePdxVPdOBm0sIKKTwAsqa4En/ely5Z7Tk4GrHpHi6UkGS0xaq0dNSXO9/mZgCFov8
 Qd3FDQIviliSmHSkmZDaNtboTpUHxr/fsFXPPVexCaae+gQ8ycjgOmnzXfFrUUWhVEJpThtEb
 O9qe+opQvFn5+se6Ra5rug+vdpDl/RoLcAunDazo7xv4+4hmOCMPYdAW5phhEEtCn3xQB+QAC
 8X2DXg6pFFj0GJklbujzG5O5X+6OEOyVKBQ=

>> How do you think about to achieve such a source code variant also with the help of
>> the semantic patch language (Coccinelle software)?
> I do not have any idea about this.

Can another source code search pattern (like the following) trigger further
development considerations?

@display@
expression dev, e, x;
@@
 if (e)
 {
 ... when != e = x
*   dev_err_probe(dev, e, ...);
 ...
 }


Regards,
Markus

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859164.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 06B3B1EE033
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 11:46:48 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760788009; cv=none; b=ugq8WnpPlJxsEjS2O6ji/JfkVgg9Tl3l7AMJTIBGrtvUXmFMi/+tGJB0Np+BnBhqRgWgOlPNOdH/U7EI7pnna4EMa2DNXrN8rQR3bzvNnNBkL9DZrhhu/8bfHzId7vPvoV6rtzi/WmdnGOqlMQv2pkECupN9RrUYSkGXlqFp/2c=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760788009; c=relaxed/simple;
	bh=6CXt2WoBSPpYfzMJB6wZKfudaHXk53V5XAwPHxMaOTg=;
	h=MIME-Version:References:In-Reply-To:From:Date:Message-ID:Subject:
	 To:Cc:Content-Type; b=PIKs3nRACRiC/7uaWT+WhtZ8sI/cuczr/OjLDkf3NLVA8hTKRuk8p+Ocrb0j9ZJ25pjDjGfdYUuks+CR50KRrcX/nXQ2LylzeUh/BBy8WFIELkFWnx0kGEBpKK9dyksQDLmn5k+XZih2ihqRYLJKozVj/Rd0nyeEn9N09hCpC2g=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=NP+doxyO; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="NP+doxyO"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id A2F20C113D0
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 11:46:48 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760788008;
	bh=6CXt2WoBSPpYfzMJB6wZKfudaHXk53V5XAwPHxMaOTg=;
	h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
	b=NP+doxyOFh8geMbWu6V6rQfrgFZugRcPByNIqly9NlvCocpXH1JKkZX+HPvHhIhwH
	 I5wBcWlIsK0aDHWBB5NioWwhFruGwxXeO/UhxiEEUOA8WWvAw2cOK2e71nPLuVGJMj
	 era0GYf/35HzIKqNRDXDJ7ycJ2kCR/fKmaVCHY4h01CgVQPelBz1xxkPzPrCvx1WDC
	 BWaezMCMoTZ9pwjl3VJO2AAEmh96NZ8vQPu3lo3/IMs4bfZ0bCrAdpUZYaOdz0/DcF
	 4u+2CZnHQp+bqcshM1Ko1oGoSKlct3YG3mGMQDVOZyMEp7B/boFakRlMp21cJzVuKk
	 31lNFSmeuXHXg==
Received: by mail-oi1-f180.google.com with SMTP id 5614622812f47-4439f1cb764so1383956b6e.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 04:46:48 -0700 (PDT)
X-Forwarded-Encrypted: i=1; AJvYcCWX0hSBnq2CsMUDEhE3KXXcbnuogh+dWvKXGATdAqFQaO8ejzDMH7k0kM5ckKm17NuY7B5ZDYT2ILCtuRs=@vger.kernel.org
X-Gm-Message-State: AOJu0YyAKqOMgGbNyPWlliNK7C3u+E/MA6D2Ag/WpWxSUwALloiLDSUA
	XMapTzhbSNRoXHNP/7ihbFWk/gSBs+EHzB2ZtxitTM5BzUJKHYMR4Y829ebfQzZY7TFA2hr+LJ3
	0M2YAK34l/DtivIqwGMdoNfwZjfY/XA4=
X-Google-Smtp-Source: AGHT+IGfmDQSfPbSYs8f803/Sl+JWn2jNXGcu/ypNvsXEKv+bABRyWjZp/y8ntX1+XwoEUJruD4K0WbHHsX4U3IBiKA=
X-Received: by 2002:a05:6808:219a:b0:43f:648b:dcb2 with SMTP id
 5614622812f47-443a2ec98camr3165318b6e.8.1760788007954; Sat, 18 Oct 2025
 04:46:47 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
References: <4687373.LvFx2qVVIh@rafael.j.wysocki> <5f0aa630-b30a-44c4-a52c-e08179cd3bf9@arm.com>
 <CAJZ5v0gBtv0bpK2swkc6D0AmanpKAvqO53dgRp2e7p9cWAM3TA@mail.gmail.com> <28ecb23b-ecee-409a-9771-24f801081d07@arm.com>
In-Reply-To: <28ecb23b-ecee-409a-9771-24f801081d07@arm.com>
From: "Rafael J. Wysocki" <rafael@kernel.org>
Date: Sat, 18 Oct 2025 13:46:32 +0200
X-Gmail-Original-Message-ID: <CAJZ5v0jMoEVUaYYPx6EtHFxsg6TF-QtDWJGrasGK7C2C+JxOFw@mail.gmail.com>
X-Gm-Features: AS18NWBrzzr4jet5h9WoMnvad54yvwS2xgqwfndHEk8wWuGlEhh4-XYopiEH4QI
Message-ID: <CAJZ5v0jMoEVUaYYPx6EtHFxsg6TF-QtDWJGrasGK7C2C+JxOFw@mail.gmail.com>
Subject: Re: [PATCH v1] cpuidle: governors: menu: Predict longer idle time
 when in doubt
To: Christian Loehle <christian.loehle@arm.com>
Cc: "Rafael J. Wysocki" <rafael@kernel.org>, Linux PM <linux-pm@vger.kernel.org>, 
	Sergey Senozhatsky <senozhatsky@chromium.org>, LKML <linux-kernel@vger.kernel.org>, 
	Artem Bityutskiy <artem.bityutskiy@linux.intel.com>, Tomasz Figa <tfiga@chromium.org>, 
	Doug Smythies <dsmythies@telus.net>
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

On Fri, Oct 17, 2025 at 8:37=E2=80=AFPM Christian Loehle
<christian.loehle@arm.com> wrote:
>
> On 10/17/25 10:39, Rafael J. Wysocki wrote:
> > On Fri, Oct 17, 2025 at 10:22=E2=80=AFAM Christian Loehle
> > <christian.loehle@arm.com> wrote:
> >>
> >> On 10/16/25 17:25, Rafael J. Wysocki wrote:
> >>> From: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
> >>>
> >>> It is reported that commit 85975daeaa4d ("cpuidle: menu: Avoid discar=
ding
> >>> useful information") led to a performance regression on Intel Jasper =
Lake
> >>> systems because it reduced the time spent by CPUs in idle state C7 wh=
ich
> >>> is correlated to the maximum frequency the CPUs can get to because of=
 an
> >>> average running power limit [1].
> >>> [snip]
> >> [snip]
> >> Anyway, the patch makes sense, let me run some tests and get back.
> >
> > Thanks!
>
> Unfortunately this patch regresses my tests about as much as a revert of
> 85975daeaa4d would.
> (menu-1 is $SUBJECT, menu-m current mainline, menu-r mainline with
> 85975daeaa4d reverted):
>
>
> device   gov     iter    iops    idles   idle_misses     idle_miss_ratio =
        belows  aboves
> mmcblk1         menu-1  0       1523    402522  119988  0.298   98552   2=
1436
> mmcblk1         menu-1  1       1481    395766  118596  0.300   97640   2=
0956
> mmcblk1         menu-1  2       1503    396560  117876  0.297   97506   2=
0370
> mmcblk1         menu-m  0       2355    703732  22275   0.032   2628    1=
9647
> mmcblk1         menu-m  1       2359    637522  24815   0.039   4075    2=
0740
> mmcblk1         menu-m  2       2356    706980  23836   0.034   3208    2=
0628
> mmcblk1         menu-r  0       1490    388180  118294  0.305   97871   2=
0423
> mmcblk1         menu-r  1       1498    393402  119984  0.305   99187   2=
0797
> mmcblk1         menu-r  2       1462    388597  119504  0.308   98640   2=
0864
> mmcblk2         menu-1  0       3303    503938  170251  0.338   150276  1=
9975
> mmcblk2         menu-1  1       3310    480508  132132  0.275   114398  1=
7734
> mmcblk2         menu-1  2       3554    466884  113659  0.243   95841   1=
7818
> mmcblk2         menu-m  0       5746    706262  24618   0.035   3802    2=
0816
> mmcblk2         menu-m  1       5741    727174  24152   0.033   3737    2=
0415
> mmcblk2         menu-m  2       5777    836940  12424   0.015   335     1=
2089
> mmcblk2         menu-r  0       3241    463112  133052  0.287   114616  1=
8436
> mmcblk2         menu-r  1       3551    422006  100494  0.238   82425   1=
8069
> mmcblk2         menu-r  2       3523    508542  140085  0.275   122880  1=
7205
> nvme0n1         menu-1  0       5407    436834  74314   0.170   54133   2=
0181
> nvme0n1         menu-1  1       5763    459510  72673   0.158   51530   2=
1143
> nvme0n1         menu-1  2       6266    489570  78651   0.161   58609   2=
0042
> nvme0n1         menu-m  0       10786   767740  23840   0.031   2855    2=
0985
> nvme0n1         menu-m  1       10586   757540  23612   0.031   2933    2=
0679
> nvme0n1         menu-m  2       11805   834012  23528   0.028   2768    2=
0760
> nvme0n1         menu-r  0       5323    431906  77426   0.179   56166   2=
1260
> nvme0n1         menu-r  1       5484    438142  76033   0.174   55956   2=
0077
> nvme0n1         menu-r  2       5353    428826  77024   0.180   57016   2=
0008
> sda     menu-1  0       972     444116  149643  0.337   129023  20620
> sda     menu-1  1       954     557068  176479  0.317   159092  17387
> sda     menu-1  2       878     540360  196405  0.363   176792  19613
> sda     menu-m  0       1634    1017918         29614   0.029   8587    2=
1027
> sda     menu-m  1       1622    878140  25323   0.029   8238    17085
> sda     menu-m  2       1632    1027167         28798   0.028   8428    2=
0370
> sda     menu-r  0       918     531112  188314  0.355   168375  19939
> sda     menu-r  1       924     521378  185727  0.356   165327  20400
> sda     menu-r  2       880     529146  196391  0.371   176908  19483
> nullb0  menu-1  0       101419  88988   23923   0.269   3080    20843
> nullb0  menu-1  1       101610  88484   23678   0.268   2821    20857
> nullb0  menu-1  2       101369  89336   23711   0.265   2795    20916
> nullb0  menu-m  0       101696  88698   23860   0.269   2910    20950
> nullb0  menu-m  1       101103  88120   23294   0.264   3295    19999
> nullb0  menu-m  2       101880  86676   22730   0.262   2709    20021
> nullb0  menu-r  0       101856  87742   23493   0.268   3204    20289
> nullb0  menu-r  1       101514  89070   23653   0.266   2848    20805
> nullb0  menu-r  2       101754  86318   23163   0.268   3229    19934
> mtdblock3       menu-1  0       163     350284  115149  0.329   97166   1=
7983
> mtdblock3       menu-1  1       179     315948  99038   0.313   78243   2=
0795
> mtdblock3       menu-1  2       134     481584  160754  0.334   144150  1=
6604
> mtdblock3       menu-m  0       215     410034  70261   0.171   55445   1=
4816
> mtdblock3       menu-m  1       205     570150  109273  0.192   90189   1=
9084
> mtdblock3       menu-m  2       252     866616  23492   0.027   9717    1=
3775
> mtdblock3       menu-r  0       132     467365  161835  0.346   144056  1=
7779
> mtdblock3       menu-r  1       164     348682  117704  0.338   97859   1=
9845
> mtdblock3       menu-r  2       132     483300  165179  0.342   147164  1=
8015

Well, this means that in the majority of cases the maximum sample idle
time is so large that UINT_MAX may as well be returned instead.

The possible correlation between idle power and the max OPP a CPU can
get to has not been taken into account in cpuidle directly so far, but
it clearly isn't true that using shallow idle states more often always
improves performance.  It may hurt performance too.

Actually, this possible correlation appears to have a broader impact,
as it may affect CAS and EAS at least in principle, so it may be
advisable to allocate some time for discussing it during upcoming
conferences.

At this point I'm inclined to revert commit 85975daeaa4d because
anything else would be clearly artificial and likely ineffective at
least in some cases.

The systems that enjoyed better performance after that commit can
switch over to teo and continue to enjoy it and everybody else still
using menu should be able to continue to do so.

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859165.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id C1A1116DEB1;
	Sat, 18 Oct 2025 12:03:39 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789019; cv=none; b=fiwQndD3ALVUzcpVxNj3fiGqZ3r5IrGgRyng4bTmkr63mCgNE8Ryvehss0ZkBEl2hl7zzZRAo+prwqt+/wT/NzCKRSCK5LO5hR6/sWQ0SORG59s9Af7BTEd9Od8F+qqV9ofxIUg81LjlWQ1wHZIBG2qP6PPW6TVvMoFASW7C1OE=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789019; c=relaxed/simple;
	bh=gYZBW/sWS31ilT+M/E2kXGN9eI1Lhq0dGc4w9/AS2iY=;
	h=Date:From:To:Cc:Subject:Message-ID:MIME-Version:Content-Type:
	 Content-Disposition; b=ekOHCqYeJBhHTg8ln7jeDt0/NQh/AdP32MZJImKzZquN8eoXxKn74KmXa4sNRHUiwWvYpvKB46bAYpRbS0jcOEXMZcdaPCmjW4U3Sa/wD8VaVeE0MKo0jUhbcEmuJtOpzYJqQLUwLVF8vDpoyTahkCOlryAWgFrWFadieba7oWI=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=NBzlZTtH; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="NBzlZTtH"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id D7D50C4CEF8;
	Sat, 18 Oct 2025 12:03:38 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760789019;
	bh=gYZBW/sWS31ilT+M/E2kXGN9eI1Lhq0dGc4w9/AS2iY=;
	h=Date:From:To:Cc:Subject:From;
	b=NBzlZTtHgufiqmMRKOjNF3nci0n7fHcV6NwpfkopUpgS5lJcz1uQqsflYePLC2pT8
	 9KmAOliQbaqdsO63IFHncCDH8AGxacZTvNWMfKGKTFAviYwwQEivWkB+fETMOZjuyD
	 WbVGr38uAQ7AIywYGsUUZYc6ZNAB92ndT6Otzg4Z20f+SngJXdgg0ah63GUpHd/Hzx
	 8SNeJW6SYhsC5Fjkr6FE2vTDbp1Mke3HzQb74r0QV7Dao9Jy9ysPZUVfaQvLyxkLnY
	 h2xKVLDbW4EnNtpdklOs83rN8CoaV2muNgf50wTTteWdZ/OD1wRjWvxUHt4gUEgLW4
	 PLAYQbCyvAmpA==
Date: Sat, 18 Oct 2025 15:03:35 +0300
From: Jarkko Sakkinen <jarkko@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Peter Huewe <peterhuewe@gmx.de>, Jason Gunthorpe <jgg@ziepe.ca>,
	David Howells <dhowells@redhat.com>, keyrings@vger.kernel.org,
	linux-integrity@vger.kernel.org, linux-kernel@vger.kernel.org,
	Stuart Yoder <stuart.yoder@arm.com>
Subject: [GIT PULL] TPM DEVICE DRIVER: tpmdd-next-v6.18-rc2
Message-ID: <aPOB9lMvnrXLf4ZD@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline

The following changes since commit f406055cb18c6e299c4a783fc1effeb16be41803:

  Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux (2025-10-17 13:04:21 -1000)

are available in the Git repository at:

  git://git.kernel.org/pub/scm/linux/kernel/git/jarkko/linux-tpmdd.git tags/tpmdd-next-v6.18-rc2

for you to fetch changes up to dbfdaeb381a49a7bc753d18e2876bc56a15e01cc:

  tpm_crb: Add idle support for the Arm FF-A start method (2025-10-18 14:33:22 +0300)

----------------------------------------------------------------
Hi,

If possible, could you still pick this change for v6.18 [1]? The change in
question  corrects the state transitions for ARM FF-A to match the spec and
how tpm_crb behaves on other platforms.

[1] https://lore.kernel.org/linux-integrity/aPN59bwcUrieMACf@kernel.org/

BR, Jarkko

----------------------------------------------------------------
Stuart Yoder (1):
      tpm_crb: Add idle support for the Arm FF-A start method

 drivers/char/tpm/tpm_crb.c | 29 ++++++++++++++++++++---------
 1 file changed, 20 insertions(+), 9 deletions(-)

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859166.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E66981EE033;
	Sat, 18 Oct 2025 12:06:40 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789201; cv=none; b=SzpppgMV76pZDTMov5di0tZIITres5n1VdOUNld+shuiYpqSlqB9DRnyTvCx+0+Ss3F/F42Kz4/MmgucSZ2dvUgJAvUPrs6xM3EKrVkMaTOJALIwmlOsBt8TPNJ6GplO5kQkLms/OCO/4WL2bqesn9jzBPW5CiAc+iSTFvbKMaU=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789201; c=relaxed/simple;
	bh=MU8Do5ebwRc7sGjXYEfAMbTRJAmvXnfsw8vvxe+7bI8=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=px/vjLYPrJlNLltoHzEuRHL3wDVP+WHietBEklWZvFwhpeVjgLWylUxOh004bqwvojEQtwi6ie8nWQQkRtlqbpyY9OGNUvfMVQ4HYWaUmTNXYGqxE0UJNljslyVjSSgZgot9cqsV8KdCDut3IGgoh/GE/LVsCmVjGH62ot/smSE=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=E8bFEcfm; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="E8bFEcfm"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 11282C4CEFE;
	Sat, 18 Oct 2025 12:06:39 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760789200;
	bh=MU8Do5ebwRc7sGjXYEfAMbTRJAmvXnfsw8vvxe+7bI8=;
	h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
	b=E8bFEcfmDdhVSBjYEaQ4jl3ALMi97RgWN+BNQnqO5cmjilFsZWalAslV2iO0+V2Th
	 +WtYgW1UYiwVbtYPFFC5LFVfcmFOdP//FWbRj2y+W6cn5LNyK1OR59vvyLVD6hiAFP
	 eIOysACLOflXSae+7fpWB/YHYFfYplAvpir2wJRvwdnU1cQnv+Qnm7uIH0WdPtbKmA
	 autVx5VNSvXO5loG6enbhkRb0vra29OBJZis0rY8qKeeDNieSBo2CJLuuABzAys2Pm
	 k8uZKQz460KuOxCnvcFiv068YdDYdUBHINKChLNnet4aUtTZ4h1oWxmyj8db0WkrGm
	 YESE6VEV42xRg==
Date: Sat, 18 Oct 2025 15:06:36 +0300
From: Jarkko Sakkinen <jarkko@kernel.org>
To: Linus Torvalds <torvalds@linux-foundation.org>
Cc: Peter Huewe <peterhuewe@gmx.de>, Jason Gunthorpe <jgg@ziepe.ca>,
	David Howells <dhowells@redhat.com>, keyrings@vger.kernel.org,
	linux-integrity@vger.kernel.org, linux-kernel@vger.kernel.org,
	Stuart Yoder <stuart.yoder@arm.com>
Subject: Re: [GIT PULL] TPM DEVICE DRIVER: tpmdd-next-v6.18-rc2
Message-ID: <aPOCzO_kDRojN4wi@kernel.org>
References: <aPOB9lMvnrXLf4ZD@kernel.org>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <aPOB9lMvnrXLf4ZD@kernel.org>

On Sat, Oct 18, 2025 at 03:03:39PM +0300, Jarkko Sakkinen wrote:
> The following changes since commit f406055cb18c6e299c4a783fc1effeb16be41803:
> 
>   Merge tag 'arm64-fixes' of git://git.kernel.org/pub/scm/linux/kernel/git/arm64/linux (2025-10-17 13:04:21 -1000)
> 
> are available in the Git repository at:
> 
>   git://git.kernel.org/pub/scm/linux/kernel/git/jarkko/linux-tpmdd.git tags/tpmdd-next-v6.18-rc2
> 
> for you to fetch changes up to dbfdaeb381a49a7bc753d18e2876bc56a15e01cc:
> 
>   tpm_crb: Add idle support for the Arm FF-A start method (2025-10-18 14:33:22 +0300)
> 
> ----------------------------------------------------------------
> Hi,
> 
> If possible, could you still pick this change for v6.18 [1]? The change in
> question  corrects the state transitions for ARM FF-A to match the spec and
> how tpm_crb behaves on other platforms.
> 
> [1] https://lore.kernel.org/linux-integrity/aPN59bwcUrieMACf@kernel.org/
> 
> BR, Jarkko
> 
> ----------------------------------------------------------------
> Stuart Yoder (1):
>       tpm_crb: Add idle support for the Arm FF-A start method
> 
>  drivers/char/tpm/tpm_crb.c | 29 ++++++++++++++++++++---------
>  1 file changed, 20 insertions(+), 9 deletions(-)

I don't have the specific hardware to test this but I did a quick
compilation test:

make CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 tinyconfig && ./scripts/config --file .config -e CONFIG_KEYS -e CONFIG_TCG_TPM -e CONFIG_64BIT -e CONFIG_TRUSTED_KEYS -e CONFIG_TTY -e CONFIG_PROCFS -e CONFIG_SYSFS -e CONFIG_TCG_VTPM_PROXY -e CONFIG_EFI -e CONFIG_ACPI -e CONFIG_ARM_FFA_TRANSPORT -e CONFIG_TCG_CRB && yes '' | make CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 oldconfig && make CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 -j$(nproc)

And in addition with similar features x86 compilation test and run
my smoke tests with swtpm emulating tpm_crb (kselftest, keyring,
trusted keys type of stuff automated).

Those should localize any possible corrateral damage to only FFA,
if any (and not very likely).

BR, Jarkko

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859167.eml"

Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.7])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 880382AF1B;
	Sat, 18 Oct 2025 12:06:38 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.7
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789201; cv=none; b=h/umvftV1ewuJVbcJ5xj4L5n1EldSbzNdCnrwHvVSRCr1Zpj/iYykN/KVLktkofWGnRn7Sbm5pW03lcMGpuvIC3Z2FmX1t/5r47fkavpJYFocxM+cgU3YkxFc1yzheSOt3kKVHjTB9BWifnOnBq0A/k/xKttht5cUgdtMzd7MR0=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789201; c=relaxed/simple;
	bh=amcyDQ0ZSqfKRHQvB06Ill1m9TP4roTiAJ8m7kuDqWI=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=MewneMWHxwBBrjw18P8drYVpeQCB+7doqMCfzxzu5VPuqzAvbkNGjmqJ1JdGqMQpJGm28//hKcDg+K2NKtngKa8SFe8R9Ws9S9gHgZ+yNNmzf9ZNMDpvUGRQi1C+Fhd37EtiA655KhHtmOXpYm4vQQXcbQdvQFH9SGOhdATo9i8=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=edXbh1RW; arc=none smtp.client-ip=192.198.163.7
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="edXbh1RW"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1760789199; x=1792325199;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=amcyDQ0ZSqfKRHQvB06Ill1m9TP4roTiAJ8m7kuDqWI=;
  b=edXbh1RWHKpAZQbyP1UajbtdybMeDPXOdrQsT4B9GV1D7JLPmhIC8zjC
   AvgHTwV/QJ5W2deXoe9fpoh1kJ7SW4T75/FoETIzbaj35HcmTUM556bse
   VI7VPL2gwXFiCq5jFGSqR8V/ziSwnHpyzIUrmAFa6guUitCewEmWOFY0o
   4TREYG/5tsayony1nj4Oid4HUXN5DP8ipPcBb8UvJObcUk2b6IjlEi0fQ
   48fOCraqu+LSSty0CHsAuj+Zy3iSbEnGeYBExNhHe2Ba/jb7uOhrslux3
   iFVpWkBy2zmmIJAcdvts/XVGf8rO545Owxp0VrV7OGfWUO6kTuaoH5I1F
   w==;
X-CSE-ConnectionGUID: 5CcoLTWZS2+9Uo2Ej/me7Q==
X-CSE-MsgGUID: sVGmGAogTdqS4aWjfxP82w==
X-IronPort-AV: E=McAfee;i="6800,10657,11585"; a="88457169"
X-IronPort-AV: E=Sophos;i="6.19,238,1754982000"; 
   d="scan'208";a="88457169"
Received: from orviesa008.jf.intel.com ([10.64.159.148])
  by fmvoesa101.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 18 Oct 2025 05:06:37 -0700
X-CSE-ConnectionGUID: nfs33RDKS5m+TSeTk1j45w==
X-CSE-MsgGUID: 2VrXg+YDTn6HK9yWeDUEIw==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.19,238,1754982000"; 
   d="scan'208";a="182957412"
Received: from lkp-server02.sh.intel.com (HELO 66d7546c76b2) ([10.239.97.151])
  by orviesa008.jf.intel.com with ESMTP; 18 Oct 2025 05:06:35 -0700
Received: from kbuild by 66d7546c76b2 with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1vA5hT-0008Gf-1J;
	Sat, 18 Oct 2025 12:06:25 +0000
Date: Sat, 18 Oct 2025 20:05:22 +0800
From: kernel test robot <lkp@intel.com>
To: Gary Yang <gary.yang@cixtech.com>, linus.walleij@linaro.org,
	robh@kernel.org, krzk+dt@kernel.org, conor+dt@kernel.org
Cc: oe-kbuild-all@lists.linux.dev, linux-gpio@vger.kernel.org,
	devicetree@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-arm-kernel@lists.infradead.org,
	cix-kernel-upstream@cixtech.com, Gary Yang <gary.yang@cixtech.com>
Subject: Re: [PATCH v4 2/3] pinctrl: cix: Add pin-controller support for sky1
Message-ID: <202510181916.q32y7Jel-lkp@intel.com>
References: <20251017074646.3344924-3-gary.yang@cixtech.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20251017074646.3344924-3-gary.yang@cixtech.com>

Hi Gary,

kernel test robot noticed the following build warnings:

[auto build test WARNING on linusw-pinctrl/devel]
[also build test WARNING on linusw-pinctrl/for-next robh/for-next linus/master v6.18-rc1 next-20251017]
[If your patch is applied to the wrong git tree, kindly drop us a note.
And when submitting patch, we suggest to use '--base' as documented in
https://git-scm.com/docs/git-format-patch#_base_tree_information]

url:    https://github.com/intel-lab-lkp/linux/commits/Gary-Yang/dt-bindings-pinctrl-Add-cix-sky1-pinctrl/20251017-155001
base:   https://git.kernel.org/pub/scm/linux/kernel/git/linusw/linux-pinctrl.git devel
patch link:    https://lore.kernel.org/r/20251017074646.3344924-3-gary.yang%40cixtech.com
patch subject: [PATCH v4 2/3] pinctrl: cix: Add pin-controller support for sky1
config: nios2-randconfig-r121-20251018 (https://download.01.org/0day-ci/archive/20251018/202510181916.q32y7Jel-lkp@intel.com/config)
compiler: nios2-linux-gcc (GCC) 9.5.0
reproduce (this is a W=1 build): (https://download.01.org/0day-ci/archive/20251018/202510181916.q32y7Jel-lkp@intel.com/reproduce)

If you fix the issue in a separate patch/commit (i.e. not just a new version of
the same patch/commit), kindly add following tags
| Reported-by: kernel test robot <lkp@intel.com>
| Closes: https://lore.kernel.org/oe-kbuild-all/202510181916.q32y7Jel-lkp@intel.com/

sparse warnings: (new ones prefixed by >>)
>> drivers/pinctrl/cix/pinctrl-sky1-base.c:289:17: sparse: sparse: incorrect type in assignment (different address spaces) @@     expected unsigned int [usertype] *pin_reg @@     got void [noderef] __iomem * @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:289:17: sparse:     expected unsigned int [usertype] *pin_reg
   drivers/pinctrl/cix/pinctrl-sky1-base.c:289:17: sparse:     got void [noderef] __iomem *
>> drivers/pinctrl/cix/pinctrl-sky1-base.c:290:25: sparse: sparse: incorrect type in argument 1 (different address spaces) @@     expected void const volatile [noderef] __iomem *addr @@     got unsigned int [usertype] *pin_reg @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:290:25: sparse:     expected void const volatile [noderef] __iomem *addr
   drivers/pinctrl/cix/pinctrl-sky1-base.c:290:25: sparse:     got unsigned int [usertype] *pin_reg
>> drivers/pinctrl/cix/pinctrl-sky1-base.c:293:25: sparse: sparse: incorrect type in argument 2 (different address spaces) @@     expected void volatile [noderef] __iomem *addr @@     got unsigned int [usertype] *pin_reg @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:293:25: sparse:     expected void volatile [noderef] __iomem *addr
   drivers/pinctrl/cix/pinctrl-sky1-base.c:293:25: sparse:     got unsigned int [usertype] *pin_reg
   drivers/pinctrl/cix/pinctrl-sky1-base.c:358:17: sparse: sparse: incorrect type in assignment (different address spaces) @@     expected unsigned int [usertype] *pin_reg @@     got void [noderef] __iomem * @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:358:17: sparse:     expected unsigned int [usertype] *pin_reg
   drivers/pinctrl/cix/pinctrl-sky1-base.c:358:17: sparse:     got void [noderef] __iomem *
   drivers/pinctrl/cix/pinctrl-sky1-base.c:359:25: sparse: sparse: incorrect type in argument 1 (different address spaces) @@     expected void const volatile [noderef] __iomem *addr @@     got unsigned int [usertype] *pin_reg @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:359:25: sparse:     expected void const volatile [noderef] __iomem *addr
   drivers/pinctrl/cix/pinctrl-sky1-base.c:359:25: sparse:     got unsigned int [usertype] *pin_reg
   drivers/pinctrl/cix/pinctrl-sky1-base.c:372:25: sparse: sparse: incorrect type in argument 2 (different address spaces) @@     expected void volatile [noderef] __iomem *addr @@     got unsigned int [usertype] *pin_reg @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:372:25: sparse:     expected void volatile [noderef] __iomem *addr
   drivers/pinctrl/cix/pinctrl-sky1-base.c:372:25: sparse:     got unsigned int [usertype] *pin_reg
   drivers/pinctrl/cix/pinctrl-sky1-base.c:398:17: sparse: sparse: incorrect type in assignment (different address spaces) @@     expected unsigned int [usertype] *pin_reg @@     got void [noderef] __iomem * @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:398:17: sparse:     expected unsigned int [usertype] *pin_reg
   drivers/pinctrl/cix/pinctrl-sky1-base.c:398:17: sparse:     got void [noderef] __iomem *
   drivers/pinctrl/cix/pinctrl-sky1-base.c:399:25: sparse: sparse: incorrect type in argument 1 (different address spaces) @@     expected void const volatile [noderef] __iomem *addr @@     got unsigned int [usertype] *pin_reg @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:399:25: sparse:     expected void const volatile [noderef] __iomem *addr
   drivers/pinctrl/cix/pinctrl-sky1-base.c:399:25: sparse:     got unsigned int [usertype] *pin_reg
   drivers/pinctrl/cix/pinctrl-sky1-base.c:403:25: sparse: sparse: incorrect type in argument 2 (different address spaces) @@     expected void volatile [noderef] __iomem *addr @@     got unsigned int [usertype] *pin_reg @@
   drivers/pinctrl/cix/pinctrl-sky1-base.c:403:25: sparse:     expected void volatile [noderef] __iomem *addr
   drivers/pinctrl/cix/pinctrl-sky1-base.c:403:25: sparse:     got unsigned int [usertype] *pin_reg

vim +289 drivers/pinctrl/cix/pinctrl-sky1-base.c

   282	
   283	static int sky1_pmx_set_one_pin(struct sky1_pinctrl *spctl,
   284					    unsigned int pin, unsigned char muxval)
   285	{
   286		u32 reg_val;
   287		u32 *pin_reg;
   288	
 > 289		pin_reg = spctl->base + pin * SKY1_PIN_SIZE;
 > 290		reg_val = readl(pin_reg);
   291		reg_val &= ~SKY1_MUX_MASK;
   292		reg_val |= muxval << SKY1_MUX_SHIFT;
 > 293		writel(reg_val, pin_reg);
   294	
   295		dev_dbg(spctl->dev, "write: offset 0x%x val 0x%x\n",
   296			pin * SKY1_PIN_SIZE, reg_val);
   297		return 0;
   298	}
   299	

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests/wiki

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859168.eml"

Received: from mail-wr1-f49.google.com (mail-wr1-f49.google.com [209.85.221.49])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 861AE35966
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:11:59 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.49
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789521; cv=none; b=uRB53p8oBWTojVhkoQaLHAGhYMinvgZnGZira4VgjVjoIJf6ddNcmp5k8dMHu547xfMf1n4HrxNB75qOEhQ3A+YYUFGReEqEtYl8mWqtXPq8Evru+apNVITxktZ5GJNLlw45SKh92yQdQ4k8JKsPG5lhcRZ9gAM+XJiG46xWZ38=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789521; c=relaxed/simple;
	bh=iX5k1kzpJ7NawYcuWUVw4PMQcuRvKYrimXmpyPy5AOI=;
	h=From:To:Cc:Subject:Date:Message-Id:MIME-Version:Content-Type; b=lxnGirCyxYyCsnrnPvEsBkVHYRn639H/eVV3ZwmSp/MxIEd0OqeEJZoeQikSE1WGsEo9RAIWq5TojGgqXtzdMqh7WYS59ajvM4jE+2aMMSBfBl+oAmJD83q4VW5DIb03+rjjv+AFmU6m16wJa744GBJ+K9EskxE+F/hGqmJmviQ=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=Tv7nr2dN; arc=none smtp.client-ip=209.85.221.49
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="Tv7nr2dN"
Received: by mail-wr1-f49.google.com with SMTP id ffacd0b85a97d-426fe75150dso374390f8f.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:11:59 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789518; x=1761394318; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:message-id:date:subject:cc
         :to:from:from:to:cc:subject:date:message-id:reply-to;
        bh=A+FesR+t/+gVKq9SP5yI2he5hzOGJgaRkIBBVmbdEEs=;
        b=Tv7nr2dNvCK2LWHHCqZI6MjUEhRM9100MEUMOGBVtBTkFFTzTEYfGbQ7Fu/2R1oBch
         RUcu3C2KKMMWRhRTHGH4KvtBJQLp0W1TlOR3IkV8YXBDDpIwWgj2LUjdiyuqtaQh7v03
         K8Q8lLpYI2/PCmEjYoVptCb7YwyWgV9kaZGy+dv+oRUXnQKpgqQtUo0fYnQkqk3Pwzii
         q5Y7WigqboS24yiI4V0iVHZ97B5q8yYdgEDABpBznaSG0XNcIr7CJIm6iXs00BZUL0MO
         JYJCVJe15X7/xBPxQsUq5+iM2hxnBdQAaTuXOxoM9LbF01KLQC5yGPY0Sy28zs5iD+iH
         c1qA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789518; x=1761394318;
        h=content-transfer-encoding:mime-version:message-id:date:subject:cc
         :to:from:x-gm-message-state:from:to:cc:subject:date:message-id
         :reply-to;
        bh=A+FesR+t/+gVKq9SP5yI2he5hzOGJgaRkIBBVmbdEEs=;
        b=RfY4ifcefms2BjFr+zTbsHbexsFZQlsMb6aoEqNY4SQoAI9fRfNjk7s7dzknzzZ3DM
         +S4Sp8EV+LXqauLz+JZQO9yR54/P3+gRSMC/vmw7vGJQFQKMJeg3Mo5OoCzJbLUQB+3K
         poQr3ihIPHO/oxiB3EcVlh2P5537Q/DQi9FvdLd9lz4qu5lc0uV2iFRjB/AgJDA+fU98
         IwJl2AylMG4Qd1kKfdtGXxfXMY8lR6f385+tEXmcSf4Q3TkRzHL3JGViui5d1nvAcycI
         O2NGdjvEwmTrLfn+TybKdmxfoECxzqnHHMvgvawRF/Hvg8UrjChIpRhWbKErGhD/RR7n
         pn5g==
X-Forwarded-Encrypted: i=1; AJvYcCV2ZXKOxKOWs2dltZE/dyavl/rqwK5dGCACtlGWdm65o8Nqi7muJ8dqdWXOMGTzCNBelYTw2TizeCgfjps=@vger.kernel.org
X-Gm-Message-State: AOJu0YwhyrgnoMjKoxoeHG6UwYK7Hs+9gTgV9VSP6ilHKtlTcPELyBif
	h8ujv9+10AVR0JwJCcuemmMbSD2VKKSkGo/WZAGKtY6353JzfZVVDtJq
X-Gm-Gg: ASbGnctS1QsHK5zSPNBEPoEgX8rp3E1Sx/52dzyQnAMS9b5ePLZn2NAOsJp2hHwl64u
	hqd6oFF/KquqqmYqXF/xRDt2h8wsGU4F1/0dL5WsAFGkJ8DWnZxqR9hWs7NW0lIWsVX3FzjxdlK
	XlwcpF6QKUPHLlOgvqOet7kqBhwgNzgXpQE1Y97WxEDQiKz4ZywSjm7bvaSsug9ZYwP+j14hJr+
	ZLcWzGrj0AjJdpLKf/KLl36iUUn0ZdyNW0PJlG9Z5sTNhba7bEat2jeIx3/lT0Fptu7CefzBDsq
	eV+rConu5gc5SbpvPGjU3zkrTBzqsTAn6wsXwCtiURGpSXX0M1bejTUn87rkgkrleEmUiPsb4w7
	MLiDs4dC+vjRDccJTeCZGyb3K+xKQqHswoMPV31DGgy443U1GpJarllOcS8CL3eWQCZ6oXm4TnT
	RKZrdqf8h3rNSXXGV3MwmG0MlJLn2+zRETQMH4HHL4
X-Google-Smtp-Source: AGHT+IGDcpKeT1/dbiy1kgFZoG/DA8dEZdv9BSd0hqfvTtqQbT4bopMbvBWxJC9pKyBygBUiuVTyFg==
X-Received: by 2002:adf:8bdb:0:b0:427:52a:7ca4 with SMTP id ffacd0b85a97d-427052a7cafmr1940897f8f.4.1760789517576;
        Sat, 18 Oct 2025 05:11:57 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.11.56
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:11:57 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v7 00/11] Add Enclustra Arria10 and Cyclone5 SoMs
Date: Sat, 18 Oct 2025 12:11:44 +0000
Message-Id: <20251018121155.7743-1-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This series was already presented in November 2024.
https://lkml.org/lkml/2024/11/16/198

Due to the ongoing complex situation with Intel's maintainership,
the series likely did not progress further at the time. In early
2025, Tien Fong Chee (in CC) informed me that Altera is expected
to resume maintainership in late 2025. I was referred to Matthew
Gerlach (also CC'd), who, as I understand, is taking over at least
part of the Intel/Altera-related responsibilities.

At this yearâs OSS in Amsterdam, I had an encouraging discussion
with Arnd Bergmann (CCâd), which motivated me to continue pursuing
this patch series.

Hence, a slightly reworded update goes now again to the mailing lists
and will drive the binding check bot crazy. While not all Altera
bindings may be fully resolved yet, this series should not introduce
any new issues. 
Iâm submitting it based on prior acknowledgments and will wait a few
weeks to see if a maintainer responds. If it remains orphaned, Iâll
follow up with you, Arnd, as previously mentioned - this is just a
heads-up for now.

I hope this approach is acceptable. Please let me know otherwise.
Thank you for all the support in this so far.

Add device-tree support for the following SoMs:
- Mercury SA1 (cyclone5)
- Mercury+ SA2 (cyclone5)
- Mercury+ AA1 (arria10)

Further add device-tree support for the corresponding carrier boards:
- Mercury+ PE1
- Mercury+ PE3
- Mercury+ ST1

Finally, provide generic support for combinations of the above with
one of the boot-modes
- SD
- eMMC
- QSPI

All of the above elements can be freely combined, with the combinations
specified in the provided .dts files. This renders the existing .dts file
unnecessary. Any additional minor fixes to the dtbs_checks are applied
separately.

This approach is also necessary for integrating with the corresponding
bootloader using dts/upstream, which is one of the reasons for the .dtsi
split.

Note: I used AI tools to help refine the wording of the commit messages.

Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
---
v6 -> v7:
- dt-bindings: alphabetic order for aa1 variants fixed

v5 -> v6:
- update to recent kernel version
- add Arnd Bergman in CC (refered to OSS / Amsterdam)
- add Matthew Gerlach in CC
- add chee tien fong in CC
- change phy-mode "rgmii" to "rgmii-id", due to binding checks, similar
  boards in that context and the allowing internal delay (id) or strict
  no internal delay, seems to make no difference here
- removal of compatibility "spansion,s25fl512s" due to deprecation of
  older vendor properties for "jedec,spi-nor"
- change commit header wording "combinations" to "variants"

v4 -> v5:
- separate generic socfpga dt fixes from this patch set. The focus of this
  patch set is the dts/dtsi files and related bindings, not additional
  intel/socfpga refactoring

v3 -> v4:
- add separate patch to match "snps,dwmac" compatible in corresponding
  driver, required by binding check
- replace non-standard node names in .dtsi files by node names recommended
  by the device tree standard v0.4

v2 -> v3:
- dropped the patch to add the socfpga clock bindings:
  Documentation/devicetree/bindings/clock/altr,socfpga-a10.yaml
  reason: refactoring the "altr,socfpga-" TXT files to .yaml files is a
  different story involving several other files, thus can be part of a
  future patch series, not related to the current upstreaming the
  Enclustra DTS support, so dropped
- adjust comments on boot mode selection
- adjust titles to several bindings patches

v1 -> v2:
- split bindings and DT adjustments/additions
- add several fixes to the socfpga.dtsi and socfpga_arria10.dtsi where
  bindings did not match
- extend existing bindings by properties and nods from arria10 setup
- implement the clock binding altr,socfpga-a10.yaml based on existing
  text file, rudimentary datasheet study and requirements of the
  particular DT setup
---
Lothar Rubusch (11):
  ARM: dts: socfpga: add Enclustra boot-mode dtsi
  ARM: dts: socfpga: add Enclustra base-board dtsi
  ARM: dts: socfpga: add Enclustra Mercury SA1
  dt-bindings: altera: add Enclustra Mercury SA1
  ARM: dts: socfpga: add Enclustra Mercury+ SA2
  dt-bindings: altera: add binding for Mercury+ SA2
  ARM: dts: socfpga: add Mercury AA1 variants
  dt-bindings: altera: add Mercury AA1 variants
  ARM: dts: socfpga: removal of generic PE1 dts
  dt-bindings: altera: removal of generic PE1 dts
  ARM: dts: socfpga: add Enclustra SoM dts files

 .../devicetree/bindings/arm/altera.yaml       |  24 ++-
 arch/arm/boot/dts/intel/socfpga/Makefile      |  25 ++-
 .../socfpga/socfpga_arria10_mercury_aa1.dtsi  | 143 ++++++++++++++---
 .../socfpga_arria10_mercury_aa1_pe1_emmc.dts  |  16 ++
 .../socfpga_arria10_mercury_aa1_pe1_qspi.dts  |  16 ++
 .../socfpga_arria10_mercury_aa1_pe1_sdmmc.dts |  16 ++
 .../socfpga_arria10_mercury_aa1_pe3_emmc.dts  |  16 ++
 .../socfpga_arria10_mercury_aa1_pe3_qspi.dts  |  16 ++
 .../socfpga_arria10_mercury_aa1_pe3_sdmmc.dts |  16 ++
 .../socfpga_arria10_mercury_aa1_st1_emmc.dts  |  16 ++
 .../socfpga_arria10_mercury_aa1_st1_qspi.dts  |  16 ++
 .../socfpga_arria10_mercury_aa1_st1_sdmmc.dts |  16 ++
 .../socfpga/socfpga_arria10_mercury_pe1.dts   |  55 -------
 .../socfpga/socfpga_cyclone5_mercury_sa1.dtsi | 143 +++++++++++++++++
 .../socfpga_cyclone5_mercury_sa1_pe1_emmc.dts |  16 ++
 .../socfpga_cyclone5_mercury_sa1_pe1_qspi.dts |  16 ++
 ...socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dts |  16 ++
 .../socfpga_cyclone5_mercury_sa1_pe3_emmc.dts |  16 ++
 .../socfpga_cyclone5_mercury_sa1_pe3_qspi.dts |  16 ++
 ...socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dts |  16 ++
 .../socfpga_cyclone5_mercury_sa1_st1_emmc.dts |  16 ++
 .../socfpga_cyclone5_mercury_sa1_st1_qspi.dts |  16 ++
 ...socfpga_cyclone5_mercury_sa1_st1_sdmmc.dts |  16 ++
 .../socfpga/socfpga_cyclone5_mercury_sa2.dtsi | 146 ++++++++++++++++++
 .../socfpga_cyclone5_mercury_sa2_pe1_qspi.dts |  16 ++
 ...socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dts |  16 ++
 .../socfpga_cyclone5_mercury_sa2_pe3_qspi.dts |  16 ++
 ...socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dts |  16 ++
 .../socfpga_cyclone5_mercury_sa2_st1_qspi.dts |  16 ++
 ...socfpga_cyclone5_mercury_sa2_st1_sdmmc.dts |  16 ++
 ...cfpga_enclustra_mercury_bootmode_emmc.dtsi |  12 ++
 ...cfpga_enclustra_mercury_bootmode_qspi.dtsi |   8 +
 ...fpga_enclustra_mercury_bootmode_sdmmc.dtsi |   8 +
 .../socfpga_enclustra_mercury_pe1.dtsi        |  33 ++++
 .../socfpga_enclustra_mercury_pe3.dtsi        |  55 +++++++
 .../socfpga_enclustra_mercury_st1.dtsi        |  15 ++
 36 files changed, 972 insertions(+), 79 deletions(-)
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_sdmmc.dts
 delete mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_pe1.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_emmc.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_qspi.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_sdmmc.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe1.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe3.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_st1.dtsi


base-commit: 4b17a60d1e1c2d9d2ccbd58642f6f4ac2fa364ba
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859169.eml"

Received: from mail-wr1-f43.google.com (mail-wr1-f43.google.com [209.85.221.43])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 676C9264F99
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:01 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.43
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789523; cv=none; b=lXrXQgr/ojgggxRpB8erjMaoNRycHNpO2hDppL8En5A3c74U7hKkZ0lSrTZfS9MwPHK5Ngk9oZ4l4wbhlbXIgenoF9KYr5LG9TDyun8oaRKiG61htokMzCOcR98/c82OHkGdQ3+fe205hBp1vpnAisVOL6c5kMO2+2VzcCXw97g=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789523; c=relaxed/simple;
	bh=Zm/F6uFyMc4nnEbtPWODklxGuzdzraA3ZsA0+iIdu1I=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=eJxuEexYn/PEGyw1Fo9at6kddY0Pxdj3eEC4PMebJ7ipL2bMZAldzDcPtfPTpGUNJteZgzV1D1hdG3Rghx2KX4QlaLf7qI2xGCEyAEFP3Z4GMDqEx6hiOOl30SyaNFWulUGQSB4c+3eD4OJyrbvi00Zi7yTSaoqtAFu7KjkJlvM=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=kK/h7Wzl; arc=none smtp.client-ip=209.85.221.43
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="kK/h7Wzl"
Received: by mail-wr1-f43.google.com with SMTP id ffacd0b85a97d-426ff579fbeso321995f8f.0
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:01 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789520; x=1761394320; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=/mFohtVVslXrTyo8hMYkLuQEeqxiLiM0O92p+2v9UC8=;
        b=kK/h7WzlJjjMGW95mE2R5G4XVJ4OIde2XRrdgxdNuxl1k3E7Oa7izSQkdWe7eJhY62
         w0OgJ3YuRrZz0Bj2OCa05QT1TVSgT29DSZCId4AETCLQ0EROO8X8UyjkEgbTh1X1BOls
         gH3ChmKvHOnjdpuWS0Ch8c9vTqogOOXXZQJWDuWXU8cPWWcIL8Uq72EZDxnffKqsza5j
         2YokSavg+5PBeSpglDQ/Xf6jvsPfxck1LQ/x15cfXiXHfUjqJQ1qGDUai5wWhjA7m3O1
         u+KtNzV9u5FWQJO4svBqaGcI0qi83tiKlaz/MZ6ul5Hpjzn6Z/YcBpI1P4XcSr0yG2Ea
         K1VA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789520; x=1761394320;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=/mFohtVVslXrTyo8hMYkLuQEeqxiLiM0O92p+2v9UC8=;
        b=HxFx7X7P6P+PUlR7mDwh1iYDyr8d2sbJzdSyqK75B0/dtmewsLYxsjImAvJG9BXNyT
         +5Fj9Kl4SdWMztxT2SfG0WmIytd+DkwivBScsCvD/fgSpUDCGUMiJX9vodIwV4ZMirYL
         og2Cbg9wjrdw+nJ5QtcYH4HoVc3wf08FZ4yBGJG9RY5qsUyWjERdt65q4xmqldH+HglB
         VyIXaFFaadNc3oz4E+LYWNtWa6YdxAI1u19rSsOhqQWXzapKPox8NqLbuyYdvC2fwQKl
         SAbGrnnRjGwZ8AA+KtdYhg07VV2fCFqSyE5ELn0abViqnyWLVAd4je9aDjdyBjZLEicS
         1+VA==
X-Forwarded-Encrypted: i=1; AJvYcCU/T0sTDC7GumAMV5wReQiTAyf8tzA/cxtwAsLVAu2gt0HfkyNhI7DkVqW1DS18qokoVzqco2nlZu5bAAE=@vger.kernel.org
X-Gm-Message-State: AOJu0YygIBEWd4skbU6/bEwpue57EvXVx1RssRQwMwUqixjqYrmcSjzD
	QE6NS+LUBeA1t5qvXgZMKJ0tgMF0X1HmqIzTGBmHkXyZYBkh6u1ZhZ27
X-Gm-Gg: ASbGncu2z6u5z+pChg2w5jtL/VV2UAWhMPHBu8kXiCVfDAJN3oBu4V1y5KUo2cz/JLq
	KulVqj27sRi5A6/R8iotQdao+zc7w3T2npb3BuIh6+GaIwFiTxQcyxfmBqciA0R6tgyB0ufOFJd
	AGrN+LfRnMu4LO6retippmxZ7YBj8Viz0sZZk5vpqLa5qRyc3lk6IcWE3s9qsDS3i60f/X6yKxT
	w19heL8hxed17MJZInbOrnmgoD6QQyXvDY1HLYu3s7OIXJU5BPH3/TxFpY3twRVdRE0g31lYP2B
	j02GNaQvUsqaKa0CF8PESb1nJPFxzLK9luQYH13Gwza9c459207a6Xm2+yRQzeQTaJDOh7DS+TS
	/vOgRc8PC26k0mAG7XP9wIpV4d+610TXFgRe7mCWtUtyC+eTOYgNg0S9FoGLVgw+GcnxJNxxWEh
	6cLJ9Xwf6wLbQJOhum4CvCqxyj3vRxQKqM2lgFQWO44wTFY7B/4f0=
X-Google-Smtp-Source: AGHT+IH6Mz87+NrxpXtmwU/KYU3mRF4neYs964czY7WUGPjpjN+OX7ReDKdoBL663BBjzeMtGF0DiQ==
X-Received: by 2002:a05:6000:2383:b0:425:6794:f19b with SMTP id ffacd0b85a97d-42704d14627mr2731734f8f.2.1760789519475;
        Sat, 18 Oct 2025 05:11:59 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.11.57
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:11:59 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v7 01/11] ARM: dts: socfpga: add Enclustra boot-mode dtsi
Date: Sat, 18 Oct 2025 12:11:45 +0000
Message-Id: <20251018121155.7743-2-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Add generic boot-mode support to Enclustra Arria10 and Cyclone5 boards.
Some Enclustra carrier boards need hardware adjustments specific to the
selected boot-mode.

Enclustra's Arria10 SoMs allow for booting from different media. By
muxing certain IO pins, the media can be selected. This muxing can be
done by gpios at runtime e.g. when flashing QSPI from off the
bootloader. But also to have statically certain boot media available,
certain adjustments to the DT are needed:
- SD: QSPI must be disabled
- eMMC: QSPI must be disabled, bus width can be doubled to 8 byte
- QSPI: any mmc is disabled, QSPI then defaults to be enabled

The boot media must be accessible to the bootloader, e.g. to load a
bitstream file, but also to the system to mount the rootfs and to use
the specific performance.

Signed-off-by: Andreas Buerkler <andreas.buerkler@enclustra.com>
Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
---
 .../socfpga_enclustra_mercury_bootmode_emmc.dtsi     | 12 ++++++++++++
 .../socfpga_enclustra_mercury_bootmode_qspi.dtsi     |  8 ++++++++
 .../socfpga_enclustra_mercury_bootmode_sdmmc.dtsi    |  8 ++++++++
 3 files changed, 28 insertions(+)
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_emmc.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_qspi.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_sdmmc.dtsi

diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_emmc.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_emmc.dtsi
new file mode 100644
index 000000000000..d79cb64da0de
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_emmc.dtsi
@@ -0,0 +1,12 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+&qspi {
+	status = "disabled";
+};
+
+&mmc {
+	bus-width = <8>;
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_qspi.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_qspi.dtsi
new file mode 100644
index 000000000000..5ba21dd8f5ba
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_qspi.dtsi
@@ -0,0 +1,8 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+&mmc {
+	status = "disabled";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_sdmmc.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_sdmmc.dtsi
new file mode 100644
index 000000000000..2b102e0b6217
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_bootmode_sdmmc.dtsi
@@ -0,0 +1,8 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+&qspi {
+	status = "disabled";
+};
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859170.eml"

Received: from mail-wm1-f54.google.com (mail-wm1-f54.google.com [209.85.128.54])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 3E65129BDB1
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:03 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.54
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789525; cv=none; b=jn0zjAAjyVg92IS/6SPg20Bhw6lsNC8zB2Q+zGltLzCnAqD7HfsZdhOuhkzOBsC0iDXWL0ABLG1dQHiqIQ2IDj8c1UTj7wkvxHWC3LflKsYNNHjfx5gWh9euGWwg1L5rWpWDhL3ydvyzXBLq0JAuv7FTXnFqKd1Mbad4wXSIBzY=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789525; c=relaxed/simple;
	bh=gdXtc2fH7Fyw0MfgnqxFQ0cKYBFkYfBr+/WJv43AoYU=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=tu2Vf3UCW0qaPrMByvBxlIu1HT30pe9hz8Ln25z8y5qqXav7d9BthvfUFnHCBKaoWZXqnXqLVnNCoi17VYnUyP3O/Hfc3oISeMAK+4vk2iZnO/rB/Ke1HbjCUnpssJFO7vA1Ti0TOjK4TfgZuKc4MKNOKIa6b59mjiniAEp4YZo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=lrBhx+lj; arc=none smtp.client-ip=209.85.128.54
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="lrBhx+lj"
Received: by mail-wm1-f54.google.com with SMTP id 5b1f17b1804b1-47105eb92d8so4553145e9.0
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:03 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789521; x=1761394321; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=/aAseuQrGI9nO9oAcToUjoPa5MvV1yHsA/LNt97b5lY=;
        b=lrBhx+ljb3OKxPLpfroWCi9fXLIGgqBIFmf+tNPgZc/Zmb8U4j9GLK3oSgYIh6IVZu
         Sd3oW0JDOKZopilv3RreDVENAc2VIeG+g2eFu+7O8Nu8L/Zu4d7FNm2t6/LkkEXSY1cy
         Glyj+lDY6ln5R9AIr0HbLRM29a8vsFtdFSMy8j66ZeHPFNw0u2UBm9Ttc38qgKPYzPKt
         cUiF+VAt2oJj5QwjgcSAfXQs9ORK2apYXJDQ3IMMtAEajWS9F0Pt5HzgeZq0uIKc2uKA
         OrLTQnh4aNwBTH6UpP6U0dfNzwhm0JXT9Ptqk46sYzbYNk2J/g/bYaivhrKUo9wvLmHw
         8Y5A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789521; x=1761394321;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=/aAseuQrGI9nO9oAcToUjoPa5MvV1yHsA/LNt97b5lY=;
        b=METtp+Unn1oPC5f9N4l9S2JKIrI2W8tPEU7oY4Jxo/wg49Cx1XS8VhbZSJSVPNrKNk
         IIrttThukRbXMZemckwAXnIFl8vBI0qcq4X0cSYpSZLWCHlIZ5zxhx+l7JTQRdIxsL35
         cEPsVWSzU6PxUonUWPfEeV4kPLSFn/MNVQOLyoBlRmApXkGW6/TaZyK+u7HwRjWhPAor
         1U5d6VO7bBdyvvsOUg5zgyv8+UeyP001exALAN1DHxPcOngmq94DGvz7fdFYRtBDatUO
         mm9aFMuyArUU3DQ5vcsXPruStKIYmCT1eqOzQ2bD4s6uj0cSYwqdnyQUF+EYHjaJ4Df7
         nD0Q==
X-Forwarded-Encrypted: i=1; AJvYcCVlQVKaSSM+qbKsoQykB1O6mjEjVNFVyr4tuTJ+3FTt5TM4Xz6YCtWpvloP07ebvyhkG8QjaFcdHZd5c50=@vger.kernel.org
X-Gm-Message-State: AOJu0Yw8bgbBUmihzd247ooCFU8N3fovKXCK3Lz04sXHmTamLQVBltld
	tFNGkqHrq0UJo1YTqVX9na+JxeZ7iwtlUpzTK3YdvwYZzaafK3RTO22W
X-Gm-Gg: ASbGncsqeiE4LegRvWNKGILU5YxW3d4+muOOg1z5Wm8Mkd3s/Xwjft+OCrRG8mUJcp6
	UMu8ynNYvkFpOLAoILUEOCYbWQ/4Ik+ZlxYEYW50PYlkx13JqYzoe9P2piqbOhanXJLcgwos+7u
	1O7qje09I2OKVwAe6OZG2CRKKot6Pt/hRBCnl0bpQ4uinaTCwwG/85YyRhyCTR8CFm41LrM66fJ
	PnS2iK7be6R4QsQkVhShBY1ofUp+3IzoHHpPZDgVlHp6Hb7z5ERc4mHdwX+R8dhn/VV4hxHFnvX
	qWi789pNiTCx3MoRbJIo6ziNJOjO9nKdx2Qmz0ZI3sVqk1qsrm4uuE+zuW0do/2OPYrGVtNJHA5
	S6f7HmL7ej7CIrbzEwAWa5b7LHm/5samy0Z//qHKkTWSeRKfQy88ZhmgNydUYQ/FfIRwg20mmor
	TU/mfbXG9pl+A5Xs0MjwsSKkZlDbMHaQYX/XJCWqJh
X-Google-Smtp-Source: AGHT+IHp4aW/LC99XRnz+vzdjoRAZ1xsDA7hVOImEH+NXfsX7IjCmkqpOBGaoAmreY1mOE++mz/hEQ==
X-Received: by 2002:a5d:5f49:0:b0:3ee:1125:fb68 with SMTP id ffacd0b85a97d-42704d855ccmr2798930f8f.2.1760789521331;
        Sat, 18 Oct 2025 05:12:01 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.11.59
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:01 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v7 02/11] ARM: dts: socfpga: add Enclustra base-board dtsi
Date: Sat, 18 Oct 2025 12:11:46 +0000
Message-Id: <20251018121155.7743-3-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Add generic Enclustra base-board support for the Mercury+ PE1, the
Mercury+ PE3 and the Mercury+ ST1 board. The carrier boards can be
freely combined with the SoMs Mercury+ AA1, Mercury SA1 and
Mercury+ SA2.

Signed-off-by: Andreas Buerkler <andreas.buerkler@enclustra.com>
Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
---
 .../socfpga_enclustra_mercury_pe1.dtsi        | 33 +++++++++++
 .../socfpga_enclustra_mercury_pe3.dtsi        | 55 +++++++++++++++++++
 .../socfpga_enclustra_mercury_st1.dtsi        | 15 +++++
 3 files changed, 103 insertions(+)
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe1.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe3.dtsi
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_st1.dtsi

diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe1.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe1.dtsi
new file mode 100644
index 000000000000..abc4bfb7fccf
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe1.dtsi
@@ -0,0 +1,33 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+&i2c_encl {
+	status = "okay";
+
+	eeprom@57 {
+		status = "okay";
+		compatible = "microchip,24c128";
+		reg = <0x57>;
+		pagesize = <64>;
+		label = "user eeprom";
+		address-width = <16>;
+	};
+
+	lm96080: temperature-sensor@2f {
+		status = "okay";
+		compatible = "national,lm80";
+		reg = <0x2f>;
+	};
+
+	si5338: clock-controller@70 {
+		compatible = "silabs,si5338";
+		reg = <0x70>;
+	};
+
+};
+
+&i2c_encl_fpga {
+	status = "okay";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe3.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe3.dtsi
new file mode 100644
index 000000000000..bc57b0680878
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_pe3.dtsi
@@ -0,0 +1,55 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+&i2c_encl {
+	i2c-mux@74 {
+		status = "okay";
+		compatible = "nxp,pca9547";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <0x74>;
+
+		i2c@0 {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			reg = <0>;
+
+			eeprom@56 {
+				status = "okay";
+				compatible = "microchip,24c128";
+				reg = <0x56>;
+				pagesize = <64>;
+				label = "user eeprom";
+				address-width = <16>;
+			};
+
+			lm96080: temperature-sensor@2f {
+				status = "okay";
+				compatible = "national,lm80";
+				reg = <0x2f>;
+			};
+
+			pcal6416: gpio@20 {
+				status = "okay";
+				compatible = "nxp,pcal6416";
+				reg = <0x20>;
+				gpio-controller;
+				#gpio-cells = <2>;
+			};
+		};
+	};
+};
+
+&i2c_encl_fpga {
+	status = "okay";
+
+	i2c-mux@75 {
+		status = "okay";
+		compatible = "nxp,pca9547";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		reg = <0x75>;
+	};
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_st1.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_st1.dtsi
new file mode 100644
index 000000000000..4c00475f4303
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_enclustra_mercury_st1.dtsi
@@ -0,0 +1,15 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+&i2c_encl {
+	si5338: clock-controller@70 {
+		compatible = "silabs,si5338";
+		reg = <0x70>;
+	};
+};
+
+&i2c_encl_fpga {
+	status = "okay";
+};
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859171.eml"

Received: from mail-wr1-f51.google.com (mail-wr1-f51.google.com [209.85.221.51])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 62DC42D47F6
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.51
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789526; cv=none; b=X4MSR7mU7Bzp20oGurs9jqI9NS0E3eYbbkgMTIUhK9IXTnEvxl7m+vSIAqx75EkL94BNRH3cBD2BJeJwK9nM1G+U4YySZAQDEFVdwkgyvr3TpgqUZZt+MOV43UJCFneRqGlKF/6cmNrR+lMuLEUY0HEw84fgAyPxwSjrhpbYndo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789526; c=relaxed/simple;
	bh=aHgWnJercmO9bga0xfuGF1dB69CEj2xx22/xhOVmZyc=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=hAUh8ROzO/syUfTmups8p9ekgf5S2q5NJxWNL4vnyE3NosxeTjKKlDdbBlCZDT/KlWe7Ft8IBVrkbQLxskbebh96/Te93eoLbrfXNgYYwYf23oiFleqhwNzGM7SP5n29tlqSaoL2NKDS9D4ND4+MFbPVhA08NxBLkULVC3gc9i8=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=D/aMgol/; arc=none smtp.client-ip=209.85.221.51
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="D/aMgol/"
Received: by mail-wr1-f51.google.com with SMTP id ffacd0b85a97d-426f7da0b64so214850f8f.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789523; x=1761394323; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=ELtEzvOlSfZDw0eOq11pNQXYa7FR/HwnD4pYyXNkdPc=;
        b=D/aMgol/0/tY9SkQ2Qn64SkYKCcb7H9VTxL89L/aObgynEl8praK3gTZjnyu9Ibp5G
         IhEWiJMOizm3G4ZLkh5aHRQzreHqZAuMf1Y2sKYAI8A+jfYtysPAQKbRoelp5BP3angu
         RAg1Bir5sRwPrq8MK428nBoKn673qev9VXqHNwl9X0e7eAiN+zJhIM8QRJv3XiFVESAt
         qmT2HsmlNACDhoz7DGYh1Uya+e62VwYv/Aq6Bet8vdZNkiUYQCXPrDWlU8a4EpzJ4Pzf
         X3KMUnS5zOmFF64Mqe3wUhauKYuwPX8/3M2psF5e2neHkwU9PmP2Oywkoo8goMqOWKmx
         ECCQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789523; x=1761394323;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=ELtEzvOlSfZDw0eOq11pNQXYa7FR/HwnD4pYyXNkdPc=;
        b=vZdtoQAvp0XzKQBdb5ElRq3uU7Ul3OcO3xKlQ0KlSqvAi48LML+BP8waK5lVzd7WKd
         3k9jmuDZ5173m/MZ/B6cbEc3/qYGFULAJy0Et+cteHJOGEl4Ad9Mxi5U9SA3RO3nFZQu
         95wIr9D+Quyda2Pui+X2PqL4MMTvX3EQvgpm+vFLV2SASJ9438g/d2gFsCDGXsusCWcr
         cdC4Jnq890CMKkpJ1miYwzCMCDCiPMTzEx1pn5hAodg/ocNIfEIrV93NHGIn097nG1GC
         VO5caGFL6kGOK4i1kn8cRhrhLITGRP8M5gupSlQKotGj01U4O/kP5I05KWLUUltBOQop
         6FWg==
X-Forwarded-Encrypted: i=1; AJvYcCW0qE2NtbkBlFidRnX4uWYbNWuR7FSBd3lR3hHmEF+jcDLwEX+lQnEhQaeXFA7jXNSF66k0/JAM9F0MxeM=@vger.kernel.org
X-Gm-Message-State: AOJu0Yxj2Ak7Ms6MbfN2xoo3hwqnyDNvxay5DmCUaQACLV47dwOp4Ta2
	BhOBm4ZaSuOCdf9rAnlYGEiKoM8cuuZZuT+OZG6Lc8AiIV1FTNR4+R3h
X-Gm-Gg: ASbGncsZNmGubwYxQVvIIhZ0e0xRcjJrF+chXb5Q62WUWju0EsVQ3orAMnXC68zj6W2
	3yC04PB7b8I5MQR9b0e/wqtWwcTt8Z+eJWXNzFbip2jD9zy3CxTtRVQuQpt+1b5KbXqvkF5RLZD
	ZW/wGVDkTuYabKdwxl+Vj1EYnxbU/8FoKvEidkuXj1ZpGlAzEeBzsDZ9a9grvvch9kIeKcGSFhe
	6rybBTfzX5NH6XcyHziMzou6vB6Nb9oyS7pvoD2ciHqmgDB61P1ZcW4br3+yD9pQeCNl91fvVJj
	6srW7JO7pxldecBSTVyCnFAHySuspF7a3OzjW8xO3Y3ztB8m01XW+vcKhMRJn3tNu+Ok1LKCRao
	udLI5K222vy0QfMjP1G0Mac9AmCrgKiqfEJXBB9sGRhBcYaUUN0xobUr1TFWUHbF/heQYcT7Pow
	sgQMVKCW7+1hsAHOy0+72AkMsUpxGcZWorRdPx9dxKoS1Y/ObEEr4=
X-Google-Smtp-Source: AGHT+IFl2OlXHNJD+/6uPUbGL6WK8Fw8/JAYpjr+wCqhqtW+uDjAB+CPzFy2bZugCBb4WuxUe/AXOw==
X-Received: by 2002:a05:6000:26d1:b0:426:a87f:e8fc with SMTP id ffacd0b85a97d-42704caa860mr2705575f8f.0.1760789522527;
        Sat, 18 Oct 2025 05:12:02 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.01
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:02 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v7 03/11] ARM: dts: socfpga: add Enclustra Mercury SA1
Date: Sat, 18 Oct 2025 12:11:47 +0000
Message-Id: <20251018121155.7743-4-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Introduce support for Enclustra's Mercury SA1 SoM based on Intel Cyclone5
technology as a .dtsi file.

Signed-off-by: Andreas Buerkler <andreas.buerkler@enclustra.com>
Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
---
 .../socfpga/socfpga_cyclone5_mercury_sa1.dtsi | 143 ++++++++++++++++++
 1 file changed, 143 insertions(+)
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1.dtsi

diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1.dtsi
new file mode 100644
index 000000000000..49944f9632f9
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1.dtsi
@@ -0,0 +1,143 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+#include "socfpga_cyclone5.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1";
+	compatible = "altr,socfpga-cyclone5", "altr,socfpga";
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	aliases {
+		ethernet0 = &gmac1;
+	};
+
+	/* Adjusted the i2c labels to use generic base-board dtsi files for
+	 * Enclustra Arria10 and Cyclone5 SoMs.
+	 *
+	 * The set of i2c0 and i2c1 labels defined in socfpga_cyclone5.dtsi and in
+	 * socfpga_arria10.dtsi do not allow for using the same base-board .dtsi
+	 * fragments. Thus define generic labels here to match the correct i2c
+	 * bus in a generic base-board .dtsi file.
+	 */
+	soc {
+		i2c_encl: i2c@ffc04000 {
+		};
+		i2c_encl_fpga: i2c@ffc05000 {
+		};
+	};
+
+	memory {
+		name = "memory";
+		device_type = "memory";
+		reg = <0x0 0x40000000>; /* 1GB */
+	};
+};
+
+&osc1 {
+	clock-frequency = <50000000>;
+};
+
+&i2c_encl {
+	i2c-sda-hold-time-ns = <300>;
+	clock-frequency = <100000>;
+	status = "okay";
+
+	isl12020: rtc@6f {
+		compatible = "isil,isl12022";
+		reg = <0x6f>;
+	};
+};
+
+&i2c_encl_fpga {
+	i2c-sda-hold-time-ns = <300>;
+	status = "disabled";
+};
+
+&uart0 {
+	clock-frequency = <100000000>;
+};
+
+&mmc0 {
+	status = "okay";
+	/delete-property/ cap-mmc-highspeed;
+	/delete-property/ cap-sd-highspeed;
+};
+
+&qspi {
+	status = "okay";
+
+	flash0: flash@0 {
+		u-boot,dm-pre-reloc;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "jedec,spi-nor";
+		reg = <0>;
+
+		spi-rx-bus-width = <4>;
+		spi-tx-bus-width = <4>;
+		spi-max-frequency = <10000000>;
+
+		cdns,read-delay = <4>;
+		cdns,tshsl-ns = <50>;
+		cdns,tsd2d-ns = <50>;
+		cdns,tchsh-ns = <4>;
+		cdns,tslch-ns = <4>;
+
+		partition@raw {
+			label = "Flash Raw";
+			reg = <0x0 0x4000000>;
+		};
+	};
+};
+
+&gpio0 {
+	status = "okay";
+};
+
+&gpio1 {
+	status = "okay";
+};
+
+&gmac1 {
+	status = "okay";
+	/delete-property/ mac-address;
+	phy-mode = "rgmii-id";
+	phy-handle = <&phy3>;
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+
+		phy3: ethernet-phy@3 {
+			reg = <3>;
+
+			/* Add 2ns RX clock delay (1.2ns + 0.78ns)*/
+			rxc-skew-ps = <1680>;
+			rxd0-skew-ps = <420>;
+			rxd1-skew-ps = <420>;
+			rxd2-skew-ps = <420>;
+			rxd3-skew-ps = <420>;
+			rxdv-skew-ps = <420>;
+
+			/* Add 1.38ns TX clock delay (0.96ns + 0.42ns)*/
+			txc-skew-ps = <1860>;
+			txd0-skew-ps = <0>;
+			txd1-skew-ps = <0>;
+			txd2-skew-ps = <0>;
+			txd3-skew-ps = <0>;
+			txen-skew-ps = <0>;
+		};
+	};
+};
+
+&usb1 {
+	status = "okay";
+	dr_mode = "host";
+};
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859172.eml"

Received: from mail-wr1-f49.google.com (mail-wr1-f49.google.com [209.85.221.49])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 838B82D781E
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:05 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.49
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789527; cv=none; b=NkwFxMxyb2Xff17JRQsUn99c0M7rrqaitQ6AQ4qUeh/7ItAo4OSNvtXImyW2Pr1K3kOQEkZKKZZz972C4u1KNRDOFHuQtKGeKET8f33p43RsHFkhRWaGirJSASp1J/JEuHRUiO5HBCaH+UqEZoV57z8SBpUQnowpA1Hw3bNvPl4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789527; c=relaxed/simple;
	bh=p+HtOliJIpdvfgNiu+HTRNqZsxXYbMjiU4izC6ySwGk=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=BzhwZfvE4V24viD2N9UoKFIjjB7a5wEwn8CLPf0czQgsa2XbN2f3+wL833Iywl4UJ0cPRcaeB101RBDvFoKZjwh4P2X/ozZhTnmuCSqT3C0l4wm9D8TVoNkjvtPDgAIU9mjCgTiChD2zgm4QUCbUck/IjK+9s+lQMCCWJzUYibo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=kNXybClD; arc=none smtp.client-ip=209.85.221.49
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="kNXybClD"
Received: by mail-wr1-f49.google.com with SMTP id ffacd0b85a97d-426ff579fbeso322001f8f.0
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:05 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789524; x=1761394324; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=C8NQa4L4CG7HoZPqJ8Ok32X5AepFgS3EiKF4/VxGY/g=;
        b=kNXybClD/Y6DTcupWiSQR7DYWza+FhEG/c1SAPMv88FHPMUrqOcOf0InhbtSS71YoB
         ahUJ7Yh11A15pUM7LPJuFqAWfaiAABtnHgoy6lavvb2udghF1Q3fqYuvR9KmnKx6Suxs
         dOju/741mf9zlyebSC2mUecPgzeQLFyVmbU4DBlvio+mO/xnPiAGoMV2pzXoyrWzveQe
         JzfPWo3GNenduB+VuRaRbaEjLgHfDol7IZnxg6l9x8dAmJiU7qahTC1glSQRIgaym1O6
         ykV0xzx4srN8uX70nK7hCYdegTBuvKOsYn6PYmpTjZoBvHgBEjXbrJWu/EjMF0Jky189
         SftQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789524; x=1761394324;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=C8NQa4L4CG7HoZPqJ8Ok32X5AepFgS3EiKF4/VxGY/g=;
        b=GLT60RlrIKn1rUinc0nC/Zec2lVefxNqTx4oYhKmcgTK4ec1v/7zUtj/F9EeWo+/um
         G2eZDmTuOQaMBTeeT4GAEUTYV42I4DXooWPExHsTeYUI57oVipXnxPy308+BvQiCyvJ9
         ErBdEjMmTAOB8m9o3D7RhyRRUlUNDh4kFMCsZFGIVZ5P/Q/LljXmYxeUzmUG8Xf9mraf
         uUCwXfs9rltSK5SLTs82o7KpySl1MBP69CSZGHQ7XWm6ejv6V4HWV8iv0bN8KJ0yqpha
         R3MBHflJIVNRlIzr6Q3V7KFomR9K+0fTtIcXRxwy9MozFPf8b6ulCvwOKxzRDiHeg/vN
         al8Q==
X-Forwarded-Encrypted: i=1; AJvYcCUQq1iERBpwNYiT4xJUAyzpx1WDA996mldJdkDy3DWmwc9MFcdoJ52k3QR63nVqrbrlSmeJZOJ3Ws5RdAY=@vger.kernel.org
X-Gm-Message-State: AOJu0YxExkL1saQ5Jf+Zfnilh6nn11OUwThLMDKyvE0ofMIQNM14JGDs
	K0RvXxCXmw+0FpuqPMmh5auQhBdYlv22/dAQAAN1A0pzyu3Gu+Xpt1eY
X-Gm-Gg: ASbGnctyxCJRK2WfaPKV1Et+ui+D9MzLk14cMAoi33ZC/YRjKaJDRJFkXWjbQzlCGeN
	J4q49bE+STXnuuc9r9rm/Y6iav2kqRj/VvS6aCnBAbdvFHFufIBXXrjokRHOxanqaIpT0PGU4Nj
	DFgijLWQFbRLb85HaKHEorcvAPejDnk85XqPjYRZsDLAxw+eRI71Mk4ajZocKy9NACNngbGcPpC
	smX/LM2r96Xmq0iD0lGZk0SMFEQB+CiEb/oO+rplGnFwkRz+MoWZJUj02MBuY8J6MbG76YBttbO
	BcCajQGCFJG/QRm7V9HkGxxJ1/sOUjjN7cyHm+BrR7zE9sA21D4TcDUP0ghdC85cI+1o4u0c6Gl
	WcIPDINiES1UUc3ubDq/vDWJB8phmX5MD1JgS9OqBgOAgZpo4x34Nsf5LcydhJiPnmwahgUqKVT
	ssQ44EZi8cTwsHXzG98MSDl0MrIPCsdcoE33SociLOc7XKWtYqRpw=
X-Google-Smtp-Source: AGHT+IFMimUuU6vASBX3/3Y6ZmH+XpYxSVsS9ATmgH0fnw+pTkO3H29jtTRlJ2kDPv6y0tyObHaGNw==
X-Received: by 2002:a05:6000:181c:b0:427:529:9bbb with SMTP id ffacd0b85a97d-42705299bdfmr1908900f8f.8.1760789523682;
        Sat, 18 Oct 2025 05:12:03 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.02
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:03 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org,
	Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Subject: [PATCH v7 04/11] dt-bindings: altera: add Enclustra Mercury SA1
Date: Sat, 18 Oct 2025 12:11:48 +0000
Message-Id: <20251018121155.7743-5-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Update the DT binding for the Enclustra Mercury+ SA1 SoM

Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
---
 Documentation/devicetree/bindings/arm/altera.yaml | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/Documentation/devicetree/bindings/arm/altera.yaml b/Documentation/devicetree/bindings/arm/altera.yaml
index 30c44a0e6407..30ef03c53d73 100644
--- a/Documentation/devicetree/bindings/arm/altera.yaml
+++ b/Documentation/devicetree/bindings/arm/altera.yaml
@@ -52,6 +52,16 @@ properties:
           - const: altr,socfpga-cyclone5
           - const: altr,socfpga
 
+      - description: Mercury SA1 boards
+        items:
+          - enum:
+              - enclustra,mercury-sa1-pe1
+              - enclustra,mercury-sa1-pe3
+              - enclustra,mercury-sa1-st1
+          - const: enclustra,mercury-sa1
+          - const: altr,socfpga-cyclone5
+          - const: altr,socfpga
+
       - description: Stratix 10 boards
         items:
           - enum:
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859173.eml"

Received: from mail-wr1-f54.google.com (mail-wr1-f54.google.com [209.85.221.54])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id ADE322D94A4
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:06 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.54
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789528; cv=none; b=XvCUQ6gDjx6WTmVsLDKkjbWBlkrPBhUtIRG+Pxsd9//hT6B4dInfjDZWQWMeoNhxnrGZxHlR9rkjpaVM5u9rPYRRRb7WLPTVuFgOvXYLgt6xOMqRA04t7CH9MX8P2WCZSD/0OjiYkfaCWN7dUPfNvNVzCIgqi/yNXyu0gFrhSZ4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789528; c=relaxed/simple;
	bh=chBM4fI89RfRSTQyy77w7NKm+uci1RTfTRMtapqT118=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=rSLBHauaOo/IBN8kXK6VSGAxjxh/rX4c68IfwO5kZTflzoCaBygv75zP54yNXojfkl0IikPtKuIcBf1YBE8ZSBC7bJlWoFLvNlzjd7jydAHqRT8kaPtjlBVv+Ovhq6tziqrhYfiORsPNxQ0dYh0jUR+hGpRUD6MdANyD9z7pOUs=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=BZ0gbgDl; arc=none smtp.client-ip=209.85.221.54
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="BZ0gbgDl"
Received: by mail-wr1-f54.google.com with SMTP id ffacd0b85a97d-426ff579fbeso322006f8f.0
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789525; x=1761394325; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=kYhsBfZhMWFr6Wa+dWD+zvDolXEh8h6k/0rm68kc4+o=;
        b=BZ0gbgDlwlVd4ryn6rAWjhIsqyOaCUd30XrWo7Y1fe3ALJerJ+ypd8RZ25f5/2GZwq
         B5YyQIAc/xqmjOVbWy64/YfegVGElUMn74jZrkNKiOq9XqMO3SY4Uc9UkuqzrEaX7/h+
         nSGFG2t3jLsVTM+bjXR1Vcw8S2tNvUi6OooNkC06UkpeGKdZoPuMmq9VXtKWZU62Hc2a
         mMgRYZ4mCMKMXP4gnYXGXBZJghrKAqVbsplZ/1xeE6hM20WUA4HthGDne2bSyiWjW3OT
         NuL2I6sC3B514sIjV8DUOQyHGU0uCkDSIpFqpD4Pi4hbi85Q32BF4xwNzIv/s4l1ov+x
         XBJg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789525; x=1761394325;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=kYhsBfZhMWFr6Wa+dWD+zvDolXEh8h6k/0rm68kc4+o=;
        b=lxjhHuV9UKR64vDNIWnONGMYLQFOgNZcLBT174Vugip6sc7yvDFS3X036SmxDKqt1m
         a9Vb15FbsMN1OeHe30bqVIvlskxa8eIytr8+00m16CyE/RfU49yq8ySqThMjrBoiNkTA
         pwW6vrZD7Ka8DzFL5U+RZ+GxtRT+m6G7SpEpVUz4CIfZElv6h8SY5FecIE+oqHjJB8xX
         4VixWlzDr4ha6nmffvsQaaKpymWrPemset8L7AMEnUS+wxi41fEvkTvrkBVOYlb1yV0d
         ySnSYYFrZKm7SXZfta+AkW0dhff0ceUAlSjPUlZUQGXxcZ50VfjCShPF2j7ciVKcI2Wb
         YzcA==
X-Forwarded-Encrypted: i=1; AJvYcCVu/AdbfYvmR2z/A8rDX4fRTLlSyZGIfGqTlsfvJOrfMZF2/v9nWEf7qhZ0LuPQSs02n7TxDYM3WLamUK8=@vger.kernel.org
X-Gm-Message-State: AOJu0YxKDxnKPC4tLFsSyYGEqXZ18OGemLAwBgRn1S+2OmmfU/oHP6KL
	eNdfQqC+7i4cK1ht2uEiPXIoGbUxEQ7DjUIunJslviFRwwTIV90dyEOD
X-Gm-Gg: ASbGncvV+MZICUlk6BSmICaK5dx5P9rnSlhy1F6WzhCMbkaXNGAEXqb+yleQhmPNC2B
	V9+XPaGoUyUhihSBcui9bPMFL3+PkwDsw+EgMI6Sa65+Yn2e3N/VY9zzD5Toq/S3Vz8EfDPbXV0
	X/9xDlx0oBlsqPSnv7UH29pP5EI6km2T8mmrbI+Hy3XEONOSc4IC8JZW6OvbVo8/Pm/2BDsqS1N
	FmgoxvpnqUrEAz3pquGg8m6QpjhPPnKKhlcCD1mkck0wp/c5KP1f1c0nCgqjjGy6pAz6PvB86EB
	sun0gBzr5et/mCLqfcWyK8rYIkQ6cegzohEigUdysHpnRMjZHcus3ioHvDyuq0F052wAtQ3T8xb
	LhL1mXQ/2vhNktj9Cmji0DU2IsiAsP7xEi4bmUaXV7YRGXX/7uiatarbVkq8SorwexcQCNoeVF7
	i+RKY5Jx2aYe45GAQZ1wU6iiPWW94n+m+jfdkE3SkKpmExWxTQkbs=
X-Google-Smtp-Source: AGHT+IH1mulJ4plOuHgKwS0SsJhY962sW9hfVUqbDYOKG7lA7bglL50b/pzvguIJkAJGW1I/kDSyIw==
X-Received: by 2002:adf:a3d7:0:b0:427:7a9:97ab with SMTP id ffacd0b85a97d-42707a99873mr1610052f8f.10.1760789524842;
        Sat, 18 Oct 2025 05:12:04 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.03
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:04 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v7 05/11] ARM: dts: socfpga: add Enclustra Mercury+ SA2
Date: Sat, 18 Oct 2025 12:11:49 +0000
Message-Id: <20251018121155.7743-6-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Introduce Enclustra's Mercury+ SA2 SoM based on Intel Cyclone5
technology as a .dtsi file.

Signed-off-by: Andreas Buerkler <andreas.buerkler@enclustra.com>
Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
---
 .../socfpga/socfpga_cyclone5_mercury_sa2.dtsi | 146 ++++++++++++++++++
 1 file changed, 146 insertions(+)
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2.dtsi

diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2.dtsi
new file mode 100644
index 000000000000..0b28964e0378
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2.dtsi
@@ -0,0 +1,146 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+#include "socfpga_cyclone5.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ SA2";
+	compatible = "altr,socfpga-cyclone5", "altr,socfpga";
+
+	chosen {
+		stdout-path = "serial0:115200n8";
+	};
+
+	aliases {
+		ethernet0 = &gmac1;
+	};
+
+	/* Adjusted the i2c labels to use generic base-board dtsi files for
+	 * Enclustra Arria10 and Cyclone5 SoMs.
+	 *
+	 * The set of i2c0 and i2c1 labels defined in socfpga_cyclone5.dtsi and in
+	 * socfpga_arria10.dtsi do not allow for using the same base-board .dtsi
+	 * fragments. Thus define generic labels here to match the correct i2c
+	 * bus in a generic base-board .dtsi file.
+	 */
+	soc {
+		i2c_encl: i2c@ffc04000 {
+		};
+		i2c_encl_fpga: i2c@ffc05000 {
+		};
+	};
+
+	memory {
+		name = "memory";
+		device_type = "memory";
+		reg = <0x0 0x80000000>; /* 2GB */
+	};
+};
+
+&osc1 {
+	clock-frequency = <50000000>;
+};
+
+&i2c_encl {
+	i2c-sda-hold-time-ns = <300>;
+	clock-frequency = <100000>;
+	status = "okay";
+
+	isl12020: rtc@6f {
+		compatible = "isil,isl12022";
+		reg = <0x6f>;
+	};
+
+	atsha204a: crypto@64 {
+		compatible = "atmel,atsha204a";
+		reg = <0x64>;
+	};
+};
+
+&i2c_encl_fpga {
+	i2c-sda-hold-time-ns = <300>;
+	status = "disabled";
+};
+
+&uart0 {
+	clock-frequency = <100000000>;
+};
+
+&mmc0 {
+	status = "okay";
+};
+
+&qspi {
+	status = "okay";
+
+	flash0: flash@0 {
+		u-boot,dm-pre-reloc;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "jedec,spi-nor";
+		reg = <0>;
+
+		spi-rx-bus-width = <4>;
+		spi-tx-bus-width = <4>;
+		spi-max-frequency = <10000000>;
+
+		cdns,read-delay = <4>;
+		cdns,tshsl-ns = <50>;
+		cdns,tsd2d-ns = <50>;
+		cdns,tchsh-ns = <4>;
+		cdns,tslch-ns = <4>;
+
+		partition@raw {
+			label = "Flash Raw";
+			reg = <0x0 0x4000000>;
+		};
+	};
+};
+
+&gpio0 {
+	status = "okay";
+};
+
+&gpio1 {
+	status = "okay";
+};
+
+&gmac1 {
+	status = "okay";
+	/delete-property/ mac-address;
+	phy-mode = "rgmii-id";
+	phy-handle = <&phy3>;
+
+	mdio0 {
+		#address-cells = <1>;
+		#size-cells = <0>;
+		compatible = "snps,dwmac-mdio";
+
+		phy3: ethernet-phy@3 {
+			reg = <3>;
+
+			/* Add 2ns RX clock delay (1.2ns + 0.78ns)*/
+			rxc-skew-ps = <1680>;
+			rxd0-skew-ps = <420>;
+			rxd1-skew-ps = <420>;
+			rxd2-skew-ps = <420>;
+			rxd3-skew-ps = <420>;
+			rxdv-skew-ps = <420>;
+
+			/* Add 1.38ns TX clock delay (0.96ns + 0.42ns)*/
+			txc-skew-ps = <1860>;
+			txd0-skew-ps = <0>;
+			txd1-skew-ps = <0>;
+			txd2-skew-ps = <0>;
+			txd3-skew-ps = <0>;
+			txen-skew-ps = <0>;
+		};
+	};
+};
+
+&usb1 {
+	status = "okay";
+	dr_mode = "host";
+};
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859174.eml"

Received: from mail-wr1-f46.google.com (mail-wr1-f46.google.com [209.85.221.46])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id ACBC62DC355
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.46
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789529; cv=none; b=nt6deCC+oNZ/Uf399GK4pkQ6ee/lMx5NCAcwkby8MmXLV8GXUrVODduSomT3qirIC+vuaVn4ojbyTpwpNG+AI/Ix6Ve1GJfrE5HsBxEm2VWsTzB8t2OSjKvVLJTviY7/XLxyMru4/yIrswWjR49SI3OFPxnAGzNd6d4oVTCgjNo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789529; c=relaxed/simple;
	bh=icm+qgwvmlaIKVA0+LDLw72vpjzysCjTHSxFdDTSB1U=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=c0KA9wCOMEMQmcFZnYHdMA+iqRUrn91nzogYJMhOQDTaTX9lhAiQraMasoC4VATF0w7FHtbyg75AFC2GKsWselatHOAkpcDgebEJRnTNAvr5m59aqmZfG+oQKcwWmbNPoUFCtaFabEvl3MHLkchpprkJOPJ7D+WtVivOKIcl5Og=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=CJ2MQRYL; arc=none smtp.client-ip=209.85.221.46
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="CJ2MQRYL"
Received: by mail-wr1-f46.google.com with SMTP id ffacd0b85a97d-4271234b49cso140068f8f.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789526; x=1761394326; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=gTxzj/ZNzMCl2AVIVbzHV200aF3vcZBw8Pj3HONtytU=;
        b=CJ2MQRYLLMsPJq9nsKjEIO5lHAqJ7/rocDB/FyyLd2Fy2O81wMwQIru8UzO9teiFQi
         7/iqOCXCVJLkGhm+eh8w0CZ2RqkN3ZNYwyxILLFmbTK5NC4rhowgFRpGdH09QMYZctC8
         0ASVCB64mq3fmZSJLZ32zxdcT758r0ImPpyKu/vpWa54ic0sepzpr/5mFwOqmfrWh8CH
         YcI/Ff0yO660N/bDyOD2ltkkvVbfkPpQ0MHi1Vgde2QnOdQgUcUUhORXoYP5Kmz2g2Jo
         UdT8Z8aCwWLw7jkbVyQR545cisxqlINY9gi64zZcyO9Gf14/aVjRbN5lvCYll5XSSpsQ
         FMsA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789526; x=1761394326;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=gTxzj/ZNzMCl2AVIVbzHV200aF3vcZBw8Pj3HONtytU=;
        b=CHNBydeEQ45juygO4AyWSGE6MuJlmbW1X+zlra6cxl4CQDIa8+lkSyMXM8YuTNkZ2U
         WeKmVLNUpwuwPqnbhTIeNWLFfo07BG1tbgn3sOgah0/M/mNjb/2xeVGjulkZDGdWN76D
         u4BdDms2X+AjdTlPBBQPBdHjEcKZOkRwtDtJ5nTjYM+z17c9Yon+zXVRlDHjs9X00yex
         UbUCk6WpMN0ohozCcHtUkZQaitHUN4l/658gaicncRT18NqTRFXJSzP9nlvF/XiZIysA
         fQyLq0NBuCMDaA8hHMjq81c93rIrjR9jVQX2u/w5Au+5/rE4mhK7u68CwSlcWnUiBrqI
         G3Cg==
X-Forwarded-Encrypted: i=1; AJvYcCUiVNilm1Vgwjpizr/spgiS86JEl3mfj3MbThfFGrPQh7egtX9CovbSKb4Gl9g9v2fKPXNIhSy6CDXj4ps=@vger.kernel.org
X-Gm-Message-State: AOJu0YwJjazDEfoU0CdhIxdr7P6dXOqEoX/Ib878iS+MgqL/H3xDlWVz
	SISyEDWujJ/+8fR8vOe5L8IgnAr6gJhyScwmQuW/4C4okMws0xtL7EvVS4FzWHxl
X-Gm-Gg: ASbGncsnND3uFP1eFlic+9vsHStYEFZN7eOAiGp0YID0+Skr5HIOPgRYtb56lD1dyJm
	VDkzoc4qRL6uQkD9Y0zGzJLMiZuUtSWCHytUtaqGI3InQJGCF2+t+g0thxbLCX6vdcWSxDTvSE1
	btgDnxm5yYIY0botYGegxks6HYBJ8N43UX7zFBBky6jMrYdMTVoKktJHL9MdmYEEbXaezY7SawB
	u3rhNEX96CuSA86q+6piPmKWm+Uixiz3yJF4bMuO5Bcft2IiuisQrPdWyZkuvtem7NZrzSiJnRp
	arWk+ojHLrQK4JCH11SDtbIWkw9lyWvY6Y+Nz5XVQG89fG0MVrW5biNd1NNSaycQxb8RV7LAZg3
	60CpfNcaD23vPGL7vpgJy1sU4a4+8t2cFQNHOH0n2Jp+aWDfctNWyE3Y33corvfou6j/yjDHpuY
	W9t1i29NpuQqXLzly4kouQvFZ5bhEqzHsdYyJK40pRlEUX77Nb+Is=
X-Google-Smtp-Source: AGHT+IE9WrMpGHlOtq7pCFaMxpNHBwkBQgyPgdXD8PMj1DfIilZHD1dWISX0v2wrGK83GpPxksi21w==
X-Received: by 2002:adf:a3d7:0:b0:427:7a9:97ab with SMTP id ffacd0b85a97d-42707a99873mr1610059f8f.10.1760789526007;
        Sat, 18 Oct 2025 05:12:06 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.04
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:05 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org,
	Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Subject: [PATCH v7 06/11] dt-bindings: altera: add binding for Mercury+ SA2
Date: Sat, 18 Oct 2025 12:11:50 +0000
Message-Id: <20251018121155.7743-7-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Update the device-tree binding for the Enclustra Mercury+ SA2 SoM.

Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
---
 Documentation/devicetree/bindings/arm/altera.yaml | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/Documentation/devicetree/bindings/arm/altera.yaml b/Documentation/devicetree/bindings/arm/altera.yaml
index 30ef03c53d73..72cf04b22a08 100644
--- a/Documentation/devicetree/bindings/arm/altera.yaml
+++ b/Documentation/devicetree/bindings/arm/altera.yaml
@@ -62,6 +62,16 @@ properties:
           - const: altr,socfpga-cyclone5
           - const: altr,socfpga
 
+      - description: Mercury+ SA2 boards
+        items:
+          - enum:
+              - enclustra,mercury-sa2-pe1
+              - enclustra,mercury-sa2-pe3
+              - enclustra,mercury-sa2-st1
+          - const: enclustra,mercury-sa2
+          - const: altr,socfpga-cyclone5
+          - const: altr,socfpga
+
       - description: Stratix 10 boards
         items:
           - enum:
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859175.eml"

Received: from mail-wr1-f41.google.com (mail-wr1-f41.google.com [209.85.221.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 252C429BDB1
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:08 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.41
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789531; cv=none; b=KWq0UJlapVwzv1GoIOPt4maVYEmE10tpqOHgEtdxzX5R2Szb5xXBwPsrrczAWHYos2833Kesgs8+a8n0ehq4vZhzqk0lfG8oEKiNCVJR7DHdpEwvkRRfZIW2PW1X26Wdm8wznhTTFlwzhS4BHjpBPvOwcTbq8XpthsORvLUKV8E=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789531; c=relaxed/simple;
	bh=an1IqI2DrpyzSR1UThF1rWbqQR6bxYIoSS+lWWmwVzI=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=BDV/uMNiY59lb0E50tWyDZLFv+VQV945M7KgCpqTuxdAvT48P5mR9Igpd2hGWETVwSrIyRaaZih6VkQG8zmKNGFjC36OxZt+yvXzaBgPfEe4jFgTi187OEIH6ercDe4DV2AOwY1eymSEEphRdPQxef92dWbur1h1Q7x9MT4Fsrk=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=mpksG7r/; arc=none smtp.client-ip=209.85.221.41
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="mpksG7r/"
Received: by mail-wr1-f41.google.com with SMTP id ffacd0b85a97d-427054641f0so350494f8f.1
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:08 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789527; x=1761394327; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=B8w0UBMRdn9WI7neqz6g09a5mjk21WNS8Jbq/ycntUs=;
        b=mpksG7r/qZxzDQrV/aSx6SJW+z64PV/Ty0omzl0xX/kZJSMAgEIdhXBbNQKJb1j0FF
         g9KY679nfOXPKk31iUCvFSZoqyrKHcsGA5cwLw2jyC/zN2vsB4kD7DGHAzC0r2MfQEoU
         B2voSulgTlGaZGj6DqAbIQdpoTqLLjiyzjJUU0u8GRBhFXB+enAux+bhKr1jxDFOKKam
         gsPbu8sd/imHMtD68ZS92weJ4EXnWaPcBI6jgRxYxHlap8xCmDUM+hPDgjx8TIR2NM22
         dNfuUPGzVkm/8i/rWPv11XX2k+ZEzMk6zxzq44ga5qiOZbM9n/XwgbbT9gNVIxupEHTQ
         Lnnw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789527; x=1761394327;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=B8w0UBMRdn9WI7neqz6g09a5mjk21WNS8Jbq/ycntUs=;
        b=ukNSOGswmoZT2yORxGSN7GyYll06ruDOKIB0k5V37XrCCo21ENMWbGrJqyXm0qIyEp
         Six5mfdRlxf1sUTZLALt8vVkN6v4UHLZl4A1fml4v3f40imCXKCug3QzzQPxRCKUNTN2
         MKsfLvs/uEjAPjthSESyYBTKFcARIYjYU3igjr9aYKquKNx7h9bTrQ5PNXLaBwhpXDnl
         AuPC/5y0Fhl1pay1AB1N3ZII3MYBFpEqQW9zRB469susYSDXSCP3/BxQnd4d5Kxnc9RP
         VgDq/NY2BfghRSIHMHjOBXbKK4FxYW5N34we119EPAp/S5w67NKW6M/0AQtGw/3SqMou
         3Oig==
X-Forwarded-Encrypted: i=1; AJvYcCXxz9nxUoBw7eN1O9mJ26WHMiIil54AtGmULG+JO6/LQTH55JGHzetzb72bbKB0DZ1Cs+cLszyU/S7nPXA=@vger.kernel.org
X-Gm-Message-State: AOJu0YyKlTs7lakJGNvi5G/LJ1NJxoYFKLlmrvOqWbaHLjpYIAY8LOqj
	EALDFCE2mo6VF5kSe1KKN9BFS2p5NRLnqBNZF5Hg/2zUSKzbNMvcylQE
X-Gm-Gg: ASbGncvkCqEJs3gaDP9DkzhwBzT2kY2XfKpaTPkhHd+TlHvb4iqCrTN0kxMnfandAc7
	0TgqVDaao+2Nk25IS+Rd5A1hOasuB26Q1c4+JNqwFCm/zDz/7M9N/3A8QfT5siab6c1H94w/XMy
	egDE9PCJYsesEwaPW3OFvP5MBax5aeloXC5sYM+E39ZF/NtLOqwSwuZsoqmDdaMSv+ry8hvJrdx
	alKieWL1gVM3C4Oa/vS4CDwIPAQRRJVJv6Z0hvMlimY3Kz3Js/uRM8EG0Md0ENIjeMeQeQhVBrr
	T3SWHi3F4LOoGCrISIOaCCK+00DniwvSYw86WBLdXHuTGxtzvVoCSTK8sxOYlhgouPTB2uYhOvF
	8nTK0BmPytrYHCWfa/dbpR3B9STcE5rdavP3A9PKCB2cgs8/LpiL3ofzhQOhmyAokmWV6Q0o0Sb
	B/EOGx30paXLOTygkrI4CVIMX+5bdqnn3qT/jEONMjXGFw1pyrJ7E=
X-Google-Smtp-Source: AGHT+IGEfA/n1fBsH4OpE/QWlNcK4GVsyU3tzUEJqq/AVXzIIWuXIHyTt7QyAoB1zV3BNXVUvBeAbg==
X-Received: by 2002:a5d:5888:0:b0:3fb:6f9d:2711 with SMTP id ffacd0b85a97d-42704e25343mr2427187f8f.8.1760789527196;
        Sat, 18 Oct 2025 05:12:07 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.06
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:06 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v7 07/11] ARM: dts: socfpga: add Mercury AA1 variants
Date: Sat, 18 Oct 2025 12:11:51 +0000
Message-Id: <20251018121155.7743-8-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Introduce support for Enclustra's Mercury+ AA1 SoM, based on Intel
Arria10. This is a flexible approach to allow for combining SoM
with carrier board .dtsi and boot-mode .dtsi in a device-tree file.

Signed-off-by: Andreas Buerkler <andreas.buerkler@enclustra.com>
Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
---
 .../socfpga/socfpga_arria10_mercury_aa1.dtsi  | 143 +++++++++++++++---
 1 file changed, 121 insertions(+), 22 deletions(-)

diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1.dtsi b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1.dtsi
index 41f865c8c098..c80201bce793 100644
--- a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1.dtsi
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1.dtsi
@@ -7,12 +7,14 @@
 
 / {
 
-	model = "Enclustra Mercury AA1";
-	compatible = "enclustra,mercury-aa1", "altr,socfpga-arria10", "altr,socfpga";
+	model = "Enclustra Mercury+ AA1";
+	compatible = "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
 
 	aliases {
 		ethernet0 = &gmac0;
 		serial1 = &uart1;
+		spi0 = &qspi;
 	};
 
 	memory@0 {
@@ -24,52 +26,102 @@ memory@0 {
 	chosen {
 		stdout-path = "serial1:115200n8";
 	};
+
+	/* Adjusted the i2c labels to use generic base-board dtsi files for
+	 * Enclustra Arria10 and Cyclone5 SoMs.
+	 *
+	 * The set of i2c0 and i2c1 labels defined in socfpga_cyclone5.dtsi and in
+	 * socfpga_arria10.dtsi do not allow for using the same base-board .dtsi
+	 * fragments. Thus define generic labels here to match the correct i2c
+	 * bus in a generic base-board .dtsi file.
+	 */
+	soc {
+		i2c_encl: i2c@ffc02300 {
+		};
+		i2c_encl_fpga: i2c@ffc02200 {
+		};
+	};
+};
+
+&i2c_encl {
+	status = "okay";
+	i2c-sda-hold-time-ns = <300>;
+	clock-frequency = <100000>;
+
+	atsha204a: crypto@64 {
+		compatible = "atmel,atsha204a";
+		reg = <0x64>;
+	};
+
+	isl12022: rtc@6f {
+		compatible = "isil,isl12022";
+		reg = <0x6f>;
+	};
+};
+
+&i2c_encl_fpga {
+	i2c-sda-hold-time-ns = <300>;
+	status = "disabled";
 };
 
 &gmac0 {
-	phy-mode = "rgmii";
+	status = "okay";
+	phy-mode = "rgmii-id";
 	phy-addr = <0xffffffff>; /* probe for phy addr */
-
 	max-frame-size = <3800>;
-
 	phy-handle = <&phy3>;
 
+	/delete-property/ mac-address;
+
 	mdio {
 		#address-cells = <1>;
 		#size-cells = <0>;
 		compatible = "snps,dwmac-mdio";
 		phy3: ethernet-phy@3 {
-			txd0-skew-ps = <0>; /* -420ps */
-			txd1-skew-ps = <0>; /* -420ps */
-			txd2-skew-ps = <0>; /* -420ps */
-			txd3-skew-ps = <0>; /* -420ps */
+			reg = <3>;
+
+			/* Add 2ns RX clock delay (1.2ns + 0.78ns)*/
+			rxc-skew-ps = <1680>; /* 780ps */
 			rxd0-skew-ps = <420>; /* 0ps */
 			rxd1-skew-ps = <420>; /* 0ps */
 			rxd2-skew-ps = <420>; /* 0ps */
 			rxd3-skew-ps = <420>; /* 0ps */
-			txen-skew-ps = <0>; /* -420ps */
-			txc-skew-ps = <1860>; /* 960ps */
 			rxdv-skew-ps = <420>; /* 0ps */
-			rxc-skew-ps = <1680>; /* 780ps */
-			reg = <3>;
+
+			/* Add 1.38ns TX clock delay (0.96ns + 0.42ns)*/
+			txc-skew-ps = <1860>; /* 960ps */
+			txd0-skew-ps = <0>; /* -420ps */
+			txd1-skew-ps = <0>; /* -420ps */
+			txd2-skew-ps = <0>; /* -420ps */
+			txd3-skew-ps = <0>; /* -420ps */
+			txen-skew-ps = <0>; /* -420ps */
 		};
 	};
 };
 
-&i2c1 {
-	atsha204a: crypto@64 {
-		compatible = "atmel,atsha204a";
-		reg = <0x64>;
-	};
+&gpio0 {
+	status = "okay";
+};
 
-	isl12022: isl12022@6f {
-		compatible = "isil,isl12022";
-		reg = <0x6f>;
-	};
+&gpio1 {
+	status = "okay";
+};
+
+&gpio2 {
+	status = "okay";
+};
+
+&uart0 {
+	status = "disabled";
+};
+
+&uart1 {
+	status = "okay";
 };
 
 /* Following mappings are taken from arria10 socdk dts */
 &mmc {
+	status = "okay";
 	cap-sd-highspeed;
 	broken-cd;
 	bus-width = <4>;
@@ -79,3 +131,50 @@ &mmc {
 &osc1 {
 	clock-frequency = <33330000>;
 };
+
+&eccmgr {
+	sdmmca-ecc@ff8c2c00 {
+		compatible = "altr,socfpga-sdmmc-ecc";
+		reg = <0xff8c2c00 0x400>;
+		altr,ecc-parent = <&mmc>;
+		interrupts = <15 IRQ_TYPE_LEVEL_HIGH>,
+					 <47 IRQ_TYPE_LEVEL_HIGH>,
+					 <16 IRQ_TYPE_LEVEL_HIGH>,
+					 <48 IRQ_TYPE_LEVEL_HIGH>;
+	};
+};
+
+&qspi {
+	status = "okay";
+	flash0: flash@0 {
+		u-boot,dm-pre-reloc;
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "jedec,spi-nor";
+		reg = <0>;
+
+		spi-rx-bus-width = <4>;
+		spi-tx-bus-width = <4>;
+		spi-max-frequency = <10000000>;
+
+		cdns,read-delay = <4>;
+		cdns,tshsl-ns = <50>;
+		cdns,tsd2d-ns = <50>;
+		cdns,tchsh-ns = <4>;
+		cdns,tslch-ns = <4>;
+
+		partition@raw {
+			label = "Flash Raw";
+			reg = <0x0 0x4000000>;
+		};
+	};
+};
+
+&watchdog1 {
+	status = "disabled";
+};
+
+&usb0 {
+	status = "okay";
+	dr_mode = "host";
+};
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859176.eml"

Received: from mail-wr1-f54.google.com (mail-wr1-f54.google.com [209.85.221.54])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B448C2F9DAD
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.54
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789532; cv=none; b=q7oSzLAMLz7X2y+eZ8x+c5tUxwFqtDhME2ZIcXn18WNY7/LdgzWkUbX1OegIzCFI2FykDglb2XpogM81bOHpOxbES+POo8FsQE7f1h0IjzxnJhCNKvNlEIltFbleuoXRLE4/s9HB1Oa0ciQHaSWTXyf1/SGu1UObbU+VX4pg9yw=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789532; c=relaxed/simple;
	bh=DgZps663UDZN5epdnEzCbjtCIn6+YBKEMEwNs6f1LhI=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=bLSt84u51qIQ5f0yvpn8is+ULBduwotlKcQTaEZn2hbeDTmPdcmHmZY4fQLT0t4NquRH3pg4Rqewo7MUGo1yFAwDSQtG/Yz8zVfLsScQCdGW+RAUHsWsro8KZp5V4uoq/AAXEQIIbRx7MUY+5odL1agyJ4sfwjtTZI+6dQ8IHso=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=AOwblmpZ; arc=none smtp.client-ip=209.85.221.54
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="AOwblmpZ"
Received: by mail-wr1-f54.google.com with SMTP id ffacd0b85a97d-427087fce27so189165f8f.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:10 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789529; x=1761394329; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=ZxpK3WEFRP24pO6er2HLu1PilAUDMnnv6oX193o3fM4=;
        b=AOwblmpZ/IcleGqeSoXhSL4y5BNIMc0z3QsztL141FAs0pEWD3wrayU7YgKS00yUay
         lIjOMkAQvK09w16r3npYGEyAAcsa0PS4yTqupkmOsHqXilCC/c6ciS+vvp/b72AhnXRh
         7d79SdCbo+QO0BQWgmpH1JS3E3AEx3xkJkI7hXPVRvojh2ZX+c/Q+JdFPsrcJVeSPdsZ
         JB75vZz32P48t9ty8tQZ4sxSUP5/5NHLK4q7iKl1rDPFBG8brUN6uBoNY6yxYznvFUgI
         nAUKRFsIUkfMOVdsS8kXTeURL+76VOdCA/Lgb11n4KJAIXbU1bUG44j3C/Ek4G5bVGeq
         GJOA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789529; x=1761394329;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=ZxpK3WEFRP24pO6er2HLu1PilAUDMnnv6oX193o3fM4=;
        b=nnJe8eTPrf4Lz5Ef6kpo+gBpQOXFOkML4dOXzIi4xn4Z8v/OcYZ1uxokMoxnEDviJX
         V7Gpbze5OP2jYF+sUVIHjY3DM2UWZ69ePkykin5Fgi9KO9LlbFZrJ7Var79KUHBVaXPC
         EuaM093hzoSQjknWPTJD3xQ9rs0bRBT84bR4wSXPvXWqVLy/ejRJjRvwbUlomIvFcidS
         qCu9ATL/41kbO7fCMC5gFUPixoA2i9Pn2tiRB4G5xn6yHey2LqxmNcDTT9vIgzrbviUX
         +0SVbWos+hkJ0EeDYZGBznP9R7eSlaIlDHjVpu7BT4VNHar8XRcNFhvLM3zyWw0aexq8
         a2Uw==
X-Forwarded-Encrypted: i=1; AJvYcCV7hdUl1fBP7zDjpw0iT4q6sJA+P4rrsv8bS8N/MeYdqol8MWNo+gsGCXkmYHq/18vavJ0DyWwfrEfvb9I=@vger.kernel.org
X-Gm-Message-State: AOJu0YwBbZIWklvDFDV1rVoBnSAZDusUYW1a+OqxNZDmX53wFORSj5+u
	G0Onohcwh6ZyDTYP0hR9r+26PkZ0uyAHEtFeYBGXaydm2OhmtbkcvzDP
X-Gm-Gg: ASbGncsEPcL+kq7N8yn/N7aVtcYcLvXS5dGbEnM4RAXPsnUA7O1N7+J0PPrfKKS6Zga
	hVM4YMh4r7Ed1rCXRphwltmRfuHUbrBcNwRHQiTz3RiB7uZeedx+EaWxTRlaC9aUUQpqK9R+DFd
	ZeO2DrJbd5zZRXDh9v/jqvab+TCU1IVGh4io0IgfYEG6ciYYF9xu+ncguOgbDPAZFcBwJvaELGz
	vyN4ZlgN9G5FvBkKRUB43rXpTYCbjDvAHoa2CbVLG2PaGYm/mPO+Hnem7c+QoTP6TR3GWxUmkpe
	XNBMwmuhyI+pTg4DNiM5wuC7J2ySM3SvjWd3hS4UUKWfr19KWl4p6yn9zTR86IfGjDCtbWzCva5
	gR01Ae04+/lMdN2A5kMi6Hg0++MjkAmvuOEX7s0eTAGFyZAH1RDm77prGWUqkBCQ314qCYB+Wge
	TesD74xYt8pcJk8kfNsEfP4zsdeFZgLjTQC40D1pxA
X-Google-Smtp-Source: AGHT+IGC6LKFKhEP+nYqlEkB/aggNqEhJWaEiRHj+L9VYwOXrlGpXchMJU2/J+fkSJXgQUSdUq6mnA==
X-Received: by 2002:a05:600c:3b09:b0:471:152a:e574 with SMTP id 5b1f17b1804b1-471178a4b36mr29997065e9.2.1760789529097;
        Sat, 18 Oct 2025 05:12:09 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.07
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:08 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org,
	Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Subject: [PATCH v7 08/11] dt-bindings: altera: add Mercury AA1 variants
Date: Sat, 18 Oct 2025 12:11:52 +0000
Message-Id: <20251018121155.7743-9-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Update binding with combined .dts for the Mercury+ PE1, PE3 and ST1
carrier boards with the Mercury+ AA1 SoM.

Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
---
 Documentation/devicetree/bindings/arm/altera.yaml | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/Documentation/devicetree/bindings/arm/altera.yaml b/Documentation/devicetree/bindings/arm/altera.yaml
index 72cf04b22a08..227665d0016f 100644
--- a/Documentation/devicetree/bindings/arm/altera.yaml
+++ b/Documentation/devicetree/bindings/arm/altera.yaml
@@ -31,6 +31,9 @@ properties:
       - description: Mercury+ AA1 boards
         items:
           - enum:
+              - enclustra,mercury-aa1-pe1
+              - enclustra,mercury-aa1-pe3
+              - enclustra,mercury-aa1-st1
               - enclustra,mercury-pe1
               - google,chameleon-v3
           - const: enclustra,mercury-aa1
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859177.eml"

Received: from mail-wr1-f47.google.com (mail-wr1-f47.google.com [209.85.221.47])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 341052FB99F
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:12 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.47
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789533; cv=none; b=mH7OTYmW9MnChKQ+hDr+MN0nIfmpNLfv7EpiYxM834GANryMdGy6lWGZ/n9sQwfPtTtuMEbR7mSChyEO/aDwinSN0Y6il86C+HA4usdpWQsGtQPeoUni6X1qU+tosxI1Zg8sQLvL/azpGL1P1FFtd+U5nH9quy21VmyNzFWxmSo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789533; c=relaxed/simple;
	bh=3i5hN70EkS+R2vT407APeWIAYo0I/+m93+hR8moAbAg=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=j79cUOlNeuiEH1jwdWH3P1Swho9iIAtfeNi8ygipyoQGYCB3+1IEbUqU5UqqYNBmB+V5qx0VU/e437c1N0esJW84QNNAiuXq/11DlCJVvL/IQ2mtJzc+u5AbQn/NIPGcgxgIqZuO5vCXjIkINFSZSzyeb+ThSM/yjjYfPcO/sCI=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=X1JkyaYD; arc=none smtp.client-ip=209.85.221.47
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="X1JkyaYD"
Received: by mail-wr1-f47.google.com with SMTP id ffacd0b85a97d-4271234b49cso140087f8f.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:12 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789530; x=1761394330; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=Yj2U7Ks4Aai4rP5FlRiq75b6DNk0shSZ9f9hco/FDQo=;
        b=X1JkyaYDVQu6ShFZGoHAiHQF2ZYFHMyZ45VDNxgmq28xPHHUcIKNDsTVwmkxtjuTwU
         He/7BPEJV25YUifJMaHY3DqGZmSLbiIQwEodx2qlBIt380FBIA4czrIzcdJad+WkAkM6
         UhbxVXd6BC2/7kdOZ7pbjRvykPFqYzWmkuy4hywMjWVUwfQRbISB11wg0cwDk4GFgsz/
         Ld70ARbakhoA72ph7dYhf5z8jsaTWJE0Cs2HaUkx8Eg+eBVkPozbSQq1c2KsYe0DnOxO
         +GIN2NeC7JRC6VUj3qBuaD1cNUwqQf7EZEsSQcxsAocTbIttG2xBU0WyC/DoR5kn0wwz
         tZgw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789530; x=1761394330;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=Yj2U7Ks4Aai4rP5FlRiq75b6DNk0shSZ9f9hco/FDQo=;
        b=S7KVkOR4BemDLm48V6swpgmMbmZwzv6HCCYXvbHSGoWcvp7PCN1k+Qw8I0s9idM5zM
         h+AL594zLu2HBPJo7ZwgNww/ByYZGy2th3CAun1yMzHG/s2XV4sMozV/U/yi548b5MFW
         3V04vX/0fQgmGxBEQilR2Wp0Zqth3IaWsLJlQO+MG4SemhEI7kzXqVre76fjaDL4eHWJ
         Ye2zgExKKyStHak2op9o7rN7SeBAhT0GT13D+FwmriiPN9oRDIMMKZU96QXBRnrAUveC
         2g+zfsYYfiVI67WCJvHfcFdvOaT64xd7aam1fZfl3NAG0Pnp9edwxBwYZItwPzcb+n2Y
         HlBg==
X-Forwarded-Encrypted: i=1; AJvYcCXmqdti3TA2k3PIzi7Cik+G4Zp7oVSL+2p0G1cfNZw8xHIgF1k8569eGkT69FTC9mhx098HPB2Lj4qWidY=@vger.kernel.org
X-Gm-Message-State: AOJu0YyGV4pEwz8tKXc6lOgedVjk46Y5USI97QB1c9aUvCQ5yxSkGyMg
	QEIdSjFTUE7VffDn/zk5OnC7Ym8HSHNd90bNf2AMonVTgvz804UutmMJ
X-Gm-Gg: ASbGnctdEiUR4WvAD6HrY1748xth7o2/uFL+4nB2et3hy2x+yGjyqbgHdIKL5KR42yN
	W6arT1bkgFdE+58t5ecPHTQO7LEyj+bYQ2SimnLWZVhS/X3PJohIM3sKFo+rZI/KN1h7If6nnzU
	LbvJeICHRYGuNNeU6PmbDI4SS3ozPA9R9J4+NChvYTRX1x6ad3bv2ps3clXbClMImUnuHrwZkS3
	6t5OH7P2HWTjwEf4qULQDdg6PrRpyd3rx1OJO6D4VnUG9SsBJnVR51wXA3J0SVLzwqHjb8Ld2pb
	KZCcgqNI4AJGp/shC77BUGeuRw11n/i1J/6EJHvRgJgDKvUnLHZdSeJSmj2ouHH+gobdEDzS+/C
	2AMqt37zP4AgvCfPpNxLTdmuyx1Y/pcsyzUfN9AVoi0ZyzpHEJrqX+FLcvkkKtUB+AkuPbYF76a
	+XtS1lz9NxCY5GC6IIV3UIT12PGgAS7+apjyboEuBBst2uTWAmeLA=
X-Google-Smtp-Source: AGHT+IEBdyKtF2N2KL9lmNfwqEGlADXNFa9DsShem0CkpLr8AuBNYJQxf6N3vylc+U/0FgLDa4AAyg==
X-Received: by 2002:a05:600c:3149:b0:471:161b:4244 with SMTP id 5b1f17b1804b1-4711792a696mr28075605e9.5.1760789530237;
        Sat, 18 Oct 2025 05:12:10 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.09
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:09 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org,
	Steffen Trumtrar <s.trumtrar@pengutronix.de>
Subject: [PATCH v7 09/11] ARM: dts: socfpga: removal of generic PE1 dts
Date: Sat, 18 Oct 2025 12:11:53 +0000
Message-Id: <20251018121155.7743-10-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Remove the older socfpga_arria10_mercury_pe1.dts, since it is duplicate,
the hardware is covered by the combination of Enclustra's .dtsi files.

The older .dts was limited to only the case of having an Enclustra
Mercury+ AA1 on a Mercury+ PE1 base board, booting from sdmmc. This
functionality is provided also by the generic Enclustra dtsi and dts
files, in particular socfpga_arria10_mercury_aa1_pe1_sdmmc.dts. Since
both .dts files cover the same, the older one is to e replaced in
favor of the more modularized approach.

Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
Acked-by: Steffen Trumtrar <s.trumtrar@pengutronix.de>
---
 arch/arm/boot/dts/intel/socfpga/Makefile      |  1 -
 .../socfpga/socfpga_arria10_mercury_pe1.dts   | 55 -------------------
 2 files changed, 56 deletions(-)
 delete mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_pe1.dts

diff --git a/arch/arm/boot/dts/intel/socfpga/Makefile b/arch/arm/boot/dts/intel/socfpga/Makefile
index 7f69a0355ea5..73a912ec6d95 100644
--- a/arch/arm/boot/dts/intel/socfpga/Makefile
+++ b/arch/arm/boot/dts/intel/socfpga/Makefile
@@ -2,7 +2,6 @@
 dtb-$(CONFIG_ARCH_INTEL_SOCFPGA) += \
 	socfpga_arria5_socdk.dtb \
 	socfpga_arria10_chameleonv3.dtb \
-	socfpga_arria10_mercury_pe1.dtb \
 	socfpga_arria10_socdk_nand.dtb \
 	socfpga_arria10_socdk_qspi.dtb \
 	socfpga_arria10_socdk_sdmmc.dtb \
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_pe1.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_pe1.dts
deleted file mode 100644
index cf533f76a9fd..000000000000
--- a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_pe1.dts
+++ /dev/null
@@ -1,55 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0
-/*
- * Copyright 2023 Steffen Trumtrar <kernel@pengutronix.de>
- */
-/dts-v1/;
-#include "socfpga_arria10_mercury_aa1.dtsi"
-
-/ {
-	model = "Enclustra Mercury+ PE1";
-	compatible = "enclustra,mercury-pe1", "enclustra,mercury-aa1",
-		     "altr,socfpga-arria10", "altr,socfpga";
-
-	aliases {
-		ethernet0 = &gmac0;
-		serial0 = &uart0;
-		serial1 = &uart1;
-	};
-};
-
-&gmac0 {
-	status = "okay";
-};
-
-&gpio0 {
-	status = "okay";
-};
-
-&gpio1 {
-	status = "okay";
-};
-
-&gpio2 {
-	status = "okay";
-};
-
-&i2c1 {
-	status = "okay";
-};
-
-&mmc {
-	status = "okay";
-};
-
-&uart0 {
-	status = "okay";
-};
-
-&uart1 {
-	status = "okay";
-};
-
-&usb0 {
-	status = "okay";
-	dr_mode = "host";
-};
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859178.eml"

Received: from mail-wm1-f47.google.com (mail-wm1-f47.google.com [209.85.128.47])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 272482FCBF5
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:13 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.47
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789535; cv=none; b=jqjvaIzAZARk/mVWO13d9PE3QByweBvESbAOHmNKneWvk8cq1733dZerPqp9ZpLU2PnYdCDfl6DSk0ehrYKJ2vOK/mDl1wzAWQ+BRsLRgOTTnvWOyN2aSbER67JWiN5QoInkEzZTiDiaW3Y4Bu4KAspAWR7m0/41yd1LUKDXe9g=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789535; c=relaxed/simple;
	bh=+kJN5PezJ0QH+/KdewVY3pE+HvTakZByw4n/oGasQtU=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=I5+Qs80044tGz+A5DXGIi+UWfIPlWV9IQjRkRE1cdsWYPApkq7oTFU8IAyNmFAc3iKNkBQLdoO1ybj6/HcjHVG69kzxS2o26fCe90QseN1We5vnsPhi13P5VwSpA6HHHkC86OQnCnZA4/clAbwma6Q/ALmDn9y0A9qgUJCq13HU=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=JF8UIsYV; arc=none smtp.client-ip=209.85.128.47
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="JF8UIsYV"
Received: by mail-wm1-f47.google.com with SMTP id 5b1f17b1804b1-4710653ac03so1515475e9.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:13 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789532; x=1761394332; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=61jDuhX++0mCBZApihfwIySM8ZNRnay0trJ/aGXtPcM=;
        b=JF8UIsYVtFaLoiGmpVFSLqos8AUBeS+MbVHPZpm0bsaGgAfRTgxkIcCyVOPulXM00k
         Lz2AJI4U2/+ayvVJs2NUCWFgYHO5i9TjzXmAdYMplvtW1K9tk6rGMd7LCmfgWGNQLKJp
         7k1iwQIeG/NfuuXeL/habIsYwxQgRRWwW635vOPJ78m5+y8IV343Y5CcG+A/sd0bXBrS
         y081/uPii5JP+qjw9AWwvZn+MakEpfQqTvt2tuwB7f/8mlBo8OR5BLuwB5/Nv9eW9mml
         P1/fedQPfAGZ6Nh0rrKvemUn1jaHTvnJRN0ChDqpMnGko+VEjj+ybqknqEZnB5oZrYo2
         /LBw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789532; x=1761394332;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=61jDuhX++0mCBZApihfwIySM8ZNRnay0trJ/aGXtPcM=;
        b=nUoXO+1U0Vyqi4BblxfMICFkeuDihka70TbbyoTzvTBRph0NZ7TuGoRwNYg6zt60V8
         IvQkTxRNDUhxcDizg2Oq2+mSVWsv8QRNDT4wrXI/HTd4FiMQ7Jkhsy+i8mBtiXCxXJEW
         8JpDEFLWelnx0UE/IT9b4S93bJV6kvQyKIzhE+tJDOwhEv15N+kVoeSCb0xbwQb+x3Q8
         av0bA5eD3G5kX8N1CPyETEm6NWeO+FmKfBSXLJHlb9cOYCnILLbutyvE0+1Zouff0Qiu
         gBhGO5Bk0XFEyA5ww1IOWXue7badjqfYN+lSu5TACUHc5O0t5oO3fvcPPKfzFc9h1Y2X
         jKLw==
X-Forwarded-Encrypted: i=1; AJvYcCXV03LIfV9VwrzReTzTOyyljC9YZuazEZEIWJvAEGW0S4NXHKmb6PJoP5t1zTFN2Cezk07UfRtZ66SXJmc=@vger.kernel.org
X-Gm-Message-State: AOJu0Ywy0KHMB53MjZF8urXSxWtY2i1As2ijg//5yO7yVBO5OxgxlvpX
	TAenI3Er1A3Do/8s73x5MKv1xGlhcO2bGQYnkWZ+5EWGOTbRO68O8c2s
X-Gm-Gg: ASbGncs+FJsOZDCpWALh/Yf4XRH4PwFd3Bi01V8aAcF+FNIkXb5cJRbWjgRARepWHlK
	MCb+4qrVdSuThukZ4rX9bKFpnJDrkMmOsFXzG7Fi0HnlIdhgvFgJ5cG1pHjwn4hAG3FXg/gR/UI
	Ep6xKIBI2kR4VbKt7VtLdK7kfdqk82hk5yuy0xaMH4DX8kXX9RbCcazBsIOhfvUXuJNuCoUXCtt
	Ok9hVmwFxz6ddz+FSXsNlMQ+7R6xiWfB0eS7aWvhxWkyjam8O7697JwK7AYK1szkt97o5aDPDK0
	kX1K9x/Nn3+uQ7VDRwsXaOAz152nv5dS5jZtAfbri/yIEEP9iVsTidTesdGozsuj07EqkVRBdLc
	iNN194DjAa8Y9IwlhGtwDVlW8WzJgNt2c6Rfq5BhY7SvN/PqdX4q+duBV/vq0Rk+lQyvlcsSIUZ
	a8vdKq1SrH8oZI5rhvuRiWBF/kPjnrz4zO3OmiQmAf
X-Google-Smtp-Source: AGHT+IGlMnguu1Red8qhAnT6PJQ1lgcFmM+xa7XuGc93PNnZOuj+hJG6gEn0AGzlcZZjZ5KiraKN+A==
X-Received: by 2002:a05:600c:3515:b0:471:152a:e57d with SMTP id 5b1f17b1804b1-47117914193mr28693965e9.3.1760789532118;
        Sat, 18 Oct 2025 05:12:12 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.10
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:11 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org,
	Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
Subject: [PATCH v7 10/11] dt-bindings: altera: removal of generic PE1 dts
Date: Sat, 18 Oct 2025 12:11:54 +0000
Message-Id: <20251018121155.7743-11-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Remove the binding for the generic Mercury+ AA1 on PE1 carrier board.

The removed Mercury+ AA1 on PE1 carrier board is just a particular
setup case, which is actually replaced by the set of generic Mercury+
AA1 combinations patch.

In other words a combination of a Mercury+ AA1 on a PE1 base board,
with boot mode SD card is already covered by the generic AA1
combinations. There is no further reason to keep this particular case
now in a redundantly. Thus the redundant DT setup is removed.

Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
Acked-by: Krzysztof Kozlowski <krzysztof.kozlowski@linaro.org>
---
 Documentation/devicetree/bindings/arm/altera.yaml | 1 -
 1 file changed, 1 deletion(-)

diff --git a/Documentation/devicetree/bindings/arm/altera.yaml b/Documentation/devicetree/bindings/arm/altera.yaml
index 227665d0016f..db61537b7115 100644
--- a/Documentation/devicetree/bindings/arm/altera.yaml
+++ b/Documentation/devicetree/bindings/arm/altera.yaml
@@ -34,7 +34,6 @@ properties:
               - enclustra,mercury-aa1-pe1
               - enclustra,mercury-aa1-pe3
               - enclustra,mercury-aa1-st1
-              - enclustra,mercury-pe1
               - google,chameleon-v3
           - const: enclustra,mercury-aa1
           - const: altr,socfpga-arria10
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859179.eml"

Received: from mail-wr1-f44.google.com (mail-wr1-f44.google.com [209.85.221.44])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 554152FE59F
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:12:15 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.44
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789539; cv=none; b=afVPmz0jOX6ZuTMuDPltdveQv3ncwEsEAprlL4GYUHFWjliznGVI+UoSITp9wlbbC4QVGOTdZwmmWlUyGvk7cvHLJeh0yg72qzVdKtHUyrSATQn3ahmmL1sOfKFSV2SoRehCSQlftqZiwDvySxQXSMFmNGaRvzFCtuxvM4c6+rw=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789539; c=relaxed/simple;
	bh=g3c67g0JuAQ/MF5TeeywHnKyQWy5NcHxIAatThiSlk0=;
	h=From:To:Cc:Subject:Date:Message-Id:In-Reply-To:References:
	 MIME-Version; b=EGVb6kTUkZ3f0v0A6lEcMMC08NBikPaT1t6qDqkors2cok3AQKLQZkkD06p5rwFT699Qnlo73iR0LmmT9M/SKUDXWeJ8Wrdg3nSX+mVswmfPLoofbONwkbMH5Ow2CQTkz1E3HBvaIq2R+FXi8srJrO7NrLcu4qw2KABZeUf+2Ew=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=mMQ5Xz4T; arc=none smtp.client-ip=209.85.221.44
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="mMQ5Xz4T"
Received: by mail-wr1-f44.google.com with SMTP id ffacd0b85a97d-426f7da0b64so214863f8f.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:12:15 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789534; x=1761394334; darn=vger.kernel.org;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:from:to:cc:subject:date
         :message-id:reply-to;
        bh=X0t4ELZpwdFTZdxiqhNSp7y3ezBf0UkavYUxtLN6k7g=;
        b=mMQ5Xz4Tg13/YXtgSYozYmt/0dGtUOkwJn34nLZBnqSp13P2fdxaiZ6SfmISO/YQhN
         Da75lXbTnJGwVTFzpQFptGCm7h3k12rCkzke0qV+2MaMF6hj6TszX5kQCivkZLUi4Jo3
         0rAx5q8x97U0Yhh452RGQwidAlKQmBLa46ZnMvhRfCvB72BTLvXJHPIj1j+Z5afMIbdb
         KyrhbtRhD80N+O4fEMXFab8ORTjvyiGmByNy/+Dnp6mIKrRvnVagE6PezsWOftGoMhDk
         BY2YzzdaM0PTzr7hR0p6lvxcogWWfiziRLHk6/XIY92+6S8DLU5PooVq8E6OZSK5e95a
         Nd1A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789534; x=1761394334;
        h=content-transfer-encoding:mime-version:references:in-reply-to
         :message-id:date:subject:cc:to:from:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=X0t4ELZpwdFTZdxiqhNSp7y3ezBf0UkavYUxtLN6k7g=;
        b=Cy2l+xYKFiKB/awEk3f+5IJUoImL79CLZDXgIbOYF/I08GpR3aHYr3a97fKOVB6Aod
         fQ+srpa6pOYnt+i7/WAs+4+cOKstC4EluUyag1mJwRNbJ6Rnwc5tZ6Wm3SmyNCMzxiOv
         k+Cp+2bmV0rTAQeS1oGl/zwsbV/5NMD+jbUkgVZuQASl4tZPz8j6ltZpLEHCozEW0nPA
         e2lhNwV95i3oxkj+LGVYilsAWHIKqINYVbluTWBJhabWqJmVfggNqNvKTTUo5fkerF7y
         wgCg8O3qlOhwr4GKbbv9XLUs2rKA7Mm9pfogaD9jItG3AowdHC3zasMqh5gF1qFB89Pu
         eqjw==
X-Forwarded-Encrypted: i=1; AJvYcCWyUYPfg4HzpvnbksHrb4PhSRrGyKzZK8ItHb7XrUZEdKlMOGZVOMhbrZJWLCw4vMQOKPT5QzPutL3r6j0=@vger.kernel.org
X-Gm-Message-State: AOJu0YzlcQ9S+ScyCAoJy6r8VEURaAuIGaBXCZj04JudYC1gsTAP1wTw
	r8oP5T3DunjW+YwLpbZadBHTkjsNs0u2Jj9gg0OhEHkhBH5qgEYiCZt6
X-Gm-Gg: ASbGncvYWTvZM852I5+FVVTCWXsy2Sjlc70NXF0gXiGBRMRYKU4gq2KZJp5hgsTLii0
	sknPTPwJCoxyEhxRel10rUlGlkjBnJZ7nH8mkulHJ5gZna0pflmHddTLU3wfNI+vT6Z/15nXaTC
	DTolKzKtMNf2a39OU9V5PZmiMDv/MaDWZ4IZfoL+aLEbXP+XJ2bN72QUdfDFAHwAcfbh3pH3XrK
	cN2tAM3HdcAPFnuBlw9biFjc3zOlLiSVtxdZRkV8t1gr2B7SWakFn0OI0idzEYiCJvehwMyHyg/
	O8wj7hJVfOSUDek/432OlDgozUOIx+E/ouTAJ4/LpFAJfKX6gPGORU2PTx9Qa6lvwe+7hJsERAe
	96gQqs+79QALYLHnroPn1GjsgzMkVaSzQx3mq3Lx0zlaPDmx1nPO1HE0j/is/1ChC7NNfBPS3oc
	7LPah2H/+lKRWi2nL8SqOXONZMtzyq89ruSvpU0Ks710zE/e5Co9Q=
X-Google-Smtp-Source: AGHT+IHT8xlAGsvrmqTgrtBw+jrSf/dKaLIc5q20nHTcSN9mP4BR9UHnDuW98hA54JyOxHpF9e054A==
X-Received: by 2002:a5d:56d2:0:b0:426:fff3:5d0c with SMTP id ffacd0b85a97d-42704d87f2fmr2247814f8f.1.1760789533368;
        Sat, 18 Oct 2025 05:12:13 -0700 (PDT)
Received: from localhost.localdomain (84-74-0-139.dclient.hispeed.ch. [84.74.0.139])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5a0f19sm4763812f8f.9.2025.10.18.05.12.12
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:12:13 -0700 (PDT)
From: Lothar Rubusch <l.rubusch@gmail.com>
To: robh@kernel.org,
	krzk+dt@kernel.org,
	conor+dt@kernel.org,
	dinguyen@kernel.org,
	martin.petersen@oracle.com,
	pabeni@redhat.com,
	rostedt@goodmis.org,
	bhelgaas@google.com,
	l.rubusch@gmail.com
Cc: arnd@arndb.de,
	matthew.gerlach@altera.com,
	tien.fong.chee@altera.com,
	devicetree@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: [PATCH v7 11/11] ARM: dts: socfpga: add Enclustra SoM dts files
Date: Sat, 18 Oct 2025 12:11:55 +0000
Message-Id: <20251018121155.7743-12-l.rubusch@gmail.com>
X-Mailer: git-send-email 2.39.5
In-Reply-To: <20251018121155.7743-1-l.rubusch@gmail.com>
References: <20251018121155.7743-1-l.rubusch@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 8bit

Add the approach to set up a combination of Enclustra's SoM on a carrier
board and corresponding boot-mode as single device-tree target.

Signed-off-by: Lothar Rubusch <l.rubusch@gmail.com>
---
 arch/arm/boot/dts/intel/socfpga/Makefile      | 24 +++++++++++++++++++
 .../socfpga_arria10_mercury_aa1_pe1_emmc.dts  | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_pe1_qspi.dts  | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_pe1_sdmmc.dts | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_pe3_emmc.dts  | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_pe3_qspi.dts  | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_pe3_sdmmc.dts | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_st1_emmc.dts  | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_st1_qspi.dts  | 16 +++++++++++++
 .../socfpga_arria10_mercury_aa1_st1_sdmmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa1_pe1_emmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa1_pe1_qspi.dts | 16 +++++++++++++
 ...socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa1_pe3_emmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa1_pe3_qspi.dts | 16 +++++++++++++
 ...socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa1_st1_emmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa1_st1_qspi.dts | 16 +++++++++++++
 ...socfpga_cyclone5_mercury_sa1_st1_sdmmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa2_pe1_qspi.dts | 16 +++++++++++++
 ...socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa2_pe3_qspi.dts | 16 +++++++++++++
 ...socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dts | 16 +++++++++++++
 .../socfpga_cyclone5_mercury_sa2_st1_qspi.dts | 16 +++++++++++++
 ...socfpga_cyclone5_mercury_sa2_st1_sdmmc.dts | 16 +++++++++++++
 25 files changed, 408 insertions(+)
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_emmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_qspi.dts
 create mode 100644 arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_sdmmc.dts

diff --git a/arch/arm/boot/dts/intel/socfpga/Makefile b/arch/arm/boot/dts/intel/socfpga/Makefile
index 73a912ec6d95..8df0976da01c 100644
--- a/arch/arm/boot/dts/intel/socfpga/Makefile
+++ b/arch/arm/boot/dts/intel/socfpga/Makefile
@@ -2,6 +2,30 @@
 dtb-$(CONFIG_ARCH_INTEL_SOCFPGA) += \
 	socfpga_arria5_socdk.dtb \
 	socfpga_arria10_chameleonv3.dtb \
+	socfpga_arria10_mercury_aa1_pe1_emmc.dtb \
+	socfpga_arria10_mercury_aa1_pe1_qspi.dtb \
+	socfpga_arria10_mercury_aa1_pe1_sdmmc.dtb \
+	socfpga_arria10_mercury_aa1_pe3_emmc.dtb \
+	socfpga_arria10_mercury_aa1_pe3_qspi.dtb \
+	socfpga_arria10_mercury_aa1_pe3_sdmmc.dtb \
+	socfpga_arria10_mercury_aa1_st1_emmc.dtb \
+	socfpga_arria10_mercury_aa1_st1_qspi.dtb \
+	socfpga_arria10_mercury_aa1_st1_sdmmc.dtb \
+	socfpga_cyclone5_mercury_sa1_pe1_emmc.dtb \
+	socfpga_cyclone5_mercury_sa1_pe1_qspi.dtb \
+	socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dtb \
+	socfpga_cyclone5_mercury_sa1_pe3_emmc.dtb \
+	socfpga_cyclone5_mercury_sa1_pe3_qspi.dtb \
+	socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dtb \
+	socfpga_cyclone5_mercury_sa1_st1_emmc.dtb \
+	socfpga_cyclone5_mercury_sa1_st1_qspi.dtb \
+	socfpga_cyclone5_mercury_sa1_st1_sdmmc.dtb \
+	socfpga_cyclone5_mercury_sa2_pe1_qspi.dtb \
+	socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dtb \
+	socfpga_cyclone5_mercury_sa2_pe3_qspi.dtb \
+	socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dtb \
+	socfpga_cyclone5_mercury_sa2_st1_qspi.dtb \
+	socfpga_cyclone5_mercury_sa2_st1_sdmmc.dtb \
 	socfpga_arria10_socdk_nand.dtb \
 	socfpga_arria10_socdk_qspi.dtb \
 	socfpga_arria10_socdk_sdmmc.dtb \
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_emmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_emmc.dts
new file mode 100644
index 000000000000..b6cca0b5fd09
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_emmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_emmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-sa1-pe1", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_qspi.dts
new file mode 100644
index 000000000000..6ad023477cd2
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-aa1-pe1", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_sdmmc.dts
new file mode 100644
index 000000000000..653c9a86516b
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe1_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-aa1-pe1", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_emmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_emmc.dts
new file mode 100644
index 000000000000..ae9c7c6a2370
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_emmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_emmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-aa1-pe3", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_qspi.dts
new file mode 100644
index 000000000000..c3a0c30a07a5
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-aa1-pe3", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_sdmmc.dts
new file mode 100644
index 000000000000..dc1e1ad20381
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_pe3_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-aa1-pe3", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_emmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_emmc.dts
new file mode 100644
index 000000000000..61d5e4c85d9b
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_emmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_emmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-aa1-st1", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_qspi.dts
new file mode 100644
index 000000000000..a3b99c9b16fd
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-aa1-st1", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_sdmmc.dts
new file mode 100644
index 000000000000..5deb289e2b55
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_arria10_mercury_aa1_st1_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_arria10_mercury_aa1.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ AA1 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-aa1-st1", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_emmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_emmc.dts
new file mode 100644
index 000000000000..85d6146da0da
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_emmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_emmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-sa1-pe1", "enclustra,mercury-aa1",
+		     "altr,socfpga-arria10", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_qspi.dts
new file mode 100644
index 000000000000..770ab680a18c
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-sa1-pe1", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dts
new file mode 100644
index 000000000000..990ca0fec61e
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe1_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-sa1-pe1", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_emmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_emmc.dts
new file mode 100644
index 000000000000..6c8fd5b0d6eb
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_emmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_emmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-sa1-pe3", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_qspi.dts
new file mode 100644
index 000000000000..3292426078a1
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-sa1-pe3", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dts
new file mode 100644
index 000000000000..1eb10b5244dd
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_pe3_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-sa1-pe3", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_emmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_emmc.dts
new file mode 100644
index 000000000000..8c97b5b3adea
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_emmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_emmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-sa1-st1", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_qspi.dts
new file mode 100644
index 000000000000..e6d14b22e41d
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-sa1-st1", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_sdmmc.dts
new file mode 100644
index 000000000000..beaeca94d4df
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa1_st1_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa1.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury SA1 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-sa1-st1", "enclustra,mercury-sa1",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_qspi.dts
new file mode 100644
index 000000000000..6f79d9ed1d36
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa2.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ SA2 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-sa2-pe1", "enclustra,mercury-sa2",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dts
new file mode 100644
index 000000000000..b94bd8bafc26
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe1_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa2.dtsi"
+#include "socfpga_enclustra_mercury_pe1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ SA2 on Mercury+ PE1 Base Board";
+	compatible = "enclustra,mercury-sa2-pe1", "enclustra,mercury-sa2",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_qspi.dts
new file mode 100644
index 000000000000..51fc4a22937a
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa2.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ SA2 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-sa2-pe3", "enclustra,mercury-sa2",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dts
new file mode 100644
index 000000000000..e4209209f4fa
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_pe3_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa2.dtsi"
+#include "socfpga_enclustra_mercury_pe3.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ SA2 on Mercury+ PE3 Base Board";
+	compatible = "enclustra,mercury-sa2-pe3", "enclustra,mercury-sa2",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_qspi.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_qspi.dts
new file mode 100644
index 000000000000..ab4549a0d455
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_qspi.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa2.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_qspi.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ SA2 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-sa2-st1", "enclustra,mercury-sa2",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
diff --git a/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_sdmmc.dts b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_sdmmc.dts
new file mode 100644
index 000000000000..ebe62879c3fb
--- /dev/null
+++ b/arch/arm/boot/dts/intel/socfpga/socfpga_cyclone5_mercury_sa2_st1_sdmmc.dts
@@ -0,0 +1,16 @@
+// SPDX-License-Identifier: GPL-2.0+ OR MIT
+/*
+ * Copyright (C) 2024 Enclustra GmbH - https://www.enclustra.com
+ */
+
+/dts-v1/;
+
+#include "socfpga_cyclone5_mercury_sa2.dtsi"
+#include "socfpga_enclustra_mercury_st1.dtsi"
+#include "socfpga_enclustra_mercury_bootmode_sdmmc.dtsi"
+
+/ {
+	model = "Enclustra Mercury+ SA2 on Mercury+ ST1 Base Board";
+	compatible = "enclustra,mercury-sa2-st1", "enclustra,mercury-sa2",
+		     "altr,socfpga-cyclone5", "altr,socfpga";
+};
-- 
2.39.5


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859180.eml"

Received: from mail-ej1-f54.google.com (mail-ej1-f54.google.com [209.85.218.54])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 361E2267B01
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:14:51 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.218.54
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789692; cv=none; b=rx7tdqT/RwhztJzeFfAnQFS8LvRqEwb+0+zesw4UUcD6MsfXFJTTkGsXTKn4WeX2WRlVioFoxR+FYDKts0Gt1KkvuT5g8Ua6SAWxNdsQYu3s/Ncyfm0XCx/4fhCc5QPCW3NOz9X98qiCQ+zzng57PlTg1Fxi8u0Ae23YSe3tSko=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789692; c=relaxed/simple;
	bh=v5ZqyUW81gjLtw5Tcc247E43kXDcQo/vTO4xzVLiZns=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=EU6hurz1V/ew6y2WQUqzudHEwOgjzpZRUJl74zsijAYgYGyktodRq33fKyi/GlhpzzSp23mxR9qekodcsnyW+9OJyZqzwoYAHA2whdqQgj6u8IWm4OTiaoxa3eVb2afqEh4FngufOr+PhC3SB3q+xJORNT/ZMTF5ke90G9BxfOg=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=G1A4IKeS; arc=none smtp.client-ip=209.85.218.54
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="G1A4IKeS"
Received: by mail-ej1-f54.google.com with SMTP id a640c23a62f3a-b3ee18913c0so507681266b.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:14:51 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760789689; x=1761394489; darn=vger.kernel.org;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :from:to:cc:subject:date:message-id:reply-to;
        bh=ufOkjl+qPiRtshghurKtqky4g5561TsZhHIpMFstA/A=;
        b=G1A4IKeStuEQKi8/JE8ylVr55WBy9IMme8wTiJWZIe7u1HIGxw3q42jQQN6nXmnd2b
         +h+cwy8yB72gPovDxEKRo6qgWs4mgSJHFe1iBSnyQRtifm7e+y8kl8pAom0YkB8hAzQ6
         A5GqvnXT67THMwOtP/i1wEdzU9ftl7h3U6AWIERb5uHo3+7mpFeJchRdoVJaXLvK6ojD
         ivkmOz24fKXOcRzINuvFXdIQOCcuHcGV+m7ce0zooMkjdGssOceDWuU7kJ/lGrO0nC7Q
         Er8JjAj+cvt8srxHCWYZA/npXIPaFGUOxu4ApOjjKzxZfXPDt1uYtK66FC78EjR6cLg4
         P+FA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760789689; x=1761394489;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=ufOkjl+qPiRtshghurKtqky4g5561TsZhHIpMFstA/A=;
        b=DtVvnZtY4mCTIUQpHWgoO2ZSRck2m90HXOTOQ/6mkK7cYcg07YtagLydcxokJSqJZc
         iRfMn23PD334AReLKtOqv6h7rriy9NO8Qt8CxfbhX4x4gCzsQSEoYNGdRYjzP06HRjvJ
         m9ZUlfvWVKY+Qp1e2QC4CSbhVrrN8YW0uusniXNppGmT+892xcGh3KPO1ON7pSZChEjb
         m+lto/9r1e7o6UVRjVt38/Guea9bawWO/8tfOziwfVlfkQFE9bIkWMVEj74sG3Dv2dRt
         Zm00kAZMjfxkn5NaeM7mZp9+rS5Jf18qpwGMLLVGENWLTfvUSMTL5Um+hIfTYgW474oN
         5t2A==
X-Forwarded-Encrypted: i=1; AJvYcCUm5XIfWmJZDEZ+xmUvkjBDWl3drl9aa02AVcV2Azj5kX+gTcf3dnEYqnpNtQUPBBCsTaK5wQkVISMzsns=@vger.kernel.org
X-Gm-Message-State: AOJu0Yz60qEhXVj2oGHaL4rBZ5o+zIbsA1R+aWth0Le4o21zImaL4lL5
	/S1U7CEDggLslhviDs7R4Tz+h5gvZDhg/qz+dPsLaDiXTrM+PTisLf+t
X-Gm-Gg: ASbGnctGNBg9Wj3Y50pcZynVOAoQKZxVLljfdEV2elf4v7YNZsYcN0skuvG5igVAHPK
	pfNkKMays1nlno7hy4Ue5rQ4cQHW2eHjcCH1KMUMsTbwKMIKxYizdKtmpC0FEKe4HT20UMe2fth
	onWYd28zaFmDfJJMkrhqGGYRVbTH4EcP9E9ePI6Iunx3pm528c2yjanxfTxDYVGcykuD2FcnJVG
	aWNEKwQLC9+Wqr13Z01NVFSlTEH7sF+Ih3RUomK958hH/ONUdN9WeYcVeajn6QJFn9E2kg/hVuq
	90Cg3wgnVf+mqcKcqZnM+1mS4CTP4AaoalGilyxXQsJPOq3sgLro2DLDEevMGZjOQXkqCxvtTj4
	S39zPgyKZ/3T1uR8WJ6qx0aJLuq4AJZgTfgR9hUBRXyhaupnElUGH6xz27EmSOFXJ/++B6nrQr9
	R1lzGfQJ0ooFEjtXQDEbziKrcBtdLW+SAkxWKwHoSylQYrjt6gklN8yo8QGRajX5lm77l90pl3c
	ANMEOEcEf5V
X-Google-Smtp-Source: AGHT+IGBPsSaJcR0ev47Hb3xPBn0QIJdrD4FfY6KddrSOXRmNh4o7RZCBMe0k/WnE7eQQbehnrN6qA==
X-Received: by 2002:a17:907:2685:b0:b45:60ad:daf9 with SMTP id a640c23a62f3a-b647254f6bdmr770989466b.3.1760789689192;
        Sat, 18 Oct 2025 05:14:49 -0700 (PDT)
Received: from ?IPV6:2a02:8010:6606:0:8c72:1dd5:7473:88ff? ([2a02:8010:6606:0:8c72:1dd5:7473:88ff])
        by smtp.gmail.com with ESMTPSA id a640c23a62f3a-b65ebc42963sm223334266b.77.2025.10.18.05.14.47
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Sat, 18 Oct 2025 05:14:48 -0700 (PDT)
Message-ID: <b22425c3-01e0-4d2e-bf78-5db884d4ec38@gmail.com>
Date: Sat, 18 Oct 2025 13:14:46 +0100
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH] arm64: dts: rockchip: fix eMMC corruption on NanoPC-T6
 with A3A444 chips
To: Dragan Simic <dsimic@manjaro.org>, Jimmy Hon <honyuenkwun@gmail.com>
Cc: Tianling Shen <cnsztl@gmail.com>, Rob Herring <robh@kernel.org>,
 Krzysztof Kozlowski <krzk+dt@kernel.org>, Conor Dooley
 <conor+dt@kernel.org>, Heiko Stuebner <heiko@sntech.de>,
 Grzegorz Sterniczuk <grzegorz@sternicz.uk>, Jonas Karlman <jonas@kwiboo.se>,
 devicetree@vger.kernel.org, linux-arm-kernel@lists.infradead.org,
 linux-rockchip@lists.infradead.org, linux-kernel@vger.kernel.org
References: <20251017073954.130710-1-cnsztl@gmail.com>
 <7f0b1747-87eb-0b0b-6fb0-304811a4be21@manjaro.org>
 <d9d14ce2-2e65-422e-95fb-eb30b128ad90@gmail.com>
 <41154cde-a447-0707-4387-cd3dca90b97d@manjaro.org>
 <CALWfF7K0=J3E-zr41wV-28+SCFkT_so55Aee8BvQsB4KJZy6YQ@mail.gmail.com>
 <47931e9e-09db-3909-4531-dae6869171d7@manjaro.org>
Content-Language: en-GB
From: Hugh Cole-Baker <sigmaris@gmail.com>
In-Reply-To: <47931e9e-09db-3909-4531-dae6869171d7@manjaro.org>
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Hi Dragan,

On 18/10/2025 09:30, Dragan Simic wrote:
> Hello Jimmy,
> 
> On Saturday, October 18, 2025 02:42 CEST, Jimmy Hon <honyuenkwun@gmail.com> wrote:
>> On Fri, Oct 17, 2025 at 10:15â¯AM Dragan Simic <dsimic@manjaro.org> wrote:
>>> On Friday, October 17, 2025 14:08 CEST, Tianling Shen <cnsztl@gmail.com> wrote:
>>>> On 2025/10/17 18:25, Dragan Simic wrote:
>>>>> On Friday, October 17, 2025 09:39 CEST, Tianling Shen <cnsztl@gmail.com> wrote:
>>>>>> From: Grzegorz Sterniczuk <grzegorz@sternicz.uk>
>>>>>>
>>>>>> Some NanoPC-T6 boards with A3A444 eMMC chips experience I/O errors and
>>>>>> corruption when using HS400 mode. Downgrade to HS200 mode to ensure
>>>>>> stable operation.
>>>>>
>>>>> Could you, please, provide more details about the troublesome eMMC
>>>>> chip that gets identified as A3A444, i.e. what's the actual brand
>>>>> and model?  Maybe you could send a picture of it?  It might also
>>>>> help if you'd send the contents of "/sys/class/block/mmcblkX/device
>>>>> /manfid" from your board (where "X" should equal two).
>>>>
>>>> Unfortunately I don't have this board nor this eMMC chip.
>>>> I got the chip model from my friend, it's FORESEE FEMDNN256G-A3A44,
>>>> manfid is 0x0000d6.
>>>
>>> Thanks for responding and providing the details so quickly!
>>>
>>>>> I'm asking for that because I'd like to research it a bit further,
>>>>> if possible, because some other eMMC chips that are also found on
>>>>> the NanoPc-T6 seem to work fine in HS400 mode. [1]  It may be that
>>>>> the A3A444 chip has some issues with the HS400 mode on its own,
>>>>> i.e. the observed issues may not be caused by the board.
>>>>
>>>> Yes, it should be caused by this eMMC chip.
>>>
>>> I'd suggest that we move forward by "quirking off" the HS400 mode
>>> for the FEMDNN256G-A3A44 eMMC chip in the MMC drivers, instead of
>>> downgrading the speed of the sdhci interface on the NanoPC-T6.
>>>
>>> That way, the other similar Foresee eMMC chip that's also found
>>> on NanoPC-T6 boards, FEMDNN256G-A3A564, will continue to work in
>>> the faster HS400 mode, while the troublesome A3A44 variant will
>>> be downgraded to the HS200 globally for everyone's benefit.  It's
>>> quite unlikely that the A3A44 variant fails to work reliable in
>>> HS400 mode on the NanoPC-T6 only, so quirking it off in the MMC
>>> drivers should be a sane and safe choice.
>>>
>>> If you agree with dropping this patch, I'll be more than happy
>>> to implement this HS200 quirk in the MMC drivers.
>>>
>>> As a note, FEMDNN256G-A3A44 is found in the Rockchip Qualified
>>> eMMC Support List v1.84, [2] but the evidence says the opposite,
>>> so we should react appropriately by adding this quirk.
>>
>> When adding the quirk for the A3A44, can we lower the max frequency
>> and keep the HS400 mode instead?
>> That's what the Fedora folks found works [3]. There's more test
>> results in Armbian [4]
> 
> Are there any I/O performance tests that would prove that lowering
> the HS400 frequency to 150 MHz ends up working significantly faster
> than dropping the eMMC chip to HS200 mode?
> 
> I'm asking that because lowering the frequency looks much more like
> there's some issue with the board, rather than the issue being the
> eMMC chip's support for HS400 mode.  Thus, a quirk that would lower
> the HS400 mode frequency would likely be frowned upon and rejected,
> while a quirk that puts the chip into HS200 mode is much cleaner
> and has much higher chances to be accepted.

I also have the NanoPC-T6 with one of the A3A444 eMMCs which suffers
from I/O errors in the default HS400 mode. These are its details in
/sys/block/mmcblk0/device/:
manfid: 0x0000d6
oemid: 0x0103
name: A3A444
fwrev: 0x1100000000000000
hwrev: 0x0
rev: 0x8

I wasn't sure if I was just unlucky to get a faulty chip, but seeing
this thread it seems like a wider issue. On my board, limiting it to
HS200 mode gets rid of the I/O errors, and it seems that lowering
the frequency to 150MHz also avoids I/O errors.

I did a quick unscientific test with fio; HS400 Enhanced Strobe mode
with a 150MHz clock gives slightly better performance than HS200:

HS200 mode:
read: IOPS=697, BW=43.6MiB/s
write: IOPS=697, BW=43.6MiB/s

HS400 mode with 150MHz clock:
read: IOPS=805, BW=50.3MiB/s
write: IOPS=799, BW=50.0MiB/s

so from my perspective, limiting the frequency would be a better fix
than disabling HS400 entirely.

It could also be of interest that the clock used apparently can't
provide an exact 200MHz, e.g. in HS200 mode:

root@t6:~# cat /sys/kernel/debug/mmc0/ios
clock:		200000000 Hz
actual clock:	187500000 Hz
vdd:		18 (3.0 ~ 3.1 V)
bus mode:	2 (push-pull)
chip select:	0 (don't care)
power mode:	2 (on)
bus width:	3 (8 bits)
timing spec:	9 (mmc HS200)
signal voltage:	1 (1.80 V)
driver type:	0 (driver type B)

> With all that in mind, if the resulting I/O performance difference
> between 150 MHz HS400 and HS200 is within 15-20% or so, I'd highly
> recommend that we still go with the HS200 quirk.  It also leaves
> us with a nice safety margin, which is always good to have when
> such hardware instability issues are worked around in software,
> unless detailed eye diagrams, protocol dumps and whatnot can be
> pulled and analyzed, in which case the resulting safety margin
> can be much slimmer.
> 
> Ideally, we'd have a completely different board with the same
> Foresee FEMDNN256G-A3A44 eMMC chip to test how reliably its HS400
> mode works there, to see is it really up to this eMMC chip or up
> to the board design, but I'm afraid we don't have that (easily)
> available, so the only remaining option is to work with what's
> actually available, which inevitably leads to a certain amount
> of guesswork and some compromises.
> 
>>> [1] https://github.com/openwrt/openwrt/issues/18844
>>> [2] https://dl.radxa.com/rock5/hw/RKeMMCSupportList%20Ver1.84_20240815.pdf
>> [3] https://lists.fedoraproject.org/archives/list/kernel@lists.fedoraproject.org/thread/MCSDYDQVOXS5AZMKA7LLY4QX7JXBWPCA/
>> [4] https://github.com/armbian/build/pull/8736#issuecomment-3387760536

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859181.eml"

Received: from mgamail.intel.com (mgamail.intel.com [192.198.163.11])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 3E09B42065;
	Sat, 18 Oct 2025 12:17:21 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=192.198.163.11
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789842; cv=none; b=K2J6bGpg7gf2PnBuPx9qjFjhijqPBmKKE3lV9GTfWu0iZF8idvbexUiHEz6dcCzhZgut8AY5oUbmteT0IgMGh5+9rj/rfn9S+IHlntkpMYLuNNHBRCrjzng/JeCHGdHZgJwntB+MmkrXBeHibFvojT4+s4gSavK0nLP0H+T6AMg=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789842; c=relaxed/simple;
	bh=NVgGAPwwrLSCwbHx+kIcEztaGnNRLWNphzvMd9GtKb4=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=QMwXh8wpY+iSs7uVpjskDJkz0TXi3ZAl5LY4lcJea85a2tOghiGjCmPwdLpADeOD5p2bft0Ph/h4Fowx0Qp6a3A+XtSXcOEzNrqi1PgOkjmJ2r+6z1JOIcxoOvdw9C1TOA+nMmyldh29HQ0SOXdvWXTtihdRkuMHUGUsxwd/9sw=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com; spf=pass smtp.mailfrom=intel.com; dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b=EsBoq2FC; arc=none smtp.client-ip=192.198.163.11
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=intel.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=intel.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=intel.com header.i=@intel.com header.b="EsBoq2FC"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple;
  d=intel.com; i=@intel.com; q=dns/txt; s=Intel;
  t=1760789841; x=1792325841;
  h=date:from:to:cc:subject:message-id:references:
   mime-version:in-reply-to;
  bh=NVgGAPwwrLSCwbHx+kIcEztaGnNRLWNphzvMd9GtKb4=;
  b=EsBoq2FCNNWf4NbWJC2fTHdjPA1KmmbioRKD/Cvn07AzB2U+TUyMyuyQ
   4w2t+MdBLhoKLWJCDWqVIdTKr/dKr8EykXACyXMC9Kpj6X4k4dWOtaj+C
   pDAwLfhfHaXoIS4Fa8ROJnXhvL7mhiypRsHCnyPc95MoEotZG/qhOUn/C
   +fOxn+EP4BlLfnFy8FfyW/IiYi3X27cZpHfg1WEjYRkNjK/8GZSw7nVzu
   YaR1tLc4XI1mt0cV2E5l4POAbwzVbDj2siM0AFFlm5R1G8jw6DluVgTQ1
   NL6dxPuKdB6mbWUEAcf1HqvgeO5O64Edb4Zo3NU3mgGz0cmID1TmzPQlX
   w==;
X-CSE-ConnectionGUID: DGVCFJP7RqSJl1CoBmf1HQ==
X-CSE-MsgGUID: NpRGHkLOSVOPcvfIFS771g==
X-IronPort-AV: E=McAfee;i="6800,10657,11585"; a="73589141"
X-IronPort-AV: E=Sophos;i="6.19,238,1754982000"; 
   d="scan'208";a="73589141"
Received: from fmviesa004.fm.intel.com ([10.60.135.144])
  by fmvoesa105.fm.intel.com with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 18 Oct 2025 05:17:20 -0700
X-CSE-ConnectionGUID: 7pe2GAzGR+qZ0MPAOZtUHA==
X-CSE-MsgGUID: 9nY2xmu0SZWwn7mBDZKc5A==
X-ExtLoop1: 1
X-IronPort-AV: E=Sophos;i="6.19,238,1754982000"; 
   d="scan'208";a="188253747"
Received: from lkp-server02.sh.intel.com (HELO 66d7546c76b2) ([10.239.97.151])
  by fmviesa004.fm.intel.com with ESMTP; 18 Oct 2025 05:17:18 -0700
Received: from kbuild by 66d7546c76b2 with local (Exim 4.96)
	(envelope-from <lkp@intel.com>)
	id 1vA5rZ-0008Gv-2C;
	Sat, 18 Oct 2025 12:16:49 +0000
Date: Sat, 18 Oct 2025 20:16:08 +0800
From: kernel test robot <lkp@intel.com>
To: "Masami Hiramatsu (Google)" <mhiramat@kernel.org>,
	Steven Rostedt <rostedt@goodmis.org>
Cc: oe-kbuild-all@lists.linux.dev, Masami Hiramatsu <mhiramat@kernel.org>,
	Mark Rutland <mark.rutland@arm.com>,
	Mathieu Desnoyers <mathieu.desnoyers@efficios.com>,
	linux-kernel@vger.kernel.org, linux-trace-kernel@vger.kernel.org
Subject: Re: [PATCH v4 2/2] tracing: Add an option to show symbols in
 _text+offset for function profiler
Message-ID: <202510181934.DYd8mdHX-lkp@intel.com>
References: <176071775059.175601.3827350589430991963.stgit@devnote2>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <176071775059.175601.3827350589430991963.stgit@devnote2>

Hi Masami,

kernel test robot noticed the following build errors:

[auto build test ERROR on trace/for-next]
[also build test ERROR on linus/master v6.18-rc1 next-20251017]
[If your patch is applied to the wrong git tree, kindly drop us a note.
And when submitting patch, we suggest to use '--base' as documented in
https://git-scm.com/docs/git-format-patch#_base_tree_information]

url:    https://github.com/intel-lab-lkp/linux/commits/Masami-Hiramatsu-Google/tracing-Allow-tracer-to-add-more-than-32-options/20251018-004104
base:   https://git.kernel.org/pub/scm/linux/kernel/git/trace/linux-trace for-next
patch link:    https://lore.kernel.org/r/176071775059.175601.3827350589430991963.stgit%40devnote2
patch subject: [PATCH v4 2/2] tracing: Add an option to show symbols in _text+offset for function profiler
config: x86_64-rhel-9.4 (https://download.01.org/0day-ci/archive/20251018/202510181934.DYd8mdHX-lkp@intel.com/config)
compiler: gcc-14 (Debian 14.2.0-19) 14.2.0
reproduce (this is a W=1 build): (https://download.01.org/0day-ci/archive/20251018/202510181934.DYd8mdHX-lkp@intel.com/reproduce)

If you fix the issue in a separate patch/commit (i.e. not just a new version of
the same patch/commit), kindly add following tags
| Reported-by: kernel test robot <lkp@intel.com>
| Closes: https://lore.kernel.org/oe-kbuild-all/202510181934.DYd8mdHX-lkp@intel.com/

All errors (new ones prefixed by >>):

   In file included from kernel/trace/trace_output.h:6,
                    from kernel/trace/ftrace.c:45:
>> kernel/trace/trace.h:1434:34: error: enumerator value outside the range of underlying type
    1434 | #define C(a, b) TRACE_ITER_##a = (1 << TRACE_ITER_##a##_BIT)
         |                                  ^
   kernel/trace/trace.h:1369:17: note: in expansion of macro 'C'
    1369 |                 C(PROF_TEXT_OFFSET,     "prof-text-offset"),
         |                 ^
   kernel/trace/trace.h:1414:17: note: in expansion of macro 'PROFILER_FLAGS'
    1414 |                 PROFILER_FLAGS
         |                 ^~~~~~~~~~~~~~
   kernel/trace/trace.h:1436:40: note: in expansion of macro 'TRACE_FLAGS'
    1436 | enum trace_iterator_flags : uint64_t { TRACE_FLAGS };
         |                                        ^~~~~~~~~~~
--
   In file included from kernel/trace/trace_probe.h:31,
                    from kernel/trace/bpf_trace.c:35:
>> kernel/trace/trace.h:1434:34: error: enumerator value outside the range of underlying type
    1434 | #define C(a, b) TRACE_ITER_##a = (1 << TRACE_ITER_##a##_BIT)
         |                                  ^
   kernel/trace/trace.h:1369:17: note: in expansion of macro 'C'
    1369 |                 C(PROF_TEXT_OFFSET,     "prof-text-offset"),
         |                 ^
   kernel/trace/trace.h:1414:17: note: in expansion of macro 'PROFILER_FLAGS'
    1414 |                 PROFILER_FLAGS
         |                 ^~~~~~~~~~~~~~
   kernel/trace/trace.h:1436:40: note: in expansion of macro 'TRACE_FLAGS'
    1436 | enum trace_iterator_flags : uint64_t { TRACE_FLAGS };
         |                                        ^~~~~~~~~~~
   kernel/trace/bpf_trace.c: In function '____bpf_trace_printk':
   kernel/trace/bpf_trace.c:378:9: warning: function '____bpf_trace_printk' might be a candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]
     378 |         ret = bstr_printf(data.buf, MAX_BPRINTF_BUF, fmt, data.bin_args);
         |         ^~~
   kernel/trace/bpf_trace.c: In function '____bpf_trace_vprintk':
   kernel/trace/bpf_trace.c:434:9: warning: function '____bpf_trace_vprintk' might be a candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]
     434 |         ret = bstr_printf(data.buf, MAX_BPRINTF_BUF, fmt, data.bin_args);
         |         ^~~
   kernel/trace/bpf_trace.c: In function '____bpf_seq_printf':
   kernel/trace/bpf_trace.c:476:9: warning: function '____bpf_seq_printf' might be a candidate for 'gnu_printf' format attribute [-Wsuggest-attribute=format]
     476 |         seq_bprintf(m, fmt, data.bin_args);
         |         ^~~~~~~~~~~
--
   In file included from kernel/trace/rv/rv.h:9,
                    from kernel/trace/rv/rv.c:151:
>> kernel/trace/rv/../trace.h:1434:34: error: enumerator value outside the range of underlying type
    1434 | #define C(a, b) TRACE_ITER_##a = (1 << TRACE_ITER_##a##_BIT)
         |                                  ^
   kernel/trace/rv/../trace.h:1369:17: note: in expansion of macro 'C'
    1369 |                 C(PROF_TEXT_OFFSET,     "prof-text-offset"),
         |                 ^
   kernel/trace/rv/../trace.h:1414:17: note: in expansion of macro 'PROFILER_FLAGS'
    1414 |                 PROFILER_FLAGS
         |                 ^~~~~~~~~~~~~~
   kernel/trace/rv/../trace.h:1436:40: note: in expansion of macro 'TRACE_FLAGS'
    1436 | enum trace_iterator_flags : uint64_t { TRACE_FLAGS };
         |                                        ^~~~~~~~~~~


vim +1434 kernel/trace/trace.h

a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29  1428) 
a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29  1429) /*
a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29  1430)  * By redefining C, we can make TRACE_FLAGS a list of masks that
a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29  1431)  * use the bits as defined above.
a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29  1432)  */
a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29  1433) #undef C
a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29 @1434) #define C(a, b) TRACE_ITER_##a = (1 << TRACE_ITER_##a##_BIT)
a3418a364ec3c8 Steven Rostedt (Red Hat  2015-09-29  1435) 

-- 
0-DAY CI Kernel Test Service
https://github.com/intel/lkp-tests/wiki

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859182.eml"

Received: from us-smtp-delivery-124.mimecast.com (us-smtp-delivery-124.mimecast.com [170.10.133.124])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 4E0D926D4CD
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:17:43 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=170.10.133.124
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760789864; cv=none; b=Y/IY7j0ObKVImBTVismrwXyDifVraK4gH7u6BW2ioV0uff4JOvD5mo6RbOWSGuGymA0RDXLsxHk92Vu9ZKPVgooU1L2aY0L0DyVDRtNtbkdPElSpytMTznmeVY/JAH1Tnuh2vHzKfaOHYK/T5EZl32KQSonV0ugeWh+RQhYNGrM=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760789864; c=relaxed/simple;
	bh=gGt73CVvuv5BT7hEaNbmyxUbjAu15wTDGJLTO48O5vg=;
	h=From:In-Reply-To:References:To:Cc:Subject:MIME-Version:
	 Content-Type:Date:Message-ID; b=nXGdBzKid4tkA7BXa/tif//+ntGNXnU5nmYfOebGQMo3MyTOp2veboDQYHdel1y7EzS0hSCPix9eNqGilLUDY+o7aED318UTtBxk+gG3kKIlKAh69xbREuj78v6ChokQzm9R1PFlsTaQ7G4S/nLE/rJhAcRg9RwxKj1Klfh6TJU=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=redhat.com; spf=pass smtp.mailfrom=redhat.com; dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com header.b=Ti9sBBQZ; arc=none smtp.client-ip=170.10.133.124
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=quarantine dis=none) header.from=redhat.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=redhat.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (1024-bit key) header.d=redhat.com header.i=@redhat.com header.b="Ti9sBBQZ"
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=redhat.com;
	s=mimecast20190719; t=1760789862;
	h=from:from:reply-to:subject:subject:date:date:message-id:message-id:
	 to:to:cc:cc:mime-version:mime-version:content-type:content-type:
	 content-transfer-encoding:content-transfer-encoding:
	 in-reply-to:in-reply-to:references:references;
	bh=OlH8cS7HLtTecR83sZbVKnOJnUxVHiktjAnu92Jotug=;
	b=Ti9sBBQZDYQnbzqlE/KYKPPFWyXHuzS2VAyf8EQZlxhwpxGQyAr/po2q0rxtemK56s12ns
	VxeiCWyfWH3pZB7sefgiBNNcjHGvergrtZsZcRGa2BqdDi0opuEW0F0AtMzEtiAmv8IKvj
	hRpEnN+TUuv0c1EuteCMPZR0ov5Dd9s=
Received: from mx-prod-mc-05.mail-002.prod.us-west-2.aws.redhat.com
 (ec2-54-186-198-63.us-west-2.compute.amazonaws.com [54.186.198.63]) by
 relay.mimecast.com with ESMTP with STARTTLS (version=TLSv1.3,
 cipher=TLS_AES_256_GCM_SHA384) id us-mta-10-g8kbWojGPBKO4eyAIDi7jg-1; Sat,
 18 Oct 2025 08:17:36 -0400
X-MC-Unique: g8kbWojGPBKO4eyAIDi7jg-1
X-Mimecast-MFC-AGG-ID: g8kbWojGPBKO4eyAIDi7jg_1760789854
Received: from mx-prod-int-06.mail-002.prod.us-west-2.aws.redhat.com (mx-prod-int-06.mail-002.prod.us-west-2.aws.redhat.com [10.30.177.93])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
	 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	by mx-prod-mc-05.mail-002.prod.us-west-2.aws.redhat.com (Postfix) with ESMTPS id 3C2D8195608A;
	Sat, 18 Oct 2025 12:17:33 +0000 (UTC)
Received: from warthog.procyon.org.uk (unknown [10.42.28.57])
	by mx-prod-int-06.mail-002.prod.us-west-2.aws.redhat.com (Postfix) with ESMTP id CD5F51800353;
	Sat, 18 Oct 2025 12:17:27 +0000 (UTC)
Organization: Red Hat UK Ltd. Registered Address: Red Hat UK Ltd, Amberley
	Place, 107-111 Peascod Street, Windsor, Berkshire, SI4 1TE, United
	Kingdom.
	Registered in England and Wales under Company Registration No. 3798903
From: David Howells <dhowells@redhat.com>
In-Reply-To: <395b82fc-728b-45da-afa8-c4ac8b625a45@csgroup.eu>
References: <395b82fc-728b-45da-afa8-c4ac8b625a45@csgroup.eu> <20251017144311.817771-1-dhowells@redhat.com> <20251017144311.817771-2-dhowells@redhat.com>
To: Christophe Leroy <christophe.leroy@csgroup.eu>
Cc: dhowells@redhat.com, Eric Biggers <ebiggers@kernel.org>,
    "Jason A . Donenfeld" <Jason@zx2c4.com>,
    Ard Biesheuvel <ardb@kernel.org>,
    Herbert Xu <herbert@gondor.apana.org.au>,
    Stephan Mueller <smueller@chronox.de>,
    Lukas Wunner <lukas@wunner.de>,
    Ignat Korchagin <ignat@cloudflare.com>,
    Luis Chamberlain <mcgrof@kernel.org>,
    Petr Pavlu <petr.pavlu@suse.com>, Daniel Gomez <da.gomez@kernel.org>,
    Sami Tolvanen <samitolvanen@google.com>,
    linux-crypto@vger.kernel.org, keyrings@vger.kernel.org,
    linux-modules@vger.kernel.org, linux-kernel@vger.kernel.org,
    Harald Freudenberger <freude@linux.ibm.com>,
    Holger Dengler <dengler@linux.ibm.com>, linux-s390@vger.kernel.org
Subject: Re: [PATCH v6 01/17] s390/sha3: Rename conflicting functions
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable
Date: Sat, 18 Oct 2025 13:17:26 +0100
Message-ID: <937031.1760789846@warthog.procyon.org.uk>
X-Scanned-By: MIMEDefang 3.4.1 on 10.30.177.93

Christophe Leroy <christophe.leroy@csgroup.eu> wrote:

> Le 17/10/2025 =C3=A0 16:42, David Howells a =C3=A9crit=C2=A0:
> > Rename the s390 sha3_* functions to have an "s390_" prefix to avoid
> > conflict with generic code.
>=20
> The functions are static, why would they conflict with generic code ?

Because of #include <crypto/sha3.h>

> Also generic code doesn't have such functions at the moment, are they add=
ed by
> a follow patch ?

Yes.  See patch 3.

David


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859183.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CB43917A31C
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:23:35 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760790215; cv=none; b=IFCu+Gu4B5UbHGsfsI/q3oetq0QnIuLSFG7VQpz23v8J9O4RjCoxF555FHhnBJ6eFzjQnm9/wpS5o6faxo6zUCOhtvB5/5ndILaTP3nSvJHbugA/+B10ulPI2G+JTy8112t20k5e39vVkikMunhNidQW9FaKvhNjKFJIURrjcxo=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760790215; c=relaxed/simple;
	bh=hjA+KH3Wj1C+zAvItz/eOBEiIkWyOOrmjBXeUhx60V4=;
	h=From:Date:Subject:MIME-Version:Content-Type:Message-Id:To:Cc; b=s81o/Tr4j8r3RjFRgvbPov4bavmRBdjPXv9fMAQzN36ngJVe8d4buku0nRMeyNUYQsXCBNW9onziE9S6qlo/o2LbtOtwiUCXKl/dn+vJq8rbidPUZSeLyI36Yl7vgy0dOvYasZRxOWA0EXF+gJb4r3gweywGpipm7Pp06lKNO8c=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=i6+etu4G; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="i6+etu4G"
Received: by smtp.kernel.org (Postfix) with ESMTPS id 56B64C4CEF8;
	Sat, 18 Oct 2025 12:23:35 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760790215;
	bh=hjA+KH3Wj1C+zAvItz/eOBEiIkWyOOrmjBXeUhx60V4=;
	h=From:Date:Subject:To:Cc:Reply-To:From;
	b=i6+etu4GXlchxqIIf4CNY0BF4g0S+LweWmngpQwuGuTvLgl+Kp2gZAGnBQI1Y76bk
	 lz0+tqkSytI8fxQQDnaaB27LQGchNg5/wy/HhledVge1Vy6Hawo5KSiW+p5OiIgC9i
	 T7WyOGJkDwmeX+TSiaZwL7dtsWGqm9JQu6uCJTEDXAqzmTVaA+BcmRjSeRNGexQQ7h
	 cdOq66P5V97BxfH/oF639P2b3TSZ9pGhxrUEjmNzler70WZqzoLYZI4EzNyTb+LrRB
	 XSZs+doDOgC7dQ4b8sq8S0846L1hUVXHfZGXTDyAfCtURmLRrVzy8CW6XuUUAZglTh
	 vT4djG9eNzW5A==
Received: from aws-us-west-2-korg-lkml-1.web.codeaurora.org (localhost.localdomain [127.0.0.1])
	by smtp.lore.kernel.org (Postfix) with ESMTP id 43803CCD195;
	Sat, 18 Oct 2025 12:23:35 +0000 (UTC)
From: David Heidelberg via B4 Relay <devnull+david.ixit.cz@kernel.org>
Date: Sat, 18 Oct 2025 14:22:57 +0200
Subject: [PATCH RESEND v3] ARM: multi_v7_defconfig add /proc/config.gz
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 7bit
Message-Id: <20251018-arm-config_gz-v3-1-0de1eaadd902@ixit.cz>
To: Russell King <linux@armlinux.org.uk>, Ard Biesheuvel <ardb@kernel.org>, 
 Arnd Bergmann <arnd@arndb.de>
Cc: linux-arm-kernel@lists.infradead.org, linux-kernel@vger.kernel.org, 
 David Heidelberg <david@ixit.cz>
X-Mailer: b4 0.14.3
X-Developer-Signature: v=1; a=openpgp-sha256; l=1307; i=david@ixit.cz;
 h=from:subject:message-id;
 bh=7w/aD3shZMm8S2nIaaI4q8HkXYxgH0I/7K7GWxdOw78=;
 b=owEBbQKS/ZANAwAIAWACP8TTSSByAcsmYgBo84bFUXDf8xi9WnUPm10TJ71uwk3sxLZfjtFB7
 7FAxgH5IhyJAjMEAAEIAB0WIQTXegnP7twrvVOnBHRgAj/E00kgcgUCaPOGxQAKCRBgAj/E00kg
 cnI2D/0b15ZI37jdYTKlxu1rONqBTQJqsCCYgB4N+sRazVYVxyDoZxqZcZmw2Ls4Z6MUKQFOBRX
 a6BwkeYJTBwlJaDlSCtshtC1A8U9C/EkE/jeSdq4r65VvLyzj+ylhae63OfyxgH3wQrQkSZiWA8
 GEklNbawfl6PkdyfhyyUBFLTyjZgOGhTR1wdUjxbJUAidi0OZ798Blv/wUH0VfbglODF/HU87Cy
 aGHfrMa1GwjNoRNI8gIpl6zxFkipgAVMcu37/0JN45Lfdho3aGHXxls5MZA1G7vqm76LhVDQB4S
 8cc4LAirydGL2R9ivYJg4cup/qhu4LkzZ4tRvcrYk7NSMyIBucNedkkI8oe3l97Sg0QSZDpIOeU
 8ehTx7k/QpesIq/THLaPKzUvc0ZeoBylpCRHek7fnD72JyR0jliygGRqp7mEjBRhjRXPiUzWG8B
 PgLOBEQH75vO8dWS/9Q90s54WhYwoBmWbMuZzREaDYTNpZZ6XqjU6vMG6nrYd/ujI2SCNlRNSXH
 aLFIH6j6OUaYufulfD/V47ISvzjG77ylfMv8ztra4V1jolTNPVfj7B+KKemnIDInheSLYJTmS1x
 SK18W7VppaC3qAvGj85OJtYl+Qvr95Ou/hWcPLlQrcO9NEdbPFeLz/li9E6TAiybwCsMLfAQI6C
 pr9wSSHm7N6tXDQ==
X-Developer-Key: i=david@ixit.cz; a=openpgp;
 fpr=D77A09CFEEDC2BBD53A7047460023FC4D3492072
X-Endpoint-Received: by B4 Relay for david@ixit.cz/default with auth_id=355
X-Original-From: David Heidelberg <david@ixit.cz>
Reply-To: david@ixit.cz

From: David Heidelberg <david@ixit.cz>

While 32-bit ARM isn't that widespread, multi_v7_defconfig is used for
building more generic images, where having access to config can be handy.

arm64 and x86_64 already bundle config.gz, so this is an effort to provide
the same level of comfort with ARMv7 devices.

Signed-off-by: David Heidelberg <david@ixit.cz>
---
Changes in v3:
- Rebased against next-20250715; otherwise, just a resend.
- Link to v2: https://lore.kernel.org/r/20250329-arm-config_gz-v2-1-f725d331fb5d@ixit.cz

Changes in v2:
- IKCONFIG is now module instead of built-in (Greg).
- Link to v1: https://lore.kernel.org/r/20230612210208.109267-1-david@ixit.cz
---
 arch/arm/configs/multi_v7_defconfig | 2 ++
 1 file changed, 2 insertions(+)

diff --git a/arch/arm/configs/multi_v7_defconfig b/arch/arm/configs/multi_v7_defconfig
index 65df4014c4a60..5180c90cb5da1 100644
--- a/arch/arm/configs/multi_v7_defconfig
+++ b/arch/arm/configs/multi_v7_defconfig
@@ -1,6 +1,8 @@
 CONFIG_SYSVIPC=y
 CONFIG_NO_HZ_IDLE=y
 CONFIG_HIGH_RES_TIMERS=y
+CONFIG_IKCONFIG=m
+CONFIG_IKCONFIG_PROC=y
 CONFIG_CGROUPS=y
 CONFIG_BLK_DEV_INITRD=y
 CONFIG_EXPERT=y

---
base-commit: f2b1f6a9f382564b1d4cf16c45e73ccccb917f1f
change-id: 20250329-arm-config_gz-7d656859ad59

Best regards,
-- 
David Heidelberg <david@ixit.cz>



--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859184.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 370CF354ADF;
	Sat, 18 Oct 2025 12:24:59 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760790299; cv=none; b=lhUi5e1KMbXbPVSSX5hcnjW5A05e4GGgijShn1YF7kZ92bs3ZKgf0+QJkkWFJLS+vF/tLOgJTAu+e7xBxN8vzLHGznu3sa29NtuQ3wwQeZ3AN6opKAJPky3LnoTgzWEnb2Whh1MuS7B1SsNj2d/zivf5ljTn44IEtueGwbUdlb4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760790299; c=relaxed/simple;
	bh=l/aAsZf6qoeMlNgkXSMypl1VDNVAcZQnG1zVE8VEAXc=;
	h=From:To:Cc:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=fKjI47Bh+x959W0qQ240t24KGgk9o6GwbhYRuH8iW2+5TQaEFiJG2eUGe7DhsrkYmOyNAnTKKL7N5x4EGhybby+5WD9NpUGEz+vtbMUN4OXf1cVJKUhLw0BranRvKo8EkQeyK8ohhJTUE9MnD8Z2zbzWw69DPNhEcFfhcdRV4sU=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=Yn50TWnQ; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="Yn50TWnQ"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id C2EC6C4CEF8;
	Sat, 18 Oct 2025 12:24:55 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760790299;
	bh=l/aAsZf6qoeMlNgkXSMypl1VDNVAcZQnG1zVE8VEAXc=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=Yn50TWnQ9qd+yEexh2GKNnuLDe4q8aKdbUnferwTelvEA+ZQosCY3MXb94BktNoBB
	 koAeqWipf/U1ZZy5UByJ1plMzaeiX8P1+mT/EWOHlYD8uQhvb6cJ2sjcuMzPbDI+kg
	 POkTJfV9h9pm3zu3AKUBfSe/NBeJn5GDvMPHDV9TSrs4vYGCvhI7xOB0zZb1xJAc0g
	 YWuCrRi8G/PWXZ2SwK3Gdwo6wRJyh4mfNvfv2ZL6Op4e+UHefa4NV6NBlFb7ftQqKD
	 sxor1QHhQ7BZ7UbA9ign/oMbY6Xht2oWtKbyOOhZgLLUmcZVJwZfj0B4S+P82Q7P2m
	 3eKL3jr4a6jQQ==
From: "Rafael J. Wysocki" <rafael@kernel.org>
To: Linux ACPI <linux-acpi@vger.kernel.org>
Cc: Linux PM <linux-pm@vger.kernel.org>,
 Jonathan Cameron <jonathan.cameron@huawei.com>, Takashi Iwai <tiwai@suse.de>,
 LKML <linux-kernel@vger.kernel.org>, Zhang Qilong <zhangqilong3@huawei.com>,
 Frank Li <Frank.Li@nxp.com>, Dhruva Gole <d-gole@ti.com>,
 Mika Westerberg <mika.westerberg@linux.intel.com>,
 Dan Williams <dan.j.williams@intel.com>
Subject: [PATCH v2 2/2] ACPI: TAD: Improve runtime PM using guard macros
Date: Sat, 18 Oct 2025 14:24:42 +0200
Message-ID: <22877917.EfDdHjke4D@rafael.j.wysocki>
Organization: Linux Kernel Development
In-Reply-To: <8599731.T7Z3S40VBb@rafael.j.wysocki>
References: <8599731.T7Z3S40VBb@rafael.j.wysocki>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7Bit
Content-Type: text/plain; charset="UTF-8"

From: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

Use guard pm_runtime_active_try to simplify runtime PM cleanup and
implement runtime resume error handling in multiple places.

Also use guard pm_runtime_noresume to simplify acpi_tad_remove().

Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---
 drivers/acpi/acpi_tad.c |   57 +++++++++++++++++++++---------------------------
 1 file changed, 25 insertions(+), 32 deletions(-)

--- a/drivers/acpi/acpi_tad.c
+++ b/drivers/acpi/acpi_tad.c
@@ -90,12 +90,11 @@ static int acpi_tad_set_real_time(struct
 	args[0].buffer.pointer = (u8 *)rt;
 	args[0].buffer.length = sizeof(*rt);
 
-	pm_runtime_get_sync(dev);
+	ACQUIRE(pm_runtime_active_try, pm)(dev);
+	if (ACQUIRE_ERR(pm_runtime_active_try, &pm))
+		return -ENXIO;
 
 	status = acpi_evaluate_integer(handle, "_SRT", &arg_list, &retval);
-
-	pm_runtime_put_sync(dev);
-
 	if (ACPI_FAILURE(status) || retval)
 		return -EIO;
 
@@ -111,12 +110,11 @@ static int acpi_tad_get_real_time(struct
 	acpi_status status;
 	int ret = -EIO;
 
-	pm_runtime_get_sync(dev);
+	ACQUIRE(pm_runtime_active_try, pm)(dev);
+	if (ACQUIRE_ERR(pm_runtime_active_try, &pm))
+		return -ENXIO;
 
 	status = acpi_evaluate_object(handle, "_GRT", NULL, &output);
-
-	pm_runtime_put_sync(dev);
-
 	if (ACPI_FAILURE(status))
 		goto out_free;
 
@@ -266,12 +264,11 @@ static int acpi_tad_wake_set(struct devi
 	args[0].integer.value = timer_id;
 	args[1].integer.value = value;
 
-	pm_runtime_get_sync(dev);
+	ACQUIRE(pm_runtime_active_try, pm)(dev);
+	if (ACQUIRE_ERR(pm_runtime_active_try, &pm))
+		return -ENXIO;
 
 	status = acpi_evaluate_integer(handle, method, &arg_list, &retval);
-
-	pm_runtime_put_sync(dev);
-
 	if (ACPI_FAILURE(status) || retval)
 		return -EIO;
 
@@ -314,12 +311,11 @@ static ssize_t acpi_tad_wake_read(struct
 
 	args[0].integer.value = timer_id;
 
-	pm_runtime_get_sync(dev);
+	ACQUIRE(pm_runtime_active_try, pm)(dev);
+	if (ACQUIRE_ERR(pm_runtime_active_try, &pm))
+		return -ENXIO;
 
 	status = acpi_evaluate_integer(handle, method, &arg_list, &retval);
-
-	pm_runtime_put_sync(dev);
-
 	if (ACPI_FAILURE(status))
 		return -EIO;
 
@@ -370,12 +366,11 @@ static int acpi_tad_clear_status(struct
 
 	args[0].integer.value = timer_id;
 
-	pm_runtime_get_sync(dev);
+	ACQUIRE(pm_runtime_active_try, pm)(dev);
+	if (ACQUIRE_ERR(pm_runtime_active_try, &pm))
+		return -ENXIO;
 
 	status = acpi_evaluate_integer(handle, "_CWS", &arg_list, &retval);
-
-	pm_runtime_put_sync(dev);
-
 	if (ACPI_FAILURE(status) || retval)
 		return -EIO;
 
@@ -411,12 +406,11 @@ static ssize_t acpi_tad_status_read(stru
 
 	args[0].integer.value = timer_id;
 
-	pm_runtime_get_sync(dev);
+	ACQUIRE(pm_runtime_active_try, pm)(dev);
+	if (ACQUIRE_ERR(pm_runtime_active_try, &pm))
+		return -ENXIO;
 
 	status = acpi_evaluate_integer(handle, "_GWS", &arg_list, &retval);
-
-	pm_runtime_put_sync(dev);
-
 	if (ACPI_FAILURE(status))
 		return -EIO;
 
@@ -571,16 +565,15 @@ static void acpi_tad_remove(struct platf
 
 	sysfs_remove_group(&dev->kobj, &acpi_tad_attr_group);
 
-	pm_runtime_get_noresume(dev);
-
-	acpi_tad_disable_timer(dev, ACPI_TAD_AC_TIMER);
-	acpi_tad_clear_status(dev, ACPI_TAD_AC_TIMER);
-	if (dd->capabilities & ACPI_TAD_DC_WAKE) {
-		acpi_tad_disable_timer(dev, ACPI_TAD_DC_TIMER);
-		acpi_tad_clear_status(dev, ACPI_TAD_DC_TIMER);
+	scoped_guard(pm_runtime_noresume, dev) {
+		acpi_tad_disable_timer(dev, ACPI_TAD_AC_TIMER);
+		acpi_tad_clear_status(dev, ACPI_TAD_AC_TIMER);
+		if (dd->capabilities & ACPI_TAD_DC_WAKE) {
+			acpi_tad_disable_timer(dev, ACPI_TAD_DC_TIMER);
+			acpi_tad_clear_status(dev, ACPI_TAD_DC_TIMER);
+		}
 	}
 
-	pm_runtime_put_noidle(dev);
 	pm_runtime_suspend(dev);
 	pm_runtime_disable(dev);
 	acpi_remove_cmos_rtc_space_handler(handle);




--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859185.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 1C4C9354ADF;
	Sat, 18 Oct 2025 12:25:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760790306; cv=none; b=qyCmVzZ9+IOR4BwnjVG/mR8YhK6o8L/Uuj0yCjALwkI539TC9ZAgfz+x53KYC4EJobwU5l08ndk5Bi3fT/uw8G1KjRDGjd37wXLPCZGaRv3km42dLokwhfs804gxtYzusA/YkC5OB2y91IaoosoqGoTy2jnzRWUEkFxC1gEaqTw=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760790306; c=relaxed/simple;
	bh=5Ojmj4sxlrJnfMaPuiqa45Z5k6CAnRPeizijVc+oRQs=;
	h=From:To:Cc:Subject:Date:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=uRziCdg23kyeyHKAOl2v+8fvggsEU5M6IX0JUh9ikNirixd4Uq90E6gtlBmltas6LY8t3GcoETr46OKMvISwlzPkTFOKNFw1hMxk/4H9NWpARmfEcHjn4oI0337KWcNiPbYkb7Mz3BF37Gvab23J9b378WLSc2xO4QrfwM4rFdw=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=gyeCoXJp; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="gyeCoXJp"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id E55BFC113D0;
	Sat, 18 Oct 2025 12:25:01 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760790304;
	bh=5Ojmj4sxlrJnfMaPuiqa45Z5k6CAnRPeizijVc+oRQs=;
	h=From:To:Cc:Subject:Date:In-Reply-To:References:From;
	b=gyeCoXJpC1xhKkihEbYMHzGDp/HHgkg2ZmLGmmxMeBEkSJDwoeDrlldQgXl2+bKPW
	 KfAI6fDxegKALu4/26/mvaLgMDOg/FiSP2bb0v6DMVTe5AMakZZwh5shJluYjOPJEJ
	 aAlC/jgGXki0H8KM4MAayPtrWfoeUdPY3VEw6FG0F8GH9FZEPoWz5mEiE9b+vnVwkk
	 pfQhnxebFEWj0fqUgmj/iqeABKVsEghlQCWi2lErZK/eB1vI7/Ls2aXkmGdGvuqmJe
	 dFIZvQoNa1Q8+vr283ZP0B65RK9Qkmxgvaqn+bE8prB2YN+KIj0L8grEI9cF1JQaUM
	 vy9vhCpNYqkwA==
From: "Rafael J. Wysocki" <rafael@kernel.org>
To: Linux ACPI <linux-acpi@vger.kernel.org>
Cc: Linux PM <linux-pm@vger.kernel.org>,
 Jonathan Cameron <jonathan.cameron@huawei.com>, Takashi Iwai <tiwai@suse.de>,
 LKML <linux-kernel@vger.kernel.org>, Zhang Qilong <zhangqilong3@huawei.com>,
 Frank Li <Frank.Li@nxp.com>, Dhruva Gole <d-gole@ti.com>,
 Mika Westerberg <mika.westerberg@linux.intel.com>,
 Dan Williams <dan.j.williams@intel.com>
Subject:
 [PATCH v2 1/2] ACPI: TAD: Rearrange runtime PM operations in
 acpi_tad_remove()
Date: Sat, 18 Oct 2025 14:23:07 +0200
Message-ID: <2333453.iZASKD2KPV@rafael.j.wysocki>
Organization: Linux Kernel Development
In-Reply-To: <8599731.T7Z3S40VBb@rafael.j.wysocki>
References: <8599731.T7Z3S40VBb@rafael.j.wysocki>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7Bit
Content-Type: text/plain; charset="UTF-8"

From: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

It is not necessary to resume the device upfront in acpi_tad_remove()
because both acpi_tad_disable_timer() and acpi_tad_clear_status()
attempt to resume it, but it is better to prevent it from suspending
between these calls by incrementing its runtime PM usage counter.

Accordingly, replace the pm_runtime_get_sync() call in acpi_tad_remove()
with a pm_runtime_get_noresume() one and put the latter right before the
first invocation of acpi_tad_disable_timer().

In addition, use pm_runtime_put_noidle() to drop the device's runtime
PM usage counter after using pm_runtime_get_noresume() to bump it up
to follow a common pattern and use pm_runtime_suspend() for suspending
the device afterward.

No intentional functional impact.

Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---
 drivers/acpi/acpi_tad.c |    7 ++++---
 1 file changed, 4 insertions(+), 3 deletions(-)

--- a/drivers/acpi/acpi_tad.c
+++ b/drivers/acpi/acpi_tad.c
@@ -563,8 +563,6 @@ static void acpi_tad_remove(struct platf
 
 	device_init_wakeup(dev, false);
 
-	pm_runtime_get_sync(dev);
-
 	if (dd->capabilities & ACPI_TAD_RT)
 		sysfs_remove_group(&dev->kobj, &acpi_tad_time_attr_group);
 
@@ -573,6 +571,8 @@ static void acpi_tad_remove(struct platf
 
 	sysfs_remove_group(&dev->kobj, &acpi_tad_attr_group);
 
+	pm_runtime_get_noresume(dev);
+
 	acpi_tad_disable_timer(dev, ACPI_TAD_AC_TIMER);
 	acpi_tad_clear_status(dev, ACPI_TAD_AC_TIMER);
 	if (dd->capabilities & ACPI_TAD_DC_WAKE) {
@@ -580,7 +580,8 @@ static void acpi_tad_remove(struct platf
 		acpi_tad_clear_status(dev, ACPI_TAD_DC_TIMER);
 	}
 
-	pm_runtime_put_sync(dev);
+	pm_runtime_put_noidle(dev);
+	pm_runtime_suspend(dev);
 	pm_runtime_disable(dev);
 	acpi_remove_cmos_rtc_space_handler(handle);
 }




--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859186.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 76ED42882A9;
	Sat, 18 Oct 2025 12:25:10 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760790311; cv=none; b=ZqCBF0ia8+O7UMhP5G6NR2GN6o3+BLfTNx8uK+vvDClsOytsTvn8aHIStngAz1HfnVti1MqHXa+xjpZ99PY3a+QUfm1VYo4FApp2E3J5kEaIVtc1F+sNYenDSfs5SeK8xXFTbMt0xXf1A7G65XljjSY64mswZcaReccFVWp+Kyk=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760790311; c=relaxed/simple;
	bh=Yjt/mwGqTYgaSp3IkVe2eq2mxkadGDI7jkjoPokj5uI=;
	h=From:To:Cc:Subject:Date:Message-ID:MIME-Version:Content-Type; b=KM0BdfHYhkPXwfdJc9WxSQau0DhmIFmnm9L3U0IH8MvDLn0Vc2cJq2daloV3SPif5xlRJQvU9VJbHvFv1qqDoBVBT0O2SPXPQ2f5yjkP3ySqwC3jNR2pAJJYZ8OpPC2BcnLH7HFSrNEC0+GR9G4NrR9jK4zDoIj8554sQFHEdX0=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=lsGbIMQE; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="lsGbIMQE"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 73B1CC4CEFE;
	Sat, 18 Oct 2025 12:25:07 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760790310;
	bh=Yjt/mwGqTYgaSp3IkVe2eq2mxkadGDI7jkjoPokj5uI=;
	h=From:To:Cc:Subject:Date:From;
	b=lsGbIMQEoCtuZrArvWM0lnBi49nL6rgT7KhrRXyyFnk8v8BcdtE/opQ/jKr08u0Sz
	 rm6hkW5KYdqT4l8rsqwg0qa9rprwO4IQXqkJHAoODghp++a81z2e5Dig8tTq0mgsqB
	 dMMv+hJHTJorB+QNpHfG5OOeDZ2eOVjsXszbea9Jqq7YFte0VhnCGKz9e0xTcY2TOd
	 PkGaR19x619R66fYRdi0kXOVNXPIS0DAJAsTCPlINoZdpN/PKk8mWq/Z0w34llg6aU
	 c9BpALMBcfYxu02UZHq/g3nnuqHzH6Q/bW+beroO4pNiDjIRkG9cNuqPxfFxgxbc4C
	 9s0ChOjtt+fKA==
From: "Rafael J. Wysocki" <rafael@kernel.org>
To: Linux ACPI <linux-acpi@vger.kernel.org>
Cc: Linux PM <linux-pm@vger.kernel.org>,
 Jonathan Cameron <jonathan.cameron@huawei.com>, Takashi Iwai <tiwai@suse.de>,
 LKML <linux-kernel@vger.kernel.org>, Zhang Qilong <zhangqilong3@huawei.com>,
 Frank Li <Frank.Li@nxp.com>, Dhruva Gole <d-gole@ti.com>,
 Mika Westerberg <mika.westerberg@linux.intel.com>,
 Dan Williams <dan.j.williams@intel.com>
Subject: [PATCH v2 0/2] ACPI: TAD: Use auto-cleanup macros for runtime PM
Date: Sat, 18 Oct 2025 14:22:06 +0200
Message-ID: <8599731.T7Z3S40VBb@rafael.j.wysocki>
Organization: Linux Kernel Development
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7Bit
Content-Type: text/plain; charset="UTF-8"

Hi All,

This supersedes

https://lore.kernel.org/linux-pm/3925484.kQq0lBPeGt@rafael.j.wysocki/

the first patch of which proved to be controversial (quite as expected), so it
has been dropped and the patch that was the second one previously is [1/2] now,
and it has not been changed.

Patch [2/2] (previously [3/3]) has been updated to use the full ACQUIRE()/
ACQUIRE_ERR() syntax.

Thanks!




--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859187.eml"

Received: from mail-wr1-f47.google.com (mail-wr1-f47.google.com [209.85.221.47])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CFB2A285C8C
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:25:47 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.47
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760790351; cv=none; b=Q606OOADe/hdYB6ay7D+nv4NpTpCAOf0OVx5c8+b9wSQUSNp5op/kBxtVwnqzH/iil5uJoXFBmv4yr0+vMt8XlIFp0TAduP7q0Z2q0K3AoPKwloJmCfgamsW0rFhMFbjkb39NCSbPT9xtujJWSTjjsUgoicWp+IFGfTyaM0Qmhs=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760790351; c=relaxed/simple;
	bh=P8XBi5I3NtXNdsQ+DnhxOruhCFctpANcNt0z1Wm/2bc=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=ciI0t3tQJzkKljd1ZwsnfARAy7xOx3zDXCMd0nXFCRrM9aPitMkNzE0WtJ+TAYwXLK97cwQyb34OQlR/G76fxQ8fPds390wH8hR336GYo+MxpsHyveRUl8CNXWukSGTvOsvGNbWJV0wE3J2fyo3Qaih3vOmdxp5j1WUZ10sdbJo=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=UUopvBcH; arc=none smtp.client-ip=209.85.221.47
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="UUopvBcH"
Received: by mail-wr1-f47.google.com with SMTP id ffacd0b85a97d-421851bca51so2267700f8f.1
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:25:47 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760790346; x=1761395146; darn=vger.kernel.org;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :from:to:cc:subject:date:message-id:reply-to;
        bh=Qxh9yQnKYSbelXax4RapBIx42eIGM+JDvuTXPUm+30A=;
        b=UUopvBcHDmLLl78yRZyKUx2I0HYZlWc7lJbwmO9+yDon9Ez7nxD6KDgBe51EtP+ixu
         N/5Qa7eSqcWu3moRg5P4kB2MIreei3OYI/iE/8WZbAIS47VSPcunNYAvlw4jqsXpIeFQ
         hrH0zERvJSSHdNHuWbVMXvSVZUNVEGajA9xg2SAcdgNsAL30MRuZ1+sqr0bQ75sJ9+sw
         TlZSgqRG8hLLlI+rRtVbE0ntX+s3m/Ldk9mCG2LYP+Hc0JXWC+7o2md2CyOzLLkR9NkA
         5a4ijNv8rpNqKItk3wOX3zJmWwWzUOOLL8x4DS6zu69Wu6/Vx3yans91DTTEkxRG0Mhm
         7o0A==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760790346; x=1761395146;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=Qxh9yQnKYSbelXax4RapBIx42eIGM+JDvuTXPUm+30A=;
        b=GY4lyJJRomr1LEFBOkHRd8yLysBJbYtf2Lh4QoUiv4hhE0TYjzWTXbMkbAkPFYuxRy
         TwJRxqhcbPuWSERkGm3/P2jDgUu6ErRint07pdCOlMhMug/a5yvukGfkzjm1P5qCvTNV
         umd0Or0d2s/eyLpNQBwSuHlPFmMhX5VSzCGu8s7g5SyUixrbx0j/TX6b1CxbsgaGaupY
         YGTyG4khZbKDoKSPhpH4Okdgrm5ePiIPnUrtolNWmh9aHqvxygafdaiW3yZX0s6l/+Gw
         FNyjqkZrc1+1iOT54RsCIYK00EwZGZGVLZZiF2lp2KyYka8O6yztaaHZA5CRPqqzc3Nh
         HfeQ==
X-Forwarded-Encrypted: i=1; AJvYcCVSXmeAkzxjclHGU+65re/4ig24yr4L5bOlxVzJFE9SO8gXXFQCr17qlajeNIa4s+oGEnzQGW2nIIPLPtA=@vger.kernel.org
X-Gm-Message-State: AOJu0Yz6+WF6NDFex8A1rLbNPGVrr9N4VJjv5taSfm8Nl7nGmZ38Td15
	/9vbntG6E6ZNUgabeOXMzpTgdUsKRwraJ4WHKhE5G6tmnBT5hIM0o4MP
X-Gm-Gg: ASbGnct2HwKFaNUdoU5UUoBxqKvAJpx20Zhgq2oaGIedyfJ5NlePmZM7HDjdama/r7H
	XJSQWgkmpkH2+IKFNJCOkKJYGsbaublp2frC7OyzkgX8QOw4M43KmykMjT/HpS1lH1p+fof+VkT
	iln5fx5XEt/UjDXNwTQ8tERHWXQ6chgKCjKPW28VNx0TEM2Sy1K8c6fZcl4rk2HzVoDO7SSByTn
	ntjGUFeIBM3DJiFXBrKdjqp0J/q3YYDnJYp1C94jZBCbBOFArnts20lRJ61m8TBVLrfFaUIwIEJ
	df0wrpXjHerkMlxwlfWG+RFyOI04coxC2ozfkinp5yiap6f9zxBt2r3yKNrvxTD6/8urt1fSxNe
	WrcbOcM7w3xB3Qf+r5TasxAYKQ1o9oh10iHE9UB9cVn5BYj6g13syq77VHPscg6Sk4m7gmxGeYg
	IE81Fb85ou3wpPNz6SnGpA+IedsPjiGZxt1+F+7B7EDbk8wgNXK+bjf7ZNrDU=
X-Google-Smtp-Source: AGHT+IHrvYmWU8VX2IjvdY7vhN8XWzCKvjWvIIW7b+tyYuQhrexcrdSS7qJwieJq0P0lR7mpRkRGsA==
X-Received: by 2002:a05:6000:4b08:b0:427:526:16aa with SMTP id ffacd0b85a97d-42705261894mr6353009f8f.58.1760790345945;
        Sat, 18 Oct 2025 05:25:45 -0700 (PDT)
Received: from ?IPV6:2001:861:3385:e20:2acd:89a8:83d9:4be5? ([2001:861:3385:e20:2acd:89a8:83d9:4be5])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5b3acfsm4828453f8f.14.2025.10.18.05.25.44
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Sat, 18 Oct 2025 05:25:45 -0700 (PDT)
Message-ID: <e303c2f5-0868-445b-ab1f-dbb81dd173d9@gmail.com>
Date: Sat, 18 Oct 2025 14:25:43 +0200
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH 1/1] drm/sti: call drm_edid_connector_update when edit is
 NULL
To: Chu Guangqing <chuguangqing@inspur.com>, alain.volmat@foss.st.com,
 maarten.lankhorst@linux.intel.com, mripard@kernel.org, tzimmermann@suse.de,
 airlied@gmail.com, simona@ffwll.ch
Cc: dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org
References: <20251014065406.4017-1-chuguangqing@inspur.com>
Content-Language: en-US, fr
From: =?UTF-8?Q?Rapha=C3=ABl_Gallais-Pou?= <rgallaispou@gmail.com>
In-Reply-To: <20251014065406.4017-1-chuguangqing@inspur.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit

Hi,

Thanks for this patch.

Please change the commit subject to "drm/sti: hdmi: xxx".

Le 14/10/2025 Ã  08:54, Chu Guangqing a Ã©critÂ :
> call drm_edid_connector_update to reset the information when edit is NULL.
> We can see the following comments in drm_edid.c
> If EDID is NULL, reset the information.
> 
> Signed-off-by: Chu Guangqing <chuguangqing@inspur.com>
> ---
>   drivers/gpu/drm/sti/sti_hdmi.c | 1 +
>   1 file changed, 1 insertion(+)
> 
> diff --git a/drivers/gpu/drm/sti/sti_hdmi.c b/drivers/gpu/drm/sti/sti_hdmi.c
> index 4e7c3d78b2b9..31a72f7f4d43 100644
> --- a/drivers/gpu/drm/sti/sti_hdmi.c
> +++ b/drivers/gpu/drm/sti/sti_hdmi.c
> @@ -1008,6 +1008,7 @@ static int sti_hdmi_connector_get_modes(struct drm_connector *connector)
>   	return count;
>   
>   fail:
> +	drm_edid_connector_update(connector, NULL);
>   	DRM_ERROR("Can't read HDMI EDID\n");

Now that empty EDID has been properly updated, the DRM_ERROR can be 
removed IMO.  In our use case HDMI is not systematically plugged, so 
this ERROR is quite noisy when we do not expect it.

Best regards,
RaphaÃ«l>   	return 0;
>   }


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859188.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id E8D29288D0;
	Sat, 18 Oct 2025 12:27:19 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760790440; cv=none; b=WSNBhq8uuCiEymNg99dctCFl0ZrztHz4kmlf5zwC6immTx/1VwttrghqDBY+F1hPbsCr+djHZ1bHSaQCnt9jZKwgnD2opbRTqdWYxzvqlaRlimhH+328SpolpQuJP8icfr9woaVIkINxbqa9pIBjAVxNmftkf8JPMBqoUD+D6a8=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760790440; c=relaxed/simple;
	bh=SCFTaGoirpvT04lMBP/4zr76JrsMh88Ob3cOymf2Urw=;
	h=From:To:Cc:Subject:Date:Message-ID:MIME-Version:Content-Type; b=TscWb91f3wSfjRqfmhHFi4aQbjohBbb3x4kkpOiFN8/Ypbl2UFlOzr9hgB1RklLyq+tJ7tdDVDD/S09qF9F/G3F/DxSspw0hi8lpp8lagUaNKiDAhF3iBwJ7kWt182LQe/hcuF5IdTf37KdnORHHIHJcudc/l5dzF6sVnCCnXgs=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=BNMBAWaC; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="BNMBAWaC"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 8199AC4CEF8;
	Sat, 18 Oct 2025 12:27:17 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760790439;
	bh=SCFTaGoirpvT04lMBP/4zr76JrsMh88Ob3cOymf2Urw=;
	h=From:To:Cc:Subject:Date:From;
	b=BNMBAWaCXB+hJ4peztQItmWaHxlnJgbzWzLot0VrxFLxqHVTmo+jz7bMyHadABNdi
	 JwNDQauzoq216DP002oAMQb2F9jz3Y0QW5L0nwfabggJk7grHb10ZPE1BvhIrUuhZG
	 F5rR7t1JhMdV3XkED4NwztZ4ftJwMkaWLiRh9Sszfo+t4ZKJ9eBUbry+V/AbBYuYId
	 obmwoF0JMejE0Fpkf1CCBAbe9V7XnB4HFEycWqpi1KGHdYUHQYoacgdAESgEeGB1JZ
	 nLLhJGM/zj/Rjbi9vA2+RDaRWJUXbvKNKpUCQx9PwOqeMzDAV+mbnziwaJV2RF2I7c
	 sUMrApIj3JHMw==
From: "Rafael J. Wysocki" <rafael@kernel.org>
To: Linux PM <linux-pm@vger.kernel.org>
Cc: Sergey Senozhatsky <senozhatsky@chromium.org>,
 LKML <linux-kernel@vger.kernel.org>,
 Christian Loehle <christian.loehle@arm.com>,
 Artem Bityutskiy <artem.bityutskiy@linux.intel.com>,
 Tomasz Figa <tfiga@chromium.org>, Doug Smythies <dsmythies@telus.net>
Subject:
 [PATCH v1] Revert "cpuidle: menu: Avoid discarding useful information"
Date: Sat, 18 Oct 2025 14:27:15 +0200
Message-ID: <3663603.iIbC2pHGDl@rafael.j.wysocki>
Organization: Linux Kernel Development
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Transfer-Encoding: 7Bit
Content-Type: text/plain; charset="UTF-8"

From: Rafael J. Wysocki <rafael.j.wysocki@intel.com>

It is reported that commit 85975daeaa4d ("cpuidle: menu: Avoid discarding
useful information") led to a performance regression on Intel Jasper Lake
systems because it reduced the time spent by CPUs in idle state C7 which
is correlated to the maximum frequency the CPUs can get to because of an
average running power limit [1].

Before that commit, get_typical_interval() would have returned UINT_MAX
whenever it had been unable to make a high-confidence prediction which
had led to selecting the deepest available idle state too often and
both power and performance had been inadequate as a result of that on
some systems.  However, this had not been a problem on systems with
relatively aggressive average running power limits, like the Jasper Lake
systems in question, because on those systems it was compensated by the
ability to run CPUs faster.

It was addressed by causing get_typical_interval() to return a number
based on the recent idle duration information available to it even if it
could not make a high-confidence prediction, but that clearly did not
take the possible correlation between idle power and available CPU
capacity into account.

For this reason, revert most of the changes made by commit 85975daeaa4d,
except for one cosmetic cleanup, and add a comment explaining the
rationale for returning UINT_MAX from get_typical_interval() when it
is unable to make a high-confidence prediction.

Fixes: 85975daeaa4d ("cpuidle: menu: Avoid discarding useful information")
Closes: https://lore.kernel.org/linux-pm/36iykr223vmcfsoysexug6s274nq2oimcu55ybn6ww4il3g3cv@cohflgdbpnq7/ [1]
Reported-by: Sergey Senozhatsky <senozhatsky@chromium.org>
Cc: All applicable <stable@vger.kernel.org>
Signed-off-by: Rafael J. Wysocki <rafael.j.wysocki@intel.com>
---
 drivers/cpuidle/governors/menu.c |   21 +++++++++------------
 1 file changed, 9 insertions(+), 12 deletions(-)

--- a/drivers/cpuidle/governors/menu.c
+++ b/drivers/cpuidle/governors/menu.c
@@ -188,20 +188,17 @@ again:
 	 *
 	 * This can deal with workloads that have long pauses interspersed
 	 * with sporadic activity with a bunch of short pauses.
+	 *
+	 * However, if the number of remaining samples is too small to exclude
+	 * any more outliers, allow the deepest available idle state to be
+	 * selected because there are systems where the time spent by CPUs in
+	 * deep idle states is correlated to the maximum frequency the CPUs
+	 * can get to.  On those systems, shallow idle states should be avoided
+	 * unless there is a clear indication that the given CPU is most likley
+	 * going to be woken up shortly.
 	 */
-	if (divisor * 4 <= INTERVALS * 3) {
-		/*
-		 * If there are sufficiently many data points still under
-		 * consideration after the outliers have been eliminated,
-		 * returning without a prediction would be a mistake because it
-		 * is likely that the next interval will not exceed the current
-		 * maximum, so return the latter in that case.
-		 */
-		if (divisor >= INTERVALS / 2)
-			return max;
-
+	if (divisor * 4 <= INTERVALS * 3)
 		return UINT_MAX;
-	}
 
 	/* Update the thresholds for the next round. */
 	if (avg - min > max - avg)




--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859189.eml"

Received: from mail-pl1-f182.google.com (mail-pl1-f182.google.com [209.85.214.182])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6C40881720
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:35:07 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.214.182
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760790909; cv=none; b=OgVM5IUNH7fRzEXpLTdn3GFSMsqeQVKwlq7G6Vi2xT7bL1kOhDKoBk85QMKA+LeVfZ+ZH0IIXNfhCBeinV2Azsq/XKkQAId5nV9plPDI9ATYT9qmEvnY2fTZ2va64zZUauGkkt9RcHBbX1RvzfRuYbh77tvzpIoz7ELjE5YB43g=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760790909; c=relaxed/simple;
	bh=zubtkUp2yt3JEr+8+Hl4KpwF7FbZB+OQgzpUVKT1W0Q=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=qvM1nxy87akuerNHY2yFU9rmKk2Gs6PcZ4WXydn/d+35Hv9n3FCq5FsPxyJmha561EAQgosJgzQk1EODUSgWvUQ/ilcGBmnvWCcFCF97uQnDCbKGqqvFIng5+LRMAFnrh0VVJDc9tJfCD/vR5pl5uo4Ty4cA0BaR0yfAR+3gHOg=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=Wp7t0Tsc; arc=none smtp.client-ip=209.85.214.182
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="Wp7t0Tsc"
Received: by mail-pl1-f182.google.com with SMTP id d9443c01a7336-267facf9b58so19741985ad.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:35:07 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760790907; x=1761395707; darn=vger.kernel.org;
        h=in-reply-to:content-transfer-encoding:content-disposition
         :mime-version:references:message-id:subject:cc:to:from:date:sender
         :from:to:cc:subject:date:message-id:reply-to;
        bh=LWHTNJbyaS31DH5v4N3tc7dWchDlomjozkszGkRyjQQ=;
        b=Wp7t0TscZzG3OeM19q2Mi4JyrsoEt5fbq7vdBt1XpmYo10h2bhXLVhBiBwgJpE2Eva
         EweYphIWtZYXXUECcmOORgKnsbYcOr7H8VPj/vRQFs69brxNFRAr5fumf1SH2c9rbeNl
         aJdWHDKkEire33uG2pAwfZf5ER1L44iR/3co1Pb3QOXn8/99VnvDNGMrVFsWXjY4gQvM
         WjsXPscT2ZBhMsIKpMxMPE1Q26w0BJnDv3pPU8oJFw9oACdrMUx7ookFbRiE9rfBidiu
         25RyrtRSjTnon13bG7aH9P2jQqZN2AaTRn0/ev+YZiWTvsYN5AH/+6n4ndMmtlm276Z+
         tvvQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760790907; x=1761395707;
        h=in-reply-to:content-transfer-encoding:content-disposition
         :mime-version:references:message-id:subject:cc:to:from:date:sender
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=LWHTNJbyaS31DH5v4N3tc7dWchDlomjozkszGkRyjQQ=;
        b=ejLzSQKy0a8ATS+b9uCXF3mnl1hT8GzRxjMy2Am2BU5utd8y+9CskULGnyyobq6lUQ
         jNxh3TwHKrwxuHFvUYD+rZZyPS9sNNGbJ8zA4wUDKHvRbhloyBnANy10B1yQXVqlfVBE
         Sym88hwSWGGBY1EayaS2mM43Gy4zXNG9t5TwEdZvzLOpOdXICRs9cszycW6OgAq+um0p
         iS50eDCeaEtAVFSAiYZC5ZbArBMrb73ArBAQ98+bDN6l8Y634wAhKOGyKBUX7QUcK815
         TS8t4sO2OO9icuchceYYR8TKds4kFN7gZvE4oBA/wFhPNryMcRojvNgR0HYmaY3vJ/Sg
         87qA==
X-Forwarded-Encrypted: i=1; AJvYcCVhjrjHEWEn/piz4BICh5ek2LeXz0G05PSSVWCXpI81X/NyceLgimLMAkkDXMJ8X1ljxtCfYEMNghXmBcM=@vger.kernel.org
X-Gm-Message-State: AOJu0YzO2bvGYC+kJgs23Bb4MP8WRynS0bqtM4aZzXugK7WA9Kb8B/lZ
	khZ3I4TtfYE14XwIKJah15XV9n9MJ+Uwxk2wdNYyvfTMqxs7oKu11I73
X-Gm-Gg: ASbGncvmyaDgt+FqVnxzAffckZqj7MbCKnQDuz5fHilOPpWirn3jfr+gxMxgwbPjZ8V
	qUrbtwW4hB8d6wpMxKtzWpEnEjdLo3EV94k06Ku20MQqIyDquVPMN7broRlqlIzkFXHWI6jLPsa
	Tpui5NOq9aNyROUPxJ3sd+G9zTGOrhbcSwps1sc0FCBW3ykPx7VsV6TO4sZRegkepE+dpkCfWTV
	kqtXweFELNAPzyzjqdTt9zLz3D7KkaG/ggQ0YjSl30/4OZT3scOtwAbcdMRoaKwXG+aFDQmLEv1
	wavsxa5WQHcK87dpXwD+/Ui9/kyjgpUu0EycoFXAGR36xZem5nSxqvIvkkdrcYv2JRfZ1JCGaRI
	eExlr9FH/64eFz4D5vEI/XOAheoRg06FMhnD1zKXU5JJLvliFAGu22zvoYMAj29RHooQXHAO14A
	Od3MvbcpjSJBqi
X-Google-Smtp-Source: AGHT+IH0Isbj1cOmj9B6RLl67WZWl/f5gDxBFTYoh/GDd4p0sblT1uv6SbNNW/CZV0z6mtaOmb0YQA==
X-Received: by 2002:a17:903:3d0d:b0:268:1034:ac8b with SMTP id d9443c01a7336-290d14e83cemr79158005ad.26.1760790906505;
        Sat, 18 Oct 2025 05:35:06 -0700 (PDT)
Received: from server.roeck-us.net ([2600:1700:e321:62f0:da43:aeff:fecc:bfd5])
        by smtp.gmail.com with ESMTPSA id d9443c01a7336-292471d7e41sm25467105ad.57.2025.10.18.05.35.05
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:35:06 -0700 (PDT)
Sender: Guenter Roeck <groeck7@gmail.com>
Date: Sat, 18 Oct 2025 05:35:04 -0700
From: Guenter Roeck <linux@roeck-us.net>
To: Ilpo =?iso-8859-1?Q?J=E4rvinen?= <ilpo.jarvinen@linux.intel.com>
Cc: linux-pci@vger.kernel.org, "Maciej W . Rozycki" <macro@orcam.me.uk>,
	Thomas Bogendoerfer <tsbogend@alpha.franken.de>,
	Bjorn Helgaas <bhelgaas@google.com>, linux-mips@vger.kernel.org,
	linux-kernel@vger.kernel.org
Subject: Re: [PATCH v2 1/1] MIPS: Malta: Use pcibios_align_resource() to
 block io range
Message-ID: <8cdedbc4-4073-44a5-8ebf-2c8aa9da702c@roeck-us.net>
References: <20251017110903.1973-1-ilpo.jarvinen@linux.intel.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=iso-8859-1
Content-Disposition: inline
Content-Transfer-Encoding: 8bit
In-Reply-To: <20251017110903.1973-1-ilpo.jarvinen@linux.intel.com>

On Fri, Oct 17, 2025 at 02:09:03PM +0300, Ilpo Järvinen wrote:
> According to Maciej W. Rozycki <macro@orcam.me.uk>, the
> mips_pcibios_init() for malta adjusts root bus IO resource start
> address to prevent interfering with PIIX4 I/O cycle decoding. Adjusting
> lower bound leaves PIIX4 IO resources outside of the root bus resource
> and assign_fixed_resource_on_bus() does not link the resources into the
> resource tree.
> 
> Prior to commit ae81aad5c2e1 ("MIPS: PCI: Use pci_enable_resources()")
> the arch specific pcibios_enable_resources() did not check if the
> resources were assigned which diverges from what PCI core checks,
> effectively hiding the PIIX4 IO resources were not properly within the
> resource tree. After starting to use pcibios_enable_resources() from
> PCI core, enabling PIIX4 fails:
> 
> ata_piix 0000:00:0a.1: BAR 0 [io  0x01f0-0x01f7]: not claimed; can't enable device
> ata_piix 0000:00:0a.1: probe with driver ata_piix failed with error -22
> 
> MIPS PCI code already has support for enforcing lower bounds using
> PCIBIOS_MIN_IO in pcibios_align_resource() without altering the IO
> window start address itself. Make malta PCI code too to use
> PCIBIOS_MIN_IO.
> 
> Fixes: ae81aad5c2e1 ("MIPS: PCI: Use pci_enable_resources()")
> Fixes: aa0980b80908 ("Fixes for system controllers for Atlas/Malta core cards.")
> Link: https://lore.kernel.org/linux-pci/9085ab12-1559-4462-9b18-f03dcb9a4088@roeck-us.net/
> Link: https://lore.kernel.org/linux-pci/alpine.DEB.2.21.2510132229120.39634@angie.orcam.me.uk/
> Reported-by: Guenter Roeck <linux@roeck-us.net>
> Suggested-by: Maciej W. Rozycki <macro@orcam.me.uk>
> Signed-off-by: Ilpo Järvinen <ilpo.jarvinen@linux.intel.com>

Tested-by: Guenter Roeck <linux@roeck-us.net>

Guenter

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859190.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 8989C22DF99
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:41:45 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791305; cv=none; b=m8W9SBti+Zo4Y7hgy7jd6OZC4V6mGIi9Q70vZJItKby9N8o3mYhLn39UarrX+Xb7fVmUPo17e4M/rl0U5/wbSdA4fxMGEAmPJ4Y+njx+PN4LNVdxNdcmCU8tuu2GJlydM5m+eDgWg26iVY3BMuGXg4NEdo0GWfWDRB3uv0nH4BA=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791305; c=relaxed/simple;
	bh=o5/KluPyDYMIfPuQR1eQtRpQrDwQ7T9vUVmdxk9m9wc=;
	h=MIME-Version:References:In-Reply-To:From:Date:Message-ID:Subject:
	 To:Cc:Content-Type; b=UI5oxFhDGRU2R/ki61Z6082QyENfdHBmixKwsEN2xe5V9cHHGNHhDY/jo1dFHLDurykR2DeLKLddwm9mRLnozkY/MTyHK+QckSqpisOL3+NOCpSSpjrYFRP7fNRzsNgux1puZqwZr6HUvyA87NXiiIjJP6AhHlMRuHTFk9mIcD0=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=Qpn441VN; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="Qpn441VN"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 3635BC116D0
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:41:45 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760791305;
	bh=o5/KluPyDYMIfPuQR1eQtRpQrDwQ7T9vUVmdxk9m9wc=;
	h=References:In-Reply-To:From:Date:Subject:To:Cc:From;
	b=Qpn441VNTg2VtymDXh2X94PNXx3mvLqXXr01ZOQPqpUP7j61xawFZfzPE5eXQHUsP
	 hAeSauUNIkiWYIgG1f3hEHexG8OjtOgHbwNUwOqO4Ywxt0p1PMaItPDN46WjLnyjiy
	 oCqDRl7a3WkHmZTLszODKaGtrm/f/D6f6GNrEUyjkqkdJr7A4f1qLh1ZVfEY8xM44e
	 w3Ime5OEIxQigo51Y6gl6C2bj9NhS947XJW7JOPJpIFpwwIw+hWnuqYidpTq14WiKF
	 23jxccobsphmkcFE70b4YwAistGJ526jvt5BzTOiuvkLKKxWOTqt+x+nPsiHR0lVA9
	 x0pP/xoagGlLw==
Received: by mail-ot1-f52.google.com with SMTP id 46e09a7af769-7c27951fcbeso890818a34.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:41:45 -0700 (PDT)
X-Forwarded-Encrypted: i=1; AJvYcCX+CywE78yK73wmvQIpJuZJvbMfaY9bx6ZfTlZuOGXs8ROt8zIUYsRVAlfFbDwflYbCrkIMdh3pLx64NHM=@vger.kernel.org
X-Gm-Message-State: AOJu0YycfCE2MmSkv0+r/RJDzUQd1Mybu3PEuei3EI3jC8JqFKccX5ud
	w609vTaJvxKXmwcLjbTsEmq3B/uuEKMQVznaFqz+rzPH1RqS/1vPDEsBVW22XdYZmWBSYgO0xnQ
	bMwGuTI7OmvgNO2oADwgFXIQkLKVOfGc=
X-Google-Smtp-Source: AGHT+IF65O7rOIYSYlXVS6Ib09prkwoOJViL4sucslIQQ1hqRL9pmkkrOdS9mEVlCSlY17xb7cT0eRyc8zQETZSzUo8=
X-Received: by 2002:a05:6808:1907:b0:438:1c76:d40 with SMTP id
 5614622812f47-443a2ee2568mr3275130b6e.4.1760791304507; Sat, 18 Oct 2025
 05:41:44 -0700 (PDT)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
References: <20251013193028.89570-1-mrout@redhat.com> <20251014053608.pwlnexeh7mwjrvsc@lcpd911>
 <fdac8d84f266ba85d517542bdad0592bdc33b95d.camel@redhat.com>
In-Reply-To: <fdac8d84f266ba85d517542bdad0592bdc33b95d.camel@redhat.com>
From: "Rafael J. Wysocki" <rafael@kernel.org>
Date: Sat, 18 Oct 2025 14:41:29 +0200
X-Gmail-Original-Message-ID: <CAJZ5v0iLCcCpiBqgQM=GcEAnQvZxgbtMy+bWGrWDQEikYOgC=Q@mail.gmail.com>
X-Gm-Features: AS18NWBhSRjY-f9IMuTmjtqqcA4jUMMI_QfRGQ6tJS1UDAc9Sk2pfDPrZAvpdNw
Message-ID: <CAJZ5v0iLCcCpiBqgQM=GcEAnQvZxgbtMy+bWGrWDQEikYOgC=Q@mail.gmail.com>
Subject: Re: [PATCH] PM: console: Fix memory allocation error handling in pm_vt_switch_required()
To: Lyude Paul <lyude@redhat.com>, Malaya Kumar Rout <mrout@redhat.com>
Cc: Dhruva Gole <d-gole@ti.com>, linux-kernel@vger.kernel.org, malayarout91@gmail.com, 
	"Rafael J. Wysocki" <rafael@kernel.org>, Len Brown <lenb@kernel.org>, Pavel Machek <pavel@kernel.org>, 
	linux-pm@vger.kernel.org
Content-Type: text/plain; charset="UTF-8"
Content-Transfer-Encoding: quoted-printable

On Tue, Oct 14, 2025 at 6:54=E2=80=AFPM Lyude Paul <lyude@redhat.com> wrote=
:
>
> On Tue, 2025-10-14 at 11:06 +0530, Dhruva Gole wrote:
> > Btw you can't include a R-by tag in the very first revision of the
> > patch. This needs to come from Lyude on a public mailing list and only
> > then can it be picked up.
>
> JFYI - I don't know how consistent this is across subsystems. I do usuall=
y
> post my R-bys on mailing lists, but it's not unheard of/unusual for folks=
 to
> pass R-bs through means other then mailing lists (like IRC).

IMV, they should be on a public record.

> Regardless, happy to post it again:
>
> Reviewed-by: Lyude Paul <lyude@redhat.com>

Patch applied as 6.19 material, thanks!

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859191.eml"

Received: from mail-wm1-f43.google.com (mail-wm1-f43.google.com [209.85.128.43])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CBC921E511
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:46:06 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.43
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791568; cv=none; b=V0Oa/dQgJPPdxqXBeD063WC+74hFF7lJKwlXjFhs7QZZGVWKAJQPBLrdi5MRPbGdiojljvVagBxep9KIxbrpZXJ0BEmHj26xol62YxMvP3z5r5R0nAom9EEMegigN7xAduwGTDxMFZLY8bDJqqEvVe6ZqulqxXOWpeZTY1cwjSc=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791568; c=relaxed/simple;
	bh=ipty/4H7+5rl8fNwSsr6VwqgKEA4Cfr81uIfdpGBaNc=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=rxCDZL5vIUTPk2Z0qmqrELxW6/RcoxxYtK9s9BYO3+EWWyOQ9oO+Ugeb/td+3ibTybXaMYSQX8u1MybDs/Nn+ZS9BpwKWW5w12mDuHEzg3Rdjd9Q3kRMYDGyGx08eelVllshtV/s0aRPzTMjg550lEgjWsWDV+WOjVCPCTAs49I=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=B+iQ3KKb; arc=none smtp.client-ip=209.85.128.43
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="B+iQ3KKb"
Received: by mail-wm1-f43.google.com with SMTP id 5b1f17b1804b1-471b80b994bso5099715e9.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:46:06 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791565; x=1761396365; darn=vger.kernel.org;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :from:to:cc:subject:date:message-id:reply-to;
        bh=NRDae27n+EW9z3sFe7xVTYXCCUSru9GSplX7TwKn6SY=;
        b=B+iQ3KKbmm1KZlOPqFChHlqemLiRtnQiEhR/8JrouYBcjfkly0BvvfwmXEw/FILIjh
         BJ2NpApym07/4fE+eXQLmZtEIPyZYMyUa+GnLJO3Qn9rIe89icMWILkZVndb4DpkytKc
         qy4EM24zMdBs5Znmtp9vclB9A9cVp8G92drMAR2+QrwjOexh8R5q1GThSxnq6tv5kEAY
         VnZZ9Hk9bs35dbiwI8sNtmqfB9pW6pwLFXXRJk9ypEhPwKfCgb1u1Ofhr91HguQWaha0
         lU3RjtVMO8D6mrm5cVFF6ZcXrwgRCgEG595tWTcKIE2odU5Q2b6kyFCKpuifsYcuRC1l
         n8RQ==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791565; x=1761396365;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=NRDae27n+EW9z3sFe7xVTYXCCUSru9GSplX7TwKn6SY=;
        b=gsIZk3+h5/ZyGnrit2YuHw/XnOhnz7MuaX6q1moQReAlAXH7S+qY/M8dCtzdRor1oG
         8uFozBEDtEN2abOeYivpLbkPKX+6BIfKuBOyi2GDrbVOihB7pA8f39Vz5S+fWT/l//aS
         uCbMJ2V9NxAbD81lWzsqT1spNod/ySfEbW51vpCFDX100rzrSL1ozxumZ54+bFCSTlqq
         c7zQryZZEDD9AIrVlaJAUBdq62Rxn4mVTq9pt10j92ouqWSD7d/gXsXI1vsHqylpOF5v
         cG2k60WvbOON18nzGNkc1BvJ0iulJkUy8c9+teCXiuj31SySeOcTrCBRB7Z+yTmtMR/1
         u+Bw==
X-Forwarded-Encrypted: i=1; AJvYcCUbIeH1lkyV7yza70MLdu9YJYJI4HqstwOd76CD1BY+XxIoEV1j9WvEzLAmYhtKQGwHvTvSCLBrYH8poNk=@vger.kernel.org
X-Gm-Message-State: AOJu0YylTgmdaUu48IAC8fmp+AUBUCqjaAmnF3H6cwJYR/G+RIgmXH64
	bHingEDNl9HkvJmJ30Zu1lRdd0lZFTu2DDkd9yRf3W2YNRtV4FV1q1SKezCPuA==
X-Gm-Gg: ASbGncsV0kDkgzArUVGOzNkQSRopBpo0QEzWatKOLg4EXGttIugLVj1fh5mmzh07ZQC
	93A2P2BHZXb3dr7o7tfSWQ24QSNC920khelg1SfaL7E9Iqc8ifb6acwhNwmXHetOqabnWoEaobo
	fEuWvxjAoiD0gjUSq/N3Fhq632KSgfYY5roH3WLtxxaHQuiMjykrCRJHdV9SN2B2C9oeqWFQZB/
	IiDRCsP6an4/+fTR3t/5MVli3GgBEB+e96HqCk4/0TadKMh2OZNJktlDL2ao1JmLU1aOaes4s8k
	bAXEfVEvytewsVcrR+S/xrXbvccJKJ1YvGVQFv/IjKINQQCqOig1/Eok/0o05rNnp++KjdQzTWj
	WwapSJBpMOsmCGlrP9ytgRjomxb+brywzBY8UCghn1lx2ltsoyjDLzNikOQlWVsQDiyPx6x0Wj/
	aWBAwN0X2rbZeWy2u0ZsQzs09cHHYuKDc3PIeDCJiQKSSbpSPifWAXoQG8P+8=
X-Google-Smtp-Source: AGHT+IFyFnknhz6DJpA/W+HnNJLeyvUwLECQ2dA/m7ZFwdVON8k8RALCON4xRrvUX069kqPawyiTZw==
X-Received: by 2002:a05:600c:3b83:b0:46e:3d41:6001 with SMTP id 5b1f17b1804b1-47117925171mr75159735e9.34.1760791564682;
        Sat, 18 Oct 2025 05:46:04 -0700 (PDT)
Received: from ?IPV6:2001:861:3385:e20:2acd:89a8:83d9:4be5? ([2001:861:3385:e20:2acd:89a8:83d9:4be5])
        by smtp.gmail.com with ESMTPSA id 5b1f17b1804b1-4711c487dfesm106194605e9.17.2025.10.18.05.46.02
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Sat, 18 Oct 2025 05:46:03 -0700 (PDT)
Message-ID: <3f97061a-4156-469e-b062-d6f7e68d4ad8@gmail.com>
Date: Sat, 18 Oct 2025 14:46:02 +0200
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH 1/4] drm/sti: hda: add bridge before attaching
To: Luca Ceresoli <luca.ceresoli@bootlin.com>,
 Alain Volmat <alain.volmat@foss.st.com>,
 Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Maxime Ripard <mripard@kernel.org>, Thomas Zimmermann <tzimmermann@suse.de>,
 David Airlie <airlied@gmail.com>, Simona Vetter <simona@ffwll.ch>,
 Andrzej Hajda <andrzej.hajda@intel.com>,
 Neil Armstrong <neil.armstrong@linaro.org>, Robert Foss <rfoss@kernel.org>,
 Laurent Pinchart <Laurent.pinchart@ideasonboard.com>,
 Jonas Karlman <jonas@kwiboo.se>, Jernej Skrabec <jernej.skrabec@gmail.com>
Cc: Hui Pu <Hui.Pu@gehealthcare.com>,
 Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org
References: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-0-92fb40d27704@bootlin.com>
 <20251003-b4-drm-bridge-alloc-add-before-attach-v1-1-92fb40d27704@bootlin.com>
Content-Language: en-US, fr
From: =?UTF-8?Q?Rapha=C3=ABl_Gallais-Pou?= <rgallaispou@gmail.com>
In-Reply-To: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-1-92fb40d27704@bootlin.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit



Le 03/10/2025 Ã  10:59, Luca Ceresoli a Ã©critÂ :
> DRM bridges should be always added to the global bridge list before being
> attached.
> 
> Link: https://lore.kernel.org/all/20250709-sophisticated-loon-of-rain-6ccdd8@houat/
> Signed-off-by: Luca Ceresoli <luca.ceresoli@bootlin.com>
> ---
Hi Luca,

Acked-by: Raphael Gallais-Pou <rgallaispou@gmail.com>

Best regards,
RaphaÃ«l>


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859192.eml"

Received: from mail-wm1-f48.google.com (mail-wm1-f48.google.com [209.85.128.48])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id B9E172472B6
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:46:26 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.48
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791588; cv=none; b=cr5Qv8Pz0NFGZTTnYLFhrZz41VnPYlD72f/aJ7NqoWTxzRf5ClSIc+O/cr4xedsUeysVPEh2wwqh38D5/xJBbviJDJ7otiWGfbOv3Zz3MeEBRJ18UPYB8Gtm4KRfFRGBq05hrjojBMSBn/9SLoQmxFJVr1whjtyWPg1Y2Y9xIHI=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791588; c=relaxed/simple;
	bh=ipty/4H7+5rl8fNwSsr6VwqgKEA4Cfr81uIfdpGBaNc=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=DPpOyN7m44nAPl+t8RmnwRvHgF+uU3wjslVg8kkpzveB6yoqipu+BptXgCDefoY9VvLBBBZjAZC8pWoqQ+DdfU84IzhV1RGyrvEzpJ6ug9bgm6urgQjJidR31DgCZj2HxGa+9FtH/TeaExiXLcwzEThaG7PH55g5RsZROhaT8VQ=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=bE4He3+x; arc=none smtp.client-ip=209.85.128.48
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="bE4He3+x"
Received: by mail-wm1-f48.google.com with SMTP id 5b1f17b1804b1-47106fc51faso32243445e9.0
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:46:26 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791585; x=1761396385; darn=vger.kernel.org;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :from:to:cc:subject:date:message-id:reply-to;
        bh=NRDae27n+EW9z3sFe7xVTYXCCUSru9GSplX7TwKn6SY=;
        b=bE4He3+xBZlRA4G7v73b0x5cn2qwVLy9rqib8/aOIh7zLa6DVS6dJVQNxcjP9/m3/q
         VxHqnHiRghHI3EiHINb29ipZXBfToNJ2iSdLkWVhLq3aLicC2iQP7FA1K4zAJpfR7/Vd
         ebkzbuoC9yOrplU5mlNB6fv4yL8HrYsdoBNzrfBhVAvxzq+3MiUgLGnIzjSRpKNBHveg
         tagwD3zYWEEoojpiFa+cx5Tybq/5hoOlqE6ONUdqbtPb2X32+yTcn2rO/oXGT7lPejWH
         aN4MKHLxASFfnEW3F2q2zTRU1MVJN5FzGlN84OwKpL7Rbz/KMY6vGU5ld0fWB27zEWMK
         bRbw==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791585; x=1761396385;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=NRDae27n+EW9z3sFe7xVTYXCCUSru9GSplX7TwKn6SY=;
        b=gFTIQC8l7KL1GawS3wtAlk3mv8FPg/BxeYvxkvVPJm8ku3PdoYehU01Ex+3Dvbxq5Q
         NAwFrACDJU6DSD8AMAD8TL2WBSeuJ9G4vF3mdrZlzIrSgnXRsMOn4MCZlu90eA1NgT8Q
         QWsDYvV72qafuHDGmwBbS3iH0/ncRbpM1/oigktP8XHf1TQs3U89zgpvT+QxH8mfCyyv
         7sz5FLE0iHwNP6own7v2nMbdM+6qd2K9Bc8c2JJmmSzOs+ZrKGXe3XgN+u9jS058OyuI
         3J3Tf7YTfxDexJVl4lI1eAwoVdbUg6SIvpx3UisxBwBsHZiQiJEU3g/0yJlEPoNYvMEt
         mPjg==
X-Forwarded-Encrypted: i=1; AJvYcCUMK+dfZH7brTQLRm1uB4KJTJb7gTjEEkkABuhfrhynx4wwoWmfcaBYa07B92qiluPMQEZaD0Jm/c2E5zY=@vger.kernel.org
X-Gm-Message-State: AOJu0YwM2PrXtIMvEnLMKRX6xG5ncZeHZpTdJB67H3EXZDAsD4erNMm1
	iF/SRrQOKoyg1J0jaRNl5RfP+3BYkFwlLEz96RqWw0B3p2SqCrPdi4mv
X-Gm-Gg: ASbGncvVdBe6fI+VkVDA4MlwJV9LLxqXdmZfazYveTBoBa8LtD0Ys9s0BllU0+x1R2b
	eaDYhIxN9sX164GrucydWRBnJSnZ2cBvYoh4SCYlE/HkoVNbmOIJ8AN5qfFcPQuQyO+2edqRHbn
	GakqfTNMbZ/A2vHDpCd5Hu0gwnuvxSJh7gpWfki+4AvQthyDW2CZ22AS8DnaizBVe/OPQPW0A9N
	D1r69kEawC/IN5VvGFpnr+sOSnB5C6Bzx32AyfympZTDHta23BaHO64dCB++6DGMi4BTP44DJU6
	5F/t6h+ydUXQN8bQonsVSSsX0ChrV1V/2iAJoIGgxwZ8Ib4MS939M2GBYD09jPpubU70l/JTRP+
	mPGfxQQB4xplJJFepuZ6XOykS5D/weY7CGjPeTkWvv0fvZl4Z6oYsR34yY5Y5875rWwajikuyiE
	oAepknycL8FxY/VWsn9cBUY6OSlyLmI5ICrgA0MBp/YZevgop3
X-Google-Smtp-Source: AGHT+IHciheUaedaQWFrdBB059jOtAnHjQgXhJiw7swZ0lJsz0WMoNbXw/S7INuIJ01go/odvMDV6Q==
X-Received: by 2002:a5d:5f82:0:b0:426:da92:d3a1 with SMTP id ffacd0b85a97d-42704d74d3dmr4558479f8f.24.1760791584863;
        Sat, 18 Oct 2025 05:46:24 -0700 (PDT)
Received: from ?IPV6:2001:861:3385:e20:2acd:89a8:83d9:4be5? ([2001:861:3385:e20:2acd:89a8:83d9:4be5])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427ea5b3acfsm4914970f8f.14.2025.10.18.05.46.23
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Sat, 18 Oct 2025 05:46:24 -0700 (PDT)
Message-ID: <048d5e20-8683-413b-8eda-cc1ec901ac54@gmail.com>
Date: Sat, 18 Oct 2025 14:46:22 +0200
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH 2/4] drm/sti: hdmi: add bridge before attaching
To: Luca Ceresoli <luca.ceresoli@bootlin.com>,
 Alain Volmat <alain.volmat@foss.st.com>,
 Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Maxime Ripard <mripard@kernel.org>, Thomas Zimmermann <tzimmermann@suse.de>,
 David Airlie <airlied@gmail.com>, Simona Vetter <simona@ffwll.ch>,
 Andrzej Hajda <andrzej.hajda@intel.com>,
 Neil Armstrong <neil.armstrong@linaro.org>, Robert Foss <rfoss@kernel.org>,
 Laurent Pinchart <Laurent.pinchart@ideasonboard.com>,
 Jonas Karlman <jonas@kwiboo.se>, Jernej Skrabec <jernej.skrabec@gmail.com>
Cc: Hui Pu <Hui.Pu@gehealthcare.com>,
 Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org
References: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-0-92fb40d27704@bootlin.com>
 <20251003-b4-drm-bridge-alloc-add-before-attach-v1-2-92fb40d27704@bootlin.com>
Content-Language: en-US, fr
From: =?UTF-8?Q?Rapha=C3=ABl_Gallais-Pou?= <rgallaispou@gmail.com>
In-Reply-To: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-2-92fb40d27704@bootlin.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit



Le 03/10/2025 Ã  10:59, Luca Ceresoli a Ã©critÂ :
> DRM bridges should be always added to the global bridge list before being
> attached.
> 
> Link: https://lore.kernel.org/all/20250709-sophisticated-loon-of-rain-6ccdd8@houat/
> Signed-off-by: Luca Ceresoli <luca.ceresoli@bootlin.com>
> ---
Hi Luca,

Acked-by: Raphael Gallais-Pou <rgallaispou@gmail.com>

Best regards,
RaphaÃ«l>


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859193.eml"

Received: from mail-wm1-f50.google.com (mail-wm1-f50.google.com [209.85.128.50])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 6670E1E511
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:46:39 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.50
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791601; cv=none; b=Reh4YEzO7kJk+m01VCDAzSQ8Er6tiT7kJ5voAtvV7C8IDwzhxLUpTpLegzkC7BGxZ+sqYjWdPdkQNEDbMczjOm3M8CUHTBhtCSsMwyZQyF2csC8/qmHwk8FI+MWmy76lZZcYJpkfiP8/wZLayz8IakLHXivru44Zzvqpxp1g+UY=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791601; c=relaxed/simple;
	bh=9SHJU52Ukj3vS5n8j3mN94TcvuvNdEkAm/urmcspB2M=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=kJJGCIYdRCXUp9wAA1FG0obFKAMi+8HDrjuJFJauxGtujba42wIWmLk0jj+ta+207goxRcz/RmFXCiDwPe4TGivYUy49xraPig4Sl/Zwa6EQuuH10WUDw62rWXMWAGrphk5XUuTkdhQMTQ2r7Ff+hVHsLK5w4tswMsMlWJHqtr4=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=YwBsGlES; arc=none smtp.client-ip=209.85.128.50
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="YwBsGlES"
Received: by mail-wm1-f50.google.com with SMTP id 5b1f17b1804b1-471076f819bso22928445e9.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:46:39 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791598; x=1761396398; darn=vger.kernel.org;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :from:to:cc:subject:date:message-id:reply-to;
        bh=InrI7Nfp1NYd+ZIKEO2xbQ29jEdwIZK3y4xYlXvgeH0=;
        b=YwBsGlESyjTuOFhel+miJnIrWbHolRQxbcM6fMHgOJHd307ke5mNlMILPkpEdK/+41
         0+1HxyM4zvcvAI3FhrKJrqaEKry2PgbS7Kj1HQaaMMzPuv1744FFhsV0veG7xabBsH0k
         dqKeCjGbGno91ZHJTFmBVq3ckfyU83cfEU39cV+gWftAl4Misxz9STRgnCVhpVS/Lxn0
         q3Y27GiZy10Ojxl3o8Tp8A96AQ2OXTOLGjvRN2hBHEjJUPkM3dOpdooLyE3zSCZzKimn
         9r5pXDJqnzTfg1tmw21RCkXmbArPPEUPOHHxLl+2c8YImAYfmBMrj1n9bvLn2d9nvBai
         NOvA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791598; x=1761396398;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=InrI7Nfp1NYd+ZIKEO2xbQ29jEdwIZK3y4xYlXvgeH0=;
        b=r4+qUJ5TQH/z6pjiL7fjsGZ083pXpCpS/ptgUYdPpVomHtZsATv7Hpiyp3+NM2RTWg
         LfrBZN376lYozJ0LZQ7ZNxs2secIAaII2g3dMukVpQWAh9+lD8buU7+Rdbng9phRwH7j
         1vcZ2UpraEAIm1itqfYl6EAp18Fh+bm1pRBHTatbgvPpQo7zvH42z7h/9em/Lyi8r2+E
         8hbkKUpQ3SPNuoAk8Vgzp2rtmdFaXs4vGBOS8ZE5FUJLtpwV/y4w0dlVcYSlXeiySZcF
         dQmgWOSmkfF2QdyOJxJSVgUWeV3TRWesMxoqZycxEakMhozc8ndRbFfhtbWJSjG2IhWc
         +c+w==
X-Forwarded-Encrypted: i=1; AJvYcCWudKftRxOqFwVBBVl1WXxJ9yMiVZaO6hJWRuh8Au0RN75ANSPTrTD9DA7mUL2Vl9AxmBObOWvOcXpHAT4=@vger.kernel.org
X-Gm-Message-State: AOJu0YzKYoZNKifHEKBKpYPpM6CLctzyaoA1YQkRRqFDIvZ+oA8akXCK
	uigxUmcMoK/c4XCGdqcDrdR5DhJ5CraGsirO9buyMzs8fc8w4fDhh9Wg
X-Gm-Gg: ASbGncvOiKQEJ7D8NUdjzXqDlSQ9YDf8NVp0zOTJmAlInMCi06UekJdnVYr4HCECerf
	5j6dfwOY4SmtZ3SoNzC8rvFmHM0QTf6Jm4Jhrx+/UzhPHXaXUeH4f6ctsAKyWy9NicO0xphItDH
	INOWquNU6ybQ07cZ2HsWsuwpzBZFptQSr9eTlJIGqfcg56N+A5vJiDu1aaE2JndNw/829hrRyuM
	8ZwG3wzi1Am+HdAsC7JB9yL9qwwPHWQsqxQsvT0RSrV59U8VvC+CeAv529radrF5wD82O4cmvAe
	PnFa5fLPy7oPXYUzK4jxWCboc/O1T+s5sYvBuAZueVKKxTnKo2SPYt0tMYNcI3FRTJsnEoEjW1m
	1SNB3hasbXEbcEUCrYYAOtoqbVxMzF7sKXKsE7979fARiX/lxcnywJhJof/oNVFlOcx+m95e3Nn
	wwMgs5Nhwzxa05H3HXMcf+48Tk0xlNhaWdE4MlQqCGnxU/QP4jZBcYnPGWsSY=
X-Google-Smtp-Source: AGHT+IENxpeW+lY77m0+5KTzVSjMas6cNGY59trgXHqIQUrSp7xcHqXWQxlyCxX/qR2myN3RoqtoKA==
X-Received: by 2002:a05:600c:3581:b0:45d:d5df:ab2d with SMTP id 5b1f17b1804b1-4711790bf23mr51028465e9.26.1760791597612;
        Sat, 18 Oct 2025 05:46:37 -0700 (PDT)
Received: from ?IPV6:2001:861:3385:e20:2acd:89a8:83d9:4be5? ([2001:861:3385:e20:2acd:89a8:83d9:4be5])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427f00ce3e2sm4754007f8f.47.2025.10.18.05.46.36
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Sat, 18 Oct 2025 05:46:36 -0700 (PDT)
Message-ID: <ba6e494d-d318-4cf2-8ff0-c29100099dad@gmail.com>
Date: Sat, 18 Oct 2025 14:46:35 +0200
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH 3/4] drm/bridge: document that adding a bridge is
 mandatory before attach
To: Luca Ceresoli <luca.ceresoli@bootlin.com>,
 Alain Volmat <alain.volmat@foss.st.com>,
 Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Maxime Ripard <mripard@kernel.org>, Thomas Zimmermann <tzimmermann@suse.de>,
 David Airlie <airlied@gmail.com>, Simona Vetter <simona@ffwll.ch>,
 Andrzej Hajda <andrzej.hajda@intel.com>,
 Neil Armstrong <neil.armstrong@linaro.org>, Robert Foss <rfoss@kernel.org>,
 Laurent Pinchart <Laurent.pinchart@ideasonboard.com>,
 Jonas Karlman <jonas@kwiboo.se>, Jernej Skrabec <jernej.skrabec@gmail.com>
Cc: Hui Pu <Hui.Pu@gehealthcare.com>,
 Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org
References: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-0-92fb40d27704@bootlin.com>
 <20251003-b4-drm-bridge-alloc-add-before-attach-v1-3-92fb40d27704@bootlin.com>
Content-Language: en-US, fr
From: =?UTF-8?Q?Rapha=C3=ABl_Gallais-Pou?= <rgallaispou@gmail.com>
In-Reply-To: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-3-92fb40d27704@bootlin.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit



Le 03/10/2025 Ã  10:59, Luca Ceresoli a Ã©critÂ :
> At the moment it's not documented that you need to add a bridge before
> attaching it. Clarify that.
> 
> Suggested-by: Maxime Ripard <mripard@kernel.org>
> Link: https://lore.kernel.org/all/20250709-sophisticated-loon-of-rain-6ccdd8@houat/
> Signed-off-by: Luca Ceresoli <luca.ceresoli@bootlin.com>
> ---
Hi Luca,

Reviewed-by: Raphael Gallais-Pou <rgallaispou@gmail.com>

Best regards,
RaphaÃ«l


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859194.eml"

Received: from mail-wr1-f52.google.com (mail-wr1-f52.google.com [209.85.221.52])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 39D5827877D
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:46:53 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.221.52
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791614; cv=none; b=gFWulZ8r5H+rOzsKJn0X9d0HA5BRkWvfZ/3120hlebNCONUA/Pl3ryZBQPxqLU/CTvcOzgfMPNiqcMHC3K/Jz/CvK7VCz2M8uFQl6pKyWAGGIKBHayV0FLM1970y5NE/nQwT3AosXrh1t7INIu1zXnW5f9EiQIYVZVrT6paRXMw=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791614; c=relaxed/simple;
	bh=Gs8DaJlPwpW15lfb/H5juDARFqslXLd1KCuuHPo2maA=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=b41m0DxoGIuj1sKWfG0EKfrFvFXF5D4BUI/NKqns57n4bWxku3juilatksurmhOhOVuqF7Zudr0c7pkY/JaKaIMbGdPsFeyCB7HhbosnpvXRU4WuEX7oINkee0ly+8cV+1YhI9VrmZIMr1Rh9cQgh/F8V8PlYgWGPlDd000NMNU=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=EoGC6DwV; arc=none smtp.client-ip=209.85.221.52
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="EoGC6DwV"
Received: by mail-wr1-f52.google.com with SMTP id ffacd0b85a97d-426ed6f4db5so2189205f8f.0
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:46:53 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791611; x=1761396411; darn=vger.kernel.org;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :from:to:cc:subject:date:message-id:reply-to;
        bh=IwINcystRjoGvSWPk32ya6bCmX4nJsdTWZ/ZarypZXM=;
        b=EoGC6DwVZWKxPW+81u6Nh9XEqcpLNKmh0tIMXXaKKBXyyWWQQaocmPU3u52otrVIII
         GmkU5bW9xjSwqrLJI76JJUbecZ0eIgWF8N2iPEAHpdYNsht17hQa8VYQ0hiwcsz3CfyO
         dhcFQzxSN6yUYznEHHn11YwhkQNzr3kpSghv6oIb3Ux993jYc8JJGHySQYLktXRs3ODT
         WV4I2dv1Yjz4tF7lz3HPN1WtZ6MZ+ITmdPtXdX7FI/l7v6lktcLpHzBwDmSj8noY/xAf
         1PyC3A2YkWdcsWZkAoePxewG7NKoKg2brEc8jzIhzV1a0J1nxHoB4+MdaEvpDGHNLpH+
         1jPg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791611; x=1761396411;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=IwINcystRjoGvSWPk32ya6bCmX4nJsdTWZ/ZarypZXM=;
        b=ASVDn7kgOndvPxcSnp2v0esNqz0Fk813lwbokbKK/UUJMX8U7eui7ik6Vnv28P/iuC
         h3oOn5mhHcmq4GTxsxoBHdcAGU1WpB7KAnpmbsQ5yJjeu8DYVch74JxSomuosCyIgHCL
         GNLEDkFz9xoGg6vylgm6I3xmfQhFqIlDofoWWzjqVJLxD3jEAQ8kTpUzePJsMOBrV1jU
         JZrVvIe3QYKd4MorJTX+aSFNGn+lGDrckxam1DImSpgqMKHoGCVswrBP6JiwHdhLxcMV
         ErXJinCcmdxILpm2WEGV1jdyqXcz9r3RTEkY/zeKFsJMfo87DKCJdsF5odWAnkeVqVp9
         ZRaw==
X-Forwarded-Encrypted: i=1; AJvYcCX+bBFRrm0axgSPeEIlp6Bqz0ZJm7k3yeqEI+NTaO3EOD+MHVQqZtfbNDVjlLfgWurdLNqVizKlEoiF0fU=@vger.kernel.org
X-Gm-Message-State: AOJu0Yz/D609jGGp6JBH3WT0nFlZhOXlaBo+eVJwYQKXUIqrhL4531Ur
	NTgkkfkw2ok7V4W6qqjHo8Zp5TnUD4Y9BrLFO0qTbOti1JPp855wm9YW
X-Gm-Gg: ASbGnctDiU6w4WNoq6Awoc4M401V9k7v0w1STRVnnrusqpB0leRtMkwkDs7zk/mjEOG
	CuQtZdlYIw0SxdIKiWdMoUecqYgccoHQDB4nfZ428IwcaLWkJsmRwj5VNpQnvuu15sSrnK1K8pi
	AAXlb0J0jzJliJI+z0QzmBYbhTa7whn1p18P0JFhk2tfZqnMJBrps9fyF6MdR9ORFMBv9Xl60EK
	UASrwBSqArML5wCzAGt/ddjyVAv21C6HyLH2L/zbqFPcfxYu/aTdeh6JUk0PdbkE0AjORZtsBS2
	oSNl+U4g8nNmTJDbtaJDowxzm8aGFFsqdc6qX8fBlOR+3cgQuWBKNH5Zuv7j1T1wrB0v1SXtnp/
	yX+PnxyrrkvADfixl4f5ZUQBu5uszG8thN6QvrVC2lF3VR3M7E7fTt4pdf/GWF5xr6Xd2OU64cS
	yRCMUe7QouYXIyzsmbdI/R7UaacocI+gJN2XvOP28pbQ1k/1gqvQedNGzSSJs=
X-Google-Smtp-Source: AGHT+IF5RJYLSmA+oH07tnmvmsNyWmRsGcHhrDvL8wpjhULq8NfGc4GpnDL/KGS4NnlMtDmLKBwXmw==
X-Received: by 2002:a05:6000:4586:b0:425:6fb5:2add with SMTP id ffacd0b85a97d-426fb7bba0dmr5569895f8f.19.1760791611546;
        Sat, 18 Oct 2025 05:46:51 -0700 (PDT)
Received: from ?IPV6:2001:861:3385:e20:2acd:89a8:83d9:4be5? ([2001:861:3385:e20:2acd:89a8:83d9:4be5])
        by smtp.gmail.com with ESMTPSA id ffacd0b85a97d-427f00b9f71sm4781988f8f.37.2025.10.18.05.46.50
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Sat, 18 Oct 2025 05:46:51 -0700 (PDT)
Message-ID: <a822d284-f2a2-40f8-987a-6e2f70a22fcf@gmail.com>
Date: Sat, 18 Oct 2025 14:46:50 +0200
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH 4/4] drm/bridge: add warning for bridges attached without
 being added
To: Luca Ceresoli <luca.ceresoli@bootlin.com>,
 Alain Volmat <alain.volmat@foss.st.com>,
 Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Maxime Ripard <mripard@kernel.org>, Thomas Zimmermann <tzimmermann@suse.de>,
 David Airlie <airlied@gmail.com>, Simona Vetter <simona@ffwll.ch>,
 Andrzej Hajda <andrzej.hajda@intel.com>,
 Neil Armstrong <neil.armstrong@linaro.org>, Robert Foss <rfoss@kernel.org>,
 Laurent Pinchart <Laurent.pinchart@ideasonboard.com>,
 Jonas Karlman <jonas@kwiboo.se>, Jernej Skrabec <jernej.skrabec@gmail.com>
Cc: Hui Pu <Hui.Pu@gehealthcare.com>,
 Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org
References: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-0-92fb40d27704@bootlin.com>
 <20251003-b4-drm-bridge-alloc-add-before-attach-v1-4-92fb40d27704@bootlin.com>
Content-Language: en-US, fr
From: =?UTF-8?Q?Rapha=C3=ABl_Gallais-Pou?= <rgallaispou@gmail.com>
In-Reply-To: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-4-92fb40d27704@bootlin.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit



Le 03/10/2025 Ã  10:59, Luca Ceresoli a Ã©critÂ :
> DRM bridges must be added before they are attached. Add a warning to catch
> violations.
> 
> The warning is based on the bridge not being part of any list, so it will
> trigger if the bridge is being attached without ever having been added.
> 
> It won't catch cases of bridges attached after having been added and then
> removed, because in that case the bridge will be in
> bridge_lingering_list. However such a case is both more demanding to detect
> and less likely to happen, so it can be left unchecked, at least for now.
> 
> Link: https://lore.kernel.org/all/20250709-sophisticated-loon-of-rain-6ccdd8@houat/
> Signed-off-by: Luca Ceresoli <luca.ceresoli@bootlin.com>
> ---

Reviewed-by: Raphael Gallais-Pou <rgallaispou@gmail.com>

Best regards,
RaphaÃ«l>


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859195.eml"

Received: from mail-pf1-f171.google.com (mail-pf1-f171.google.com [209.85.210.171])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CC9C2155A25
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:49:19 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.210.171
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791761; cv=none; b=RMq/YBoDDizmafKfAXWSKsnxrdXtxKazRBCNk/oh7sCU4zSCac7EnKGBpBliZ088qVHJLE2k1rQoCYuVMQfJyF8/zQIoheCaj7W1RAzwM9ZFC8xb01RuevO0VDQExLm1HQnqjkO6QODO302Q9RtDE5R0cDfoRGTo3Quk8m2Db3Q=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791761; c=relaxed/simple;
	bh=4MTBUHheRoqjhOd7BBqxKj4o02h2M7yKv1+pjK7zjNQ=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=rsocve03ANnR8qQzmZFR8Xxvdp0V3CJ6fUKVXsvRCbD0/lTP/9kn1ROQDWIKAp8FAGYYMJpCMvAZzs8JTpg77dQvzg28Aw/tRKVjwBYAG4OWNyPAnMvtIw5B7bFMV4aYkp+fffW8UqYvMgMuryw/Tp+rvCVuULgiI4Wmn1fQSus=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=IDKbV9bK; arc=none smtp.client-ip=209.85.210.171
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="IDKbV9bK"
Received: by mail-pf1-f171.google.com with SMTP id d2e1a72fcca58-780fc3b181aso1696755b3a.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:49:19 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791759; x=1761396559; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:sender:from:to:cc:subject:date:message-id
         :reply-to;
        bh=FNAClAvOnKjWB7HSzhh0yIx7GLLOVFoEN9nJoFbnxAc=;
        b=IDKbV9bKO+f04b0GOzAeXWpCiGQBfkLUB8Hqb8eG3fFSVZev9NVYb7bHrYIYfajgzW
         RZjapFS3TVokfOPaaW7bVxMucyiyRpENAgVGFHdxjx53fM/H5dZ0JStAlvqIA5vWF9oD
         HDK4pohPAQ4SGSDUOcndlLvcopheovBSnteYuQl7+tuVDMZ5czlr/YHpze0yzeDTCykn
         lTxeTktgFtp/bNVKehYMCcmZPMHWfxPmPgwuQaCrwBePoOE1MzgXBpIRB1OVjY6Br8vg
         tzAw6I5Z7cXdqjOmUY7PBdUs55rVo+xGSmnYObz1f3r4DbYA6ICn9vf/lCNgUBeZBt0q
         gjVg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791759; x=1761396559;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:sender:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=FNAClAvOnKjWB7HSzhh0yIx7GLLOVFoEN9nJoFbnxAc=;
        b=CJJdfrLbrYfvayG9kELSP8XdL40k4MqZQw7sCVEjjpuXN7zl3tFcd87LgXSLiLHuve
         ZXiLaWGCghH3OM1g5ultwGzlfJg1DqW7MBRjodof3XkxT+OfUWB4IrKPTsVQ6evhQBxJ
         4V/bs+F2OexYtxYe90v7Xey43RRU6VBZtnLJhDGhmDh6gte3QyYa38pJMP6hdRJF1vB1
         5jPDFqVm4J3uBJ72VmN01GRdsZNx9aDiiRdz6iEi2Nu7mkS9r2S+15jHlVxnBwQ0MF8V
         znKWTUyWj7MAn0ehY1lfptWRk/PXLmpVF+fTG0W/qhqDSfxgXC0PkXEFEAe5+AKBoceM
         zJdQ==
X-Forwarded-Encrypted: i=1; AJvYcCUABQmIGfptdZV3DEMlOI+T203mRGTRRoYM8nEWAmPtEUREWAx6TPr3wsYhuSKw0kKLVJRCPNQ8sNI9F2c=@vger.kernel.org
X-Gm-Message-State: AOJu0YyHGe05EbWf9vpETetWLP+TssVays7M088lyRXRpapbC+rkxBdu
	uMbixews8PWPfMD3ONtD5wedxw7c+z1C8HYnqCd51uh6mHSAJ9xGpwSH
X-Gm-Gg: ASbGnctBW2ulXyvhZyGW+uGVBD+WbBIuhpfs6NZWYjrfEdVNWCGSjbv2XKIgwRKVJGP
	/BfhQnG5d+bax5Dsn5cSV+quRDIq7tYi/sp2iBQnQVdMjBMM//YRdyhLhMqmuZb4iZ7aFqNPZen
	YICyP/Q7XneI235ju2LIv4BQTjpCZeLpPKVd/ZrzSDaGjb8UFeRXmdp9pjlnkGzqC5tSdPXYNkH
	OXhsrGEYzA1FhbZDVOYWHkioXt0+qPQQuTJbL4xkLUmWs4L/nCbEIDGLWfaZ3/+0obbpPmYnwpF
	ce4VZmofhmYt8e1bE84LoDoM+ykziDkRH/eE32UkrY9ASabif8gPUyzqOo0qxPg6YzreLEFihXi
	w6g7wA7D9c3AvmoJgAvwqI7dG6j4N0N1vB1UAnYPpyJ7ZDGBzI8pO55T6evi6FvZ9s4iQ9+JM54
	A5j5k6APUKAGZFZDXfFIgDmZk=
X-Google-Smtp-Source: AGHT+IGwvhlN1brRCS1BniG2CAvahGot/00JMhfB9nXhMtLgvouUhBqkuQKg7h/T0YyFAsClGr+64A==
X-Received: by 2002:a17:902:f551:b0:290:dc5d:c0d0 with SMTP id d9443c01a7336-290dc5dc3d6mr85320885ad.49.1760791758880;
        Sat, 18 Oct 2025 05:49:18 -0700 (PDT)
Received: from server.roeck-us.net ([2600:1700:e321:62f0:da43:aeff:fecc:bfd5])
        by smtp.gmail.com with ESMTPSA id 98e67ed59e1d1-33d5df5c142sm2564379a91.14.2025.10.18.05.49.18
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:49:18 -0700 (PDT)
Sender: Guenter Roeck <groeck7@gmail.com>
Date: Sat, 18 Oct 2025 05:49:17 -0700
From: Guenter Roeck <linux@roeck-us.net>
To: Ankan Biswas <spyjetfayed@gmail.com>
Cc: jdelvare@suse.com, corbet@lwn.net, skhan@linuxfoundation.org,
	khalid@kernel.org, david.hunter.linux@gmail.com,
	linux-hwmon@vger.kernel.org, linux-doc@vger.kernel.org,
	linux-kernel@vger.kernel.org, linux-kernel-mentees@lists.linux.dev
Subject: Re: [PATCH v2 1/3] Fix broken maxim-ic.com links to analog.com
Message-ID: <4cf1dfdd-6df1-43e8-a396-eb705e46aae7@roeck-us.net>
References: <20251017105740.17646-1-spyjetfayed@gmail.com>
 <20251017154755.32105-1-spyjetfayed@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20251017154755.32105-1-spyjetfayed@gmail.com>

On Fri, Oct 17, 2025 at 09:17:47PM +0530, Ankan Biswas wrote:
> In 2021, Maxim Integrated was acquired by Analog Devices.
> maxim-ic.com & maximintegrated.com links redirect to analog.com.
> 
> Broken redirects fixed to their proper analog.com links.
> Fixes warnings in 'make linkcheckdocs'.
> 
> Signed-off-by: Ankan Biswas <spyjetfayed@gmail.com>

Applied.

Thanks,
Guenter

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859196.eml"

Received: from mail-wm1-f47.google.com (mail-wm1-f47.google.com [209.85.128.47])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 520882556E
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:49:30 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.128.47
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791772; cv=none; b=PFMXiAtu32x3LR+3VZUraLMbSr7nBFENXfjX8flgyn+PmKg1c9mBxCUeRZhZHQrTnW9yK92VZVLNw1U7EIzKBe4bFdwoI5ukpusb7bs4zWfkF27Xf3iSi07cr/RAgUuloOagzKVs5OkoSM5uwdJxgN8l6TQVwMTVO8rjCJwXttI=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791772; c=relaxed/simple;
	bh=xl0J6jTaozT/dHBO6U9Z3rRlo1/kgpuvB4Ao9hHS2MQ=;
	h=Message-ID:Date:MIME-Version:Subject:To:Cc:References:From:
	 In-Reply-To:Content-Type; b=Na7PSKI9AFNMH0LGJiS6wHCjc6JUlkoYRcaVBS4bZMPI/Ku60smZyOArYc3lwA3yLohhXUGUPa3OkdUKK+0AZ6O4oL1AhRhKpIrk+SmiwtVa8bjpACbA2QwYNpAFyPImmruXiRXlO5NiksDYUIu2Op0Ro0puNhnkDmKcKyJXFgM=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=eLM/SFdR; arc=none smtp.client-ip=209.85.128.47
Authentication-Results: smtp.subspace.kernel.org; dmarc=pass (p=none dis=none) header.from=gmail.com
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="eLM/SFdR"
Received: by mail-wm1-f47.google.com with SMTP id 5b1f17b1804b1-471b80b994bso5125245e9.3
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:49:30 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791769; x=1761396569; darn=vger.kernel.org;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :from:to:cc:subject:date:message-id:reply-to;
        bh=BVsHNru5NLHi/zbAVLbblzv/GOgnRaHcf6YnsrPJO/0=;
        b=eLM/SFdRxgRnyTzXidU06FU1pOcKNsCJKGIdfcCzwB15kjsWIDgFJFzOIiS2yKSBu7
         a6Ed7tJKDir5XuLeeXiqSxSjAhfor3DE42rfpH0vZ946jiWZxEdw9Ae7fTQi3Kk/JOLN
         auRRex8s+jRD6lH/+TXfnFjcT6V6JAyI/LI/1rjo83QBQLvAnt/iD9kAopOiFEpZg3zK
         NzAss371dl206Af7waTRGBdP/zM9NIFG8UuTzqhkjGO+BSh7zqkdEQkXciptRZRIi4sn
         Vwg202iist5Hp7tTrRP2mb4ip1U/ttZEUKPpGznhg1f++SqPakXTmgzSG+OcmY3KBGbb
         HthA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791769; x=1761396569;
        h=content-transfer-encoding:in-reply-to:from:content-language
         :references:cc:to:subject:user-agent:mime-version:date:message-id
         :x-gm-message-state:from:to:cc:subject:date:message-id:reply-to;
        bh=BVsHNru5NLHi/zbAVLbblzv/GOgnRaHcf6YnsrPJO/0=;
        b=vNneJP8NUYCmquM2W/Fi76Ti6DGIqfkvTV6LnxaWriH51QlopZBJQijMRUPrTvhjmt
         suq4j7hPpI/mY2f/d/KXjuE9Y65wJuSrAN75PcKQSOuuLAs6m0mN6vfQoMeRBCaIGdIv
         wFceN6VQaqjR5lsvrIH/e5sEc6dp0Vb8dFfU42sy6gd7yDEZplshVnKA95XaScmDxJz8
         Lu2ZaAMH69tQi1D9KUEu+lwBTW3WZOpOe6xgWCMAK8oJQ4xSP3sCSkv06x3aXCJmPbj6
         4F5VVfEHuwutlPnOr5r5ZwBIi1MUlo2btaRUezLcUzCDx5WTOKMz5lpLuXtEUpzxpe87
         B8mQ==
X-Forwarded-Encrypted: i=1; AJvYcCV3f6bMHiCaurNni8CQ3pFXg4NK687ihuPlaAUO2Zun52vTMtt3pF7SVMsLcafzESP9HzU3tRdLlSblHfE=@vger.kernel.org
X-Gm-Message-State: AOJu0YzpnQHZntXW8Sm/4TrwbbKZiH24qBPnTVFRuivYNx0Y5MoTFI/U
	zriKZM6Y/v8mFShWakGMgG/szymHJhlwfGMAwvxHgTU/SEhjaUKVWgqi
X-Gm-Gg: ASbGncs2iEHVVk7CH886z6qGqfg3dxiX8GvUHy8d7bCjLpvkZY6DVXbYw4/5JwD+ekU
	akXcHq5TEu9IezAJ6m+iYlNPGD9nKsBtfzTbJvyVPYkPpdEKUExcm9HWcp1SpfRlxtlHyI9GZmH
	LiuZwQ+3FHSErIeUsgycSIPeRxwmV8VCC1Bp/zaAvlrXJsfqd/nJtIyA9QJc7kIcP7UYbzFx9gI
	GLZ1V+8RmKrcs0AHYMSkLR4xkevSbRkqovU5mycHAF3Fr5qjtz1yK31HmBDK0T4+/Xf5lEcyJxw
	CfqsZPuXlzv+QGS/WI9vCJjNBFWcbTdRwz8G9bviUEv1E3FFfAHHnXXHgy1AonepMM9AtoDNY/O
	mRrlYWpbhSxjL1/eRSGO2kVAax2TN8l0W3TNrZCqY9nCfmfhgx1DnPdi1kqLSXOEjTo8c0KlcEL
	10kGmEfue20N8APuepJo0hwkVDj9G9RTKyTUWSeKRpxh77j0teoShj4LR9Tug=
X-Google-Smtp-Source: AGHT+IHLLrG5j4m2n4PoPbuVmHZ69tvqUkFHujUfl3v7biPGdGGV8XmptNv3G0R/8+E6s3OfCTAULQ==
X-Received: by 2002:a05:600c:5026:b0:470:bcc4:b07c with SMTP id 5b1f17b1804b1-47117925d38mr58012555e9.37.1760791768501;
        Sat, 18 Oct 2025 05:49:28 -0700 (PDT)
Received: from ?IPV6:2001:861:3385:e20:2acd:89a8:83d9:4be5? ([2001:861:3385:e20:2acd:89a8:83d9:4be5])
        by smtp.gmail.com with ESMTPSA id 5b1f17b1804b1-4710ca4931csm75020945e9.0.2025.10.18.05.49.27
        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);
        Sat, 18 Oct 2025 05:49:28 -0700 (PDT)
Message-ID: <f3904ae1-bf1b-455f-b5ba-5d625b76222f@gmail.com>
Date: Sat, 18 Oct 2025 14:49:27 +0200
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
User-Agent: Mozilla Thunderbird
Subject: Re: [PATCH 0/4] drm/bridge: enforce drm_bridge_add() before
 drm_bridge_attach()
To: Luca Ceresoli <luca.ceresoli@bootlin.com>,
 Alain Volmat <alain.volmat@foss.st.com>,
 Maarten Lankhorst <maarten.lankhorst@linux.intel.com>,
 Maxime Ripard <mripard@kernel.org>, Thomas Zimmermann <tzimmermann@suse.de>,
 David Airlie <airlied@gmail.com>, Simona Vetter <simona@ffwll.ch>,
 Andrzej Hajda <andrzej.hajda@intel.com>,
 Neil Armstrong <neil.armstrong@linaro.org>, Robert Foss <rfoss@kernel.org>,
 Laurent Pinchart <Laurent.pinchart@ideasonboard.com>,
 Jonas Karlman <jonas@kwiboo.se>, Jernej Skrabec <jernej.skrabec@gmail.com>
Cc: Hui Pu <Hui.Pu@gehealthcare.com>,
 Thomas Petazzoni <thomas.petazzoni@bootlin.com>,
 dri-devel@lists.freedesktop.org, linux-kernel@vger.kernel.org
References: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-0-92fb40d27704@bootlin.com>
Content-Language: en-US, fr
From: =?UTF-8?Q?Rapha=C3=ABl_Gallais-Pou?= <rgallaispou@gmail.com>
In-Reply-To: <20251003-b4-drm-bridge-alloc-add-before-attach-v1-0-92fb40d27704@bootlin.com>
Content-Type: text/plain; charset=UTF-8; format=flowed
Content-Transfer-Encoding: 8bit



Le 03/10/2025 Ã  10:59, Luca Ceresoli a Ã©critÂ :
> This small series enforces that DRM bridges must be added before they are
> attached as discussed in [1].
> 
> This is part of the work towards removal of bridges from a still existing
> DRM pipeline without use-after-free. The grand plan was discussed in [0].
> Here's the work breakdown (â marks the current series):
> 
>   1. â add refcounting to DRM bridges (struct drm_bridge)
>      (based on devm_drm_bridge_alloc() [0])
>      A. â add new alloc API and refcounting (v6.16)
>      B. â convert all bridge drivers to new API (v6.17)
>      C. â kunit tests (v6.17)
>      D. â add get/put to drm_bridge_add/remove() + attach/detach()
>           and warn on old allocation pattern (v6.17)
>      E. â add get/put on drm_bridge accessors
>         1. â drm_bridge_chain_get_first_bridge() + add a cleanup action
>              (drm-misc-next)
>         2. â drm_bridge_get_prev_bridge() (drm-misc-next)
>         3. â drm_bridge_get_next_bridge() (drm-misc-next)
>         4. â drm_for_each_bridge_in_chain() (drm-misc-next)
>         5. â drm_bridge_connector_init (drm-misc-next)
>         6. â¦ protect encoder bridge chain with a mutex
>         7. of_drm_find_bridge
>         8. drm_of_find_panel_or_bridge, *_of_get_bridge
>         9. â enforce drm_bridge_add before drm_bridge_attach
>      F. â debugfs improvements
>         1. â add top-level 'bridges' file (v6.16)
>         2. â show refcount and list removed bridges (drm-misc-next)
>   2. â¦ handle gracefully atomic updates during bridge removal
>   3. â¦ DSI host-device driver interaction
>   4. â removing the need for the "always-disconnected" connector
>   5. finish the hotplug bridge work, moving code to the core and potentially
>      removing the hotplug-bridge itself (this needs to be clarified as
>      points 1-3 are developed)
> 
> Series layout:
>   - patches 1-2: add missing drm_bridge_add() to the 2 drivers known for not
>                  calling it
>   - patch 3: document that drm_bridge_add() is required before attach
>   - patch 4: add a warning in drm_bridge_attach() is drm_bridge_add() was
>              not called
> 
> The added warning might reveal more non-compliant drivers, in that case
> they will be fixed as they are found.
> 
> [0] https://lore.kernel.org/lkml/20250206-hotplug-drm-bridge-v6-0-9d6f2c9c3058@bootlin.com/#t
> [1] https://lore.kernel.org/all/20250709-sophisticated-loon-of-rain-6ccdd8@houat/
> 
> Signed-off-by: Luca Ceresoli <luca.ceresoli@bootlin.com>
> ---
> Luca Ceresoli (4):
>        drm/sti: hda: add bridge before attaching
>        drm/sti: hdmi: add bridge before attaching
>        drm/bridge: document that adding a bridge is mandatory before attach
>        drm/bridge: add warning for bridges attached without being added
> 
>   drivers/gpu/drm/drm_bridge.c   | 6 ++++++
>   drivers/gpu/drm/sti/sti_hda.c  | 5 +++++
>   drivers/gpu/drm/sti/sti_hdmi.c | 2 ++
>   3 files changed, 13 insertions(+)
> ---
> base-commit: 0f2efbe6d8305b91c9b2c92ebaf8c24a614bc305
> change-id: 20251003-b4-drm-bridge-alloc-add-before-attach-ef312c0b8a8c
> 

If drm-misc maintainers agree I can merge the whole series.

Regards,
RaphaÃ«l> Best regards,


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859197.eml"

Received: from mail-pg1-f182.google.com (mail-pg1-f182.google.com [209.85.215.182])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 45346155A25
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:50:18 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.215.182
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791819; cv=none; b=rwPBLsfvi0qdtytf6qyCo3VKjEy4r0w++mda4ZnSIkdCLSmvg+7M1PmfwKvOONsWTbzDw8+yPMKVoy8w6TjsyDQTsz1e80+K6THADrOw9L6Q9sXupebcpjZGT7LfEiM81qOi5GU1q0AKEt+74FntY0T/S9eP22fjQxL7enNJHG4=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791819; c=relaxed/simple;
	bh=JOhRgmB3DaDqj/0okhYJAPGij+Zt4PIUmY8n5GbX1DE=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=RG2i80suKD8N6wIopynaj2I9b4dKTB3ihrEreMdtTr1GJSnC3I88w+hvWeJy775+iHuFeAiUF0xU6Qa9H3o5r5KoCip0f6Sfoh1hQUpnXLH1VCAZPizwRLUid63NDjOwBfsiiOhhwb2FXK4Gvm3+SJ/koLwLRd8hjhxBH/8cBlM=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=Fw3zI/Sq; arc=none smtp.client-ip=209.85.215.182
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="Fw3zI/Sq"
Received: by mail-pg1-f182.google.com with SMTP id 41be03b00d2f7-b6a7d3040efso216555a12.1
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:50:18 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791818; x=1761396618; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:sender:from:to:cc:subject:date:message-id
         :reply-to;
        bh=sYQhiSmjIKAg9JpgY81CKHBnsaXySUjIdDWp5EpwSqw=;
        b=Fw3zI/SqZl3cgkqNzT+1oKFCWSaZs0qCgrtmcTIf4oFqdwfqkpDA5qE8cQ5UNcsO7G
         JZF9MZZVUCkJtJSVtJs3mNHtVYbww1Mte06xUIRDmKtW7nV6VG+WcY7G9xxYjjlg69RO
         BkAJGIy1q1yrJ3syx6Yh0kFAUFiInDS5jVebibMC4xt8XAXaL8WmF1DjZfyD3Wy4jy6P
         G6Q+5QUHhToUmTxucWJgHbX7Gtt9HdRVugT3naKFELJaE4bl2qLAJgDX6g1cagCsySxw
         fzP/aVWR6UcRy9bRbD5jsutsth027K529KIPb/FYgXZTIC9UBwuh/dz4EsExo7uzM8hE
         fUvg==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791818; x=1761396618;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:sender:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=sYQhiSmjIKAg9JpgY81CKHBnsaXySUjIdDWp5EpwSqw=;
        b=kTZCMRmeSSQtVJnYl+rs1cmASLMfIqSBy/njgQNkFebJQRyPq/yXWxCwkbDdxrBleb
         rziYUAqYAOWM7BEONsNWTC1yjK7Fh4xCeUa/pv0jtQrH/x7+xdruE/2JZoxv8awRkohu
         6LOaViJg/WAn1Dg3YBHzHhZvsoSLbirVGOXH3qguCmafgefg1nCPnM4SLV8CREC9okyC
         axwFhWykXRQj/1r82uPE8fzCHEWVeF7niH94lFsAh3/jW5Chk/I37Wyyki9w4lh0SbBp
         6HD/r8jToJH7cynFDgSE0KT+UeP5FVlXljOqTnGKPyjm9ni7B+U/EqccnBoPxGHGCl9J
         lwfA==
X-Forwarded-Encrypted: i=1; AJvYcCXh6X9O2Ty9ZB5NTKMLNY5HZcB5UxTLdX5eJraYxmRHit7j/CAvT0WV67oYtQxRkSt0Jwy6JvQxRUIxj2A=@vger.kernel.org
X-Gm-Message-State: AOJu0YyTPOgVwUSbKZ1IL2VEs3B/DaK29sBPHpvY2simMXoA2d1EEfuR
	YTciY9MErSYggyIuUpdN/uga+njhgC5gPIvzsO877Jvtr+Go0ybN9MrK
X-Gm-Gg: ASbGncsfdl1nDRjsRwH1D7+F9yghOQSE9VZuskLn3f6WYoNRUxafBPsfD+x2GMnl6oj
	3LBPMcYqMImD5CPN22HQA9Zt+xA+frmJrcN/MWt3HdPngdcEhxEdczTjU4qBdMIW7rAZ3ggvjX+
	u4ofbvA62kpmh2JWyYrXJmJDs/iUdq9C0OpsAPrPRzlI3chcFrp0LuLEf1DxY0OGCjSt0cB13Hq
	9H7mmhekuDtsd87Rvb9NKNgeD9NnGcq1dWNjECVsfYYlqvJH8qyiWlFOT9JcAKyiwVMy9yAYi4z
	YaqEjQf4qqx+rAHmwkojRMpp8cN272NGFWexG4M73zB85fUCn0BGsJ4SqXI2wBNb2AZVyD6ew21
	J4yuwC/x42tW3YraNZdjswO9d6H3YcchYJQxznfar4tGRUvJWM1qBNj59okW8LnXwazIyOHkq4E
	Pd+xRtzp+rbEXSvuARS+NdsjSMnomnwt7S4A==
X-Google-Smtp-Source: AGHT+IFp+N9rk211Uet/daZeKCeaXRrs242HKJkWvO8lWmZmRSdRDNcuzgrJxXar0a7TiUsx8ojtlw==
X-Received: by 2002:a17:903:2b06:b0:272:f9c3:31fb with SMTP id d9443c01a7336-290cba4dbb5mr86424535ad.58.1760791817569;
        Sat, 18 Oct 2025 05:50:17 -0700 (PDT)
Received: from server.roeck-us.net ([2600:1700:e321:62f0:da43:aeff:fecc:bfd5])
        by smtp.gmail.com with ESMTPSA id d9443c01a7336-292471fdcf9sm25575825ad.91.2025.10.18.05.50.16
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:50:17 -0700 (PDT)
Sender: Guenter Roeck <groeck7@gmail.com>
Date: Sat, 18 Oct 2025 05:50:15 -0700
From: Guenter Roeck <linux@roeck-us.net>
To: Ankan Biswas <spyjetfayed@gmail.com>
Cc: corbet@lwn.net, skhan@linuxfoundation.org, khalid@kernel.org,
	david.hunter.linux@gmail.com, linux-hwmon@vger.kernel.org,
	linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-kernel-mentees@lists.linux.dev
Subject: Re: [PATCH v2 2/3] Add missing datasheet links for Maxim chips
Message-ID: <6e12dd80-e02f-42cb-848b-6c79378e25ad@roeck-us.net>
References: <20251017105740.17646-1-spyjetfayed@gmail.com>
 <20251017161422.4404-1-spyjetfayed@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20251017161422.4404-1-spyjetfayed@gmail.com>

On Fri, Oct 17, 2025 at 09:38:05PM +0530, Ankan Biswas wrote:
> In 2021, Maxim Integrated was acquired by Analog Devices.
> maxim-ic.com & maximintegrated.com links redirect to analog.com.
> 
> Missing datasheets now available at Analog Devices added.
> 
> Signed-off-by: Ankan Biswas <spyjetfayed@gmail.com>

Applied.

Thanks,
Guenter

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859198.eml"

Received: from mail-pl1-f171.google.com (mail-pl1-f171.google.com [209.85.214.171])
	(using TLSv1.2 with cipher ECDHE-RSA-AES128-GCM-SHA256 (128/128 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 189E5274B23
	for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 12:51:04 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=209.85.214.171
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760791866; cv=none; b=eo0tKPv9xsGH6eJSjyI7/ymvBDsFg2VUBLoPJAr51YBk5kZAxzf9fWDu02GVGoPg0RHBPZcbRGFiEJmHWjrFh9vHvJL45FXClV6Lmz/xZLsKRhKSoE8dT/YL6CBpTjtV6RcbN7nZYF0iEk6t3Yq6piT1cF6ZLyk7PjaIP4Xd2Cs=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760791866; c=relaxed/simple;
	bh=V0ieA2RnANTRzHxRShpkIoitBOjKt+gysoH7B0foc4s=;
	h=Date:From:To:Cc:Subject:Message-ID:References:MIME-Version:
	 Content-Type:Content-Disposition:In-Reply-To; b=IbeqyvNHDaz5466HpiE1Fp5bqMn2oW4pHfOu/AKyPAgb1R77Z+YJpcLGvB2jPWeP/MqQL+NXG+fTpU8W/1PiFBtHbWhfsaYNxRFfRjB65rMT7Fc0Zm4jQRwKlCQtT9cpMt3AtFEUlx9FxvvkhPxtILX5NwJ+6QFHvOlwhwad6ek=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net; spf=pass smtp.mailfrom=gmail.com; dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b=HuvH1QPM; arc=none smtp.client-ip=209.85.214.171
Authentication-Results: smtp.subspace.kernel.org; dmarc=none (p=none dis=none) header.from=roeck-us.net
Authentication-Results: smtp.subspace.kernel.org; spf=pass smtp.mailfrom=gmail.com
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=gmail.com header.i=@gmail.com header.b="HuvH1QPM"
Received: by mail-pl1-f171.google.com with SMTP id d9443c01a7336-290aaff555eso26758145ad.2
        for <linux-kernel@vger.kernel.org>; Sat, 18 Oct 2025 05:51:04 -0700 (PDT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=gmail.com; s=20230601; t=1760791864; x=1761396664; darn=vger.kernel.org;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:sender:from:to:cc:subject:date:message-id
         :reply-to;
        bh=vexsKddPKfSOzGf6IKpuorb0FSpK13m//qSzSr6o0Qo=;
        b=HuvH1QPMGhHX0xbDbQ8i4BNDkZKnK5KqQqQnc2cErr/QpeYi4JzgaE04MEy11fcHId
         NTFwTCqG3kVTOGv4gzKPBLwTOIpsZ7uDehCgNEIF5FH3Ee8bHNXUbWUrrGrUZlIoZMXt
         8k95xRu0ysJCX86tzd3diN8b27En8vbu6pl4vgEQgivespG/VsTSOfb4itZ+q3paeVr6
         g3SmEItZ/YkeKIIrJwZTbySmTrRKWQ3ZF7wr8miAD7gOsKw+LiKcqmyFkOfUzMLlVryK
         gw5NXQJnuTfjAcE4SNUbuXR6Y3jzPOkRFX+w4l3TTZwd1BhAsHsA3leEbxZUaeq2ayKZ
         BhBA==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
        d=1e100.net; s=20230601; t=1760791864; x=1761396664;
        h=in-reply-to:content-disposition:mime-version:references:message-id
         :subject:cc:to:from:date:sender:x-gm-message-state:from:to:cc
         :subject:date:message-id:reply-to;
        bh=vexsKddPKfSOzGf6IKpuorb0FSpK13m//qSzSr6o0Qo=;
        b=SMTS4w+LqF23mkSp/Id5UXnXinhYd88LUPQ4MCgAjnqLsichoOjMdWrrRwLvO8HzDB
         6I9yLlld4IenV3gTHSBARqe646hXku9TJaTns/TiwNIpbOuYfxSW1g6bxA96kIc4q31J
         HVNAKERaa3HInxX2hbrtBlucwKATjoTyl6vcFEY3D2QXNwIvJVHS/sbt5np5+gGRAVw2
         zFIb/swGaNqkz2Eyh0Ik08gnvwa5+P8p5lLtcpP0zWd/D2rkhHbQvAoDBX26ErzJY5wp
         QFVZObil7CnF66W012Wd/pwQnqui/LP3sWeTfyfPRnnlLGkzjS3MGV7jvcKQx3knhYBz
         CfrQ==
X-Forwarded-Encrypted: i=1; AJvYcCWjLB4eswmwp+vZ6/FL6HaJ7jcDf7GWtmleBHXzCN2J2JJ9tp8y58xs6hQmQxA560+EHa+9xznnUnpoQEA=@vger.kernel.org
X-Gm-Message-State: AOJu0YzsuX4/YjylgTDVt9DBaXDyIgHWmIXAV0txF7Xv4KN6/nk6Kam8
	cTSci52Yd5U59I6cbLdoZabSSjaSrJbYsY7USNslsZBbZ8D6gp92+Q5g
X-Gm-Gg: ASbGncuzhkO7he2TEZyqSRPBAgobJbANbjdtpUC6WaY3yBA+BEfLPPIZzg9NWMqrgSM
	YvNaotIUAgHLhefmSEN0LhpWDIHOU9OLqx3daajnudvhf9hj1zv+ged0sS2mLBkPn2XGNkzmIMN
	ewrxju6lzfVwfEjrYjbynjqQ2zvSLbc7ND/Hylj4tKDDGVjWbiUiNxDSQnrmHZyKSwiukb1uow7
	KTKjkbbSPJxGm52kk0cw5MYQ16vrtnshWr7IUliitEnvnEIp/vXBG+bCqDpUQY0WObv71dmsFVW
	4zy0OubnPHA9rAqc/95H13jrqwiMZh8PR9n5vqLhydtxwp/tMtCNFFS6tNJ1fB/nLAiNBQdHYp9
	/URLPINvMocDuxHBrrqEBCHeBETxWtjiC76kfu9AdbkBf/6Tz+/oqBur/47NG90j4qUDHe8wvUE
	sjfTRSgUzN4dgvz5uHECtbuMk=
X-Google-Smtp-Source: AGHT+IGSMaPLmNa5+i+Ae8ZNz30JQlwuaKA6ceTbDUL3cL8yRFO4+dERw6BWu9+r+C/GQRQnRay3tw==
X-Received: by 2002:a17:902:f70b:b0:283:c950:a76f with SMTP id d9443c01a7336-290cc2f91d2mr93086815ad.43.1760791864324;
        Sat, 18 Oct 2025 05:51:04 -0700 (PDT)
Received: from server.roeck-us.net ([2600:1700:e321:62f0:da43:aeff:fecc:bfd5])
        by smtp.gmail.com with ESMTPSA id d9443c01a7336-292471fed21sm25570345ad.80.2025.10.18.05.51.03
        (version=TLS1_3 cipher=TLS_AES_256_GCM_SHA384 bits=256/256);
        Sat, 18 Oct 2025 05:51:03 -0700 (PDT)
Sender: Guenter Roeck <groeck7@gmail.com>
Date: Sat, 18 Oct 2025 05:51:02 -0700
From: Guenter Roeck <linux@roeck-us.net>
To: Ankan Biswas <spyjetfayed@gmail.com>
Cc: corbet@lwn.net, skhan@linuxfoundation.org, khalid@kernel.org,
	david.hunter.linux@gmail.com, linux-hwmon@vger.kernel.org,
	linux-doc@vger.kernel.org, linux-kernel@vger.kernel.org,
	linux-kernel-mentees@lists.linux.dev
Subject: Re: [PATCH v2 3/3] Update maxim-ic.com links to analog.com
Message-ID: <245e439a-7077-45b0-bd34-78ed0a573a07@roeck-us.net>
References: <20251017105740.17646-1-spyjetfayed@gmail.com>
 <20251017163501.11285-1-spyjetfayed@gmail.com>
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20251017163501.11285-1-spyjetfayed@gmail.com>

On Fri, Oct 17, 2025 at 10:04:31PM +0530, Ankan Biswas wrote:
> In 2021, Maxim Integrated was acquired by Analog Devices.
> maxim-ic.com & maximintegrated.com links redirect to analog.com.
> 
> Update maxim-ic.com & maximintegrated.com links to analog.com links.
> 
> Signed-off-by: Ankan Biswas <spyjetfayed@gmail.com>

Applied.

Thanks,
Guenter

--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859199.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id CAF572629F;
	Sat, 18 Oct 2025 13:01:27 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760792487; cv=none; b=Yyd+FzpXOEsrcRrniVr2D37qMa28IEwkoE9tD9cdcYXF+5kV4I2AlhyF5yvvxbX2oE/36KPpzJdUZk4yWWGIRtSQHCd1jpWqQ/I10eEOtvhXemBB5iuReX6AU8mnQij08XC9YemjMv47fOkalq9XIufEPh0IR/OTfm0HnbYP+a0=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760792487; c=relaxed/simple;
	bh=783LtfgNMc5nKir4bVhfU1gejI7YUBKrlMTWPWtqf/Y=;
	h=Date:From:To:Cc:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=DxVjJibzMbx0HGhxWZoppWlk4M3Ckb48w4/IN7WC+mEepE54/kNLM7wClUA9z4IqFHNODHJq7uKkX8qF026F6HoLvaxGRdfGtQp+yVMHmGrWJP3ncRpabvTnjaxzAnAvJ8Si80W+YvumcjFD96mdoy+k4k+E99A73hPlhWOCLUM=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=lTHrvA6X; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="lTHrvA6X"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 06158C4CEF8;
	Sat, 18 Oct 2025 13:01:23 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760792487;
	bh=783LtfgNMc5nKir4bVhfU1gejI7YUBKrlMTWPWtqf/Y=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=lTHrvA6XkVq9N+FMwmL9tI+WW5arQfK4XtN12eO07OQhhO0nwi6aGxhYYpalfnOav
	 jeklVLJEnyD5cx385lytsypFTDQ/I+MJgE07KBQbZ2veow/EQWAwTORfRCuk6yvhKm
	 pycvme3csnU3mLMC0miz7BzSeg0RnKcChLl/i+6FqqKF+Oyvk5Zg3oesaFz58mUy/W
	 yOU7WmW6kvXeQdgwgMMCfNqXyg1DKTQkYsFDAvW9QtttziorKHhYzz0nc87CqWxlA4
	 ubx2OCq4KVLGrbE0ZfTl8dX/P4o64tO0of579Z5GbNnG78unKxQhiB5dml2hHvttY8
	 hBU1+bUsDRXOw==
Date: Sat, 18 Oct 2025 14:01:20 +0100
From: Jonathan Cameron <jic23@kernel.org>
To: Daniel Lezcano <daniel.lezcano@linaro.org>
Cc: dlechner@baylibre.com, nuno.sa@analog.com, andy@kernel.org,
 robh@kernel.org, conor+dt@kernel.org, krzk+dt@kernel.org,
 linux-iio@vger.kernel.org, s32@nxp.com, linux-kernel@vger.kernel.org,
 devicetree@vger.kernel.org, chester62515@gmail.com, mbrugger@suse.com,
 ghennadi.procopciuc@oss.nxp.com
Subject: Re: [PATCH v4 2/2] iio: adc: Add the NXP SAR ADC support for the
 s32g2/3 platforms
Message-ID: <20251018140120.0e6132e6@jic23-huawei>
In-Reply-To: <0ac22118-fd0f-49c0-9aa8-5739925587d2@linaro.org>
References: <20250919135618.3065608-1-daniel.lezcano@linaro.org>
	<20250919135618.3065608-3-daniel.lezcano@linaro.org>
	<20250920102742.4cadb734@jic23-huawei>
	<0ac22118-fd0f-49c0-9aa8-5739925587d2@linaro.org>
X-Mailer: Claws Mail 4.3.1 (GTK 3.24.51; x86_64-pc-linux-gnu)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

On Wed, 15 Oct 2025 09:17:40 +0200
Daniel Lezcano <daniel.lezcano@linaro.org> wrote:

> Hi Jonathan,
> 
> back to this driver after the merge window ...
> 
> On 9/20/25 11:27, Jonathan Cameron wrote:
> > On Fri, 19 Sep 2025 15:56:18 +0200
> > Daniel Lezcano <daniel.lezcano@linaro.org> wrote:  
> 
> [ ... ]
> 
> >> +static int nxp_sar_adc_start_conversion(struct nxp_sar_adc *info, bool raw)
> >> +{
> >> +	u32 mcr;
> >> +
> >> +	mcr = readl(NXP_SAR_ADC_MCR(info->regs));
> >> +	mcr |= NXP_SAR_ADC_MCR_NSTART;
> >> +
> >> +	if (raw)
> >> +		mcr &= ~NXP_SAR_ADC_MCR_MODE;
> >> +	else
> >> +		mcr |= NXP_SAR_ADC_MCR_MODE;  
> > 
> > Could use FIELD_MODIFY() for this though saving is minor.
> > Same applies in various other places in this driver (and
> > many others!)  
> 
> [ ... ]
> 
> I gave a try to use the macro FIELD_MODIFY(). Logically, FIELD_GET() 
> should be used too for consistency. From my POV, the result looks less 
> readable than the usual annotation but may be I not used to the FIELD_ 
> usage. Here is a snippet of the changes, do you really want to convert 
> all the driver ?

I'm not against mixing FIELD_GET/PREP etc with single bit booleans where
it make sense.  However this was definitely a 'maybe' type of review
comment for exactly the reasons of inconsistency you've identified.

> 
>          mcr = readl(NXP_SAR_ADC_MCR(info->regs));
> 
>          /* Return the current state. */
> -       pwdn = mcr & NXP_SAR_ADC_MCR_PWDN;
> +       pwdn = FIELD_GET(NXP_SAR_ADC_MCR_PWDN, mcr);

When it's effectively a boolean I'm not fussed if people use FIELD_GET()
or not. 

> 
> -       if (enable)
> -               mcr &= ~NXP_SAR_ADC_MCR_PWDN;
> -       else
> -               mcr |= NXP_SAR_ADC_MCR_PWDN;
> +       /* When the enabled flag is not set, we set the power down bit */
> +       FIELD_MODIFY(NXP_SAR_ADC_MCR_PWDN, &mcr, !enable);
If the comment is more necessary than before (I'm not sure it is but
then I'm more comfortable with these macros than many!) then the modification
probably doesn't make sense.
> 
>          writel(mcr, NXP_SAR_ADC_MCR(info->regs));
> 
> This looks ok but then:
> 
>   {
>          u32 msr, ret;
> 
> -       ret = readl_poll_timeout(NXP_SAR_ADC_MSR(base), msr, !(msr & 
> NXP_SAR_ADC_MSR_CALBUSY),
> +       ret = readl_poll_timeout(NXP_SAR_ADC_MSR(base), msr,
> +                                !FIELD_GET(NXP_SAR_ADC_MSR_CALBUSY, msr)),

Similar to above, For a simple boolean we don't need to extract
the value, a shifted bit is fine.  The compiler might sort that out. I've
never checked.

>                                   NXP_SAR_ADC_WAIT_US,
>                                   NXP_SAR_ADC_CAL_TIMEOUT_US);
>          if (ret)
>                  return ret;
> 
> -       if (msr & NXP_SAR_ADC_MSR_CALFAIL) {
> +       if (FIELD_GET(NXP_SAR_ADC_MSR_CALFAIL, msr)) {
>                  /*
>                   * If the calibration fails, the status register bit
>                   * must be cleared.
>                   */
> -               msr &= ~NXP_SAR_ADC_MSR_CALFAIL;
> +               FIELD_MODIFY(NXP_SAR_ADC_MSR_CALFAIL, &msr, 0x0);
>                  writel(msr, NXP_SAR_ADC_MSR(base));
> 
>                  return -EAGAIN;
> 
> [ ... ]
> 
>          ceocfr = readl(NXP_SAR_ADC_CEOCFR0(info->regs));
> -       if (!(ceocfr & NXP_SAR_ADC_EOC_CH(chan)))
> +
> +       /* FIELD_GET() can not be used here because EOC_CH is not 
> constant */
> +       if (!(NXP_SAR_ADC_EOC_CH(chan) & ceocfr))
>                  return -EIO;
> 
>          cdr = readl(NXP_SAR_ADC_CDR(info->regs, chan));
> -       if (!(cdr & NXP_SAR_ADC_CDR_VALID))
> +       if (!(FIELD_GET(NXP_SAR_ADC_CDR_VALID, cdr)))
>                  return -EIO;
> 
> -       return cdr & NXP_SAR_ADC_CDR_CDATA_MASK;
> +       return FIELD_GET(NXP_SAR_ADC_CDR_CDATA_MASK, cdr);
>   }
> 
> 
> 


--63a6ecb663c1d205
Content-Type: message/rfc822
Content-Disposition: inline; filename="linux-kernel_859200.eml"

Received: from smtp.kernel.org (aws-us-west-2-korg-mail-1.web.codeaurora.org [10.30.226.201])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by smtp.subspace.kernel.org (Postfix) with ESMTPS id 5D197354AFD;
	Sat, 18 Oct 2025 13:02:33 +0000 (UTC)
Authentication-Results: smtp.subspace.kernel.org; arc=none smtp.client-ip=10.30.226.201
ARC-Seal:i=1; a=rsa-sha256; d=subspace.kernel.org; s=arc-20240116;
	t=1760792553; cv=none; b=rHn796kZv9oaS1pQWRLICbrT/HQUVDa+s2pE5szmC4Jrjc8+U9rg2tTTAXDOkqVgN3lqgczLEvZhowA7mms0+s+xG/9YGJAogNrHlFUcgb2CKmmFkszbEkq0JX2tKH2I3G3iJMZHWiAhsrSNaAGHbCPOzYJOLcPuZzUCbV1i5xQ=
ARC-Message-Signature:i=1; a=rsa-sha256; d=subspace.kernel.org;
	s=arc-20240116; t=1760792553; c=relaxed/simple;
	bh=fbWlRvRugAkgLL9tHIqyKSEKl02xBJdfjeCqsGoi/sE=;
	h=Date:From:To:Cc:Subject:Message-ID:In-Reply-To:References:
	 MIME-Version:Content-Type; b=gTYLy7Fe2obzSGqa/HQOtSjs3YLTsvZp+xTBYA1yIru8gCPffBGmx+TIB/zn8OH18MT6++RYugUprEXy+E/aD2AeviAlvCXAcdmSX+CdrMS0TjMW7/JB2ertE6w1QHV2B1ZHmuwccETijHboy1b2zCcfVATNie0as1oeR1woQrM=
ARC-Authentication-Results:i=1; smtp.subspace.kernel.org; dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b=iY6Y0lvO; arc=none smtp.client-ip=10.30.226.201
Authentication-Results: smtp.subspace.kernel.org;
	dkim=pass (2048-bit key) header.d=kernel.org header.i=@kernel.org header.b="iY6Y0lvO"
Received: by smtp.kernel.org (Postfix) with ESMTPSA id 57E81C4CEF8;
	Sat, 18 Oct 2025 13:02:29 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=kernel.org;
	s=k20201202; t=1760792552;
	bh=fbWlRvRugAkgLL9tHIqyKSEKl02xBJdfjeCqsGoi/sE=;
	h=Date:From:To:Cc:Subject:In-Reply-To:References:From;
	b=iY6Y0lvOY5JuRu9P0OgsP3oqRZbIjzNH3nt+O+GkehHLKkU8OY+wBGTMtmkXku/DZ
	 f4WelwD/JqqxCsvfu7uXhiS8yVEUGMyT1npP0gyQRhpwo2FjNYRxXAksWmfF0bDCB9
	 XX8Hn6lnRoPqr+UKGGTdRaS004jRK2KnA8WHf+NUE6UJaI2k58C0eYoS1krHbjbxgS
	 6eF6NoFcus5AwWjVt0mYNNOacySYOwxxk/mDKd5vsdK98cXFFLN+STfKqg5KJ4E4fd
	 6pCZLLsD1LxoURBDk9pUWoRTyLsTihY+ave4AiUZ0ev3CgJVrLEK4ct8I8zjKaknVz
	 14rZOusJtvnPQ==
Date: Sat, 18 Oct 2025 14:02:25 +0100
From: Jonathan Cameron <jic23@kernel.org>
To: Daniel Lezcano <daniel.lezcano@linaro.org>
Cc: dlechner@baylibre.com, nuno.sa@analog.com, andy@kernel.org,
 robh@kernel.org, conor+dt@kernel.org, krzk+dt@kernel.org,
 linux-iio@vger.kernel.org, s32@nxp.com, linux-kernel@vger.kernel.org,
 devicetree@vger.kernel.org, chester62515@gmail.com, mbrugger@suse.com,
 ghennadi.procopciuc@oss.nxp.com
Subject: Re: [PATCH v4 2/2] iio: adc: Add the NXP SAR ADC support for the
 s32g2/3 platforms
Message-ID: <20251018140225.014d858d@jic23-huawei>
In-Reply-To: <1bfa9a86-0a80-416a-b653-8d14f5ebd891@linaro.org>
References: <20250919135618.3065608-1-daniel.lezcano@linaro.org>
	<20250919135618.3065608-3-daniel.lezcano@linaro.org>
	<20250920102742.4cadb734@jic23-huawei>
	<1bfa9a86-0a80-416a-b653-8d14f5ebd891@linaro.org>
X-Mailer: Claws Mail 4.3.1 (GTK 3.24.51; x86_64-pc-linux-gnu)
Precedence: bulk
X-Mailing-List: linux-kernel@vger.kernel.org
List-Id: <linux-kernel.vger.kernel.org>
List-Subscribe: <mailto:linux-kernel+subscribe@vger.kernel.org>
List-Unsubscribe: <mailto:linux-kernel+unsubscribe@vger.kernel.org>
MIME-Version: 1.0
Content-Type: text/plain; charset=US-ASCII
Content-Transfer-Encoding: 7bit

On Fri, 17 Oct 2025 11:01:43 +0200
Daniel Lezcano <daniel.lezcano@linaro.org> wrote:

> On 9/20/25 11:27, Jonathan Cameron wrote:
> 
> [ ... ]
> 
> >> +static void nxp_sar_adc_remove(struct platform_device *pdev)
> >> +{
> >> +	struct iio_dev *indio_dev = platform_get_drvdata(pdev);
> >> +	struct nxp_sar_adc *info = iio_priv(indio_dev);
> >> +
> >> +	nxp_sar_adc_stop_conversion(info);  
> > 
> > I assume this is safe even if no start has happened and is here so
> > that the driver remove can run whilst buffered capture is still going on?
> > That should be done by the core as part of unwinding the register().
> > So I'd not expect a need for it here. This may be a side effect of the
> > ordering issue mixing devm and not causes.  The same is true of some
> > of these other calls - I haven't checked them all.
> >   
> >> +	nxp_sar_adc_channels_disable(info, NXP_SAR_ADC_CH_MASK);
> >> +	nxp_sar_adc_dma_channels_disable(info, NXP_SAR_ADC_CH_MASK);
> >> +	nxp_sar_adc_dma_cfg(info, false);
> >> +	nxp_sar_adc_disable(info);
> >> +	dmaengine_terminate_sync(info->dma_chan);  
> > 
> > Mixing devm and non devm is a never a good idea. Here one possible issue is that
> > the userspace interfaces are only torn down when devm unwind gets to unwind
> > devm_iio_device_register();  That happens well after this code has ripped down the
> > dma engine that a channel read will try to use.  It might be safe to do that
> > but it certainly makes the driver harder to reason about.
> > 
> > A simple 'rule' is once you first call a non devm function in probe that needs unwinding
> > in remove, you cannot call any more devm functions.   Whilst there are lots of cases
> > that are safe, this approach ensures none of the cases that aren't sneak in and makes
> > review straight forward.
> > 
> > devm_add_action_or_reset() can often be used to keep the chain of devm calls running,
> > sometimes covering everything such that we don't need a remove callback.
> >   
> >> +}  
> 
> Actually I think these calls are not relevant. If we remove the 
> nxp_sar_adc_remove() function, the iio core code will unregister the device.
> 
> All operations are doing on/off in the different callbacks (raw_read, 
> postenable, predisable). When the device is unregistered it is not 
> possible to have an ongoing conversion, a channel enabled or the adc 
> enabled, as well as the DMA. IINW, we can just remove this block of code.

Great.

> 
> [ ... ]
> 
> 
> 


--63a6ecb663c1d205--

